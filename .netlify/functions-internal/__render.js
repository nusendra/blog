var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __require = typeof require !== "undefined" ? require : (x) => {
  throw new Error('Dynamic require of "' + x + '" is not supported');
};
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require3() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i = 1; i < meta.length; i++) {
    if (meta[i] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i]}`;
      if (meta[i].indexOf("charset=") === 0) {
        charset = meta[i].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data, encoding);
  buffer.type = type;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* read(parts) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else {
      yield part;
    }
  }
}
function isFormData(object) {
  return typeof object === "object" && typeof object.append === "function" && typeof object.set === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.delete === "function" && typeof object.keys === "function" && typeof object.values === "function" && typeof object.entries === "function" && typeof object.constructor === "function" && object[NAME] === "FormData";
}
function getHeader(boundary, name, field) {
  let header = "";
  header += `${dashes}${boundary}${carriage}`;
  header += `Content-Disposition: form-data; name="${name}"`;
  if (isBlob(field)) {
    header += `; filename="${field.name}"${carriage}`;
    header += `Content-Type: ${field.type || "application/octet-stream"}`;
  }
  return `${header}${carriage.repeat(2)}`;
}
async function* formDataIterator(form, boundary) {
  for (const [name, value] of form) {
    yield getHeader(boundary, name, value);
    if (isBlob(value)) {
      yield* value.stream();
    } else {
      yield value;
    }
    yield carriage;
  }
  yield getFooter(boundary);
}
function getFormDataLength(form, boundary) {
  let length = 0;
  for (const [name, value] of form) {
    length += Buffer.byteLength(getHeader(boundary, name, value));
    if (isBlob(value)) {
      length += value.size;
    } else {
      length += Buffer.byteLength(String(value));
    }
    length += carriageLength;
  }
  length += Buffer.byteLength(getFooter(boundary));
  return length;
}
async function consumeBody(data) {
  if (data[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data.url}`);
  }
  data[INTERNALS$2].disturbed = true;
  if (data[INTERNALS$2].error) {
    throw data[INTERNALS$2].error;
  }
  let { body } = data;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (isBlob(body)) {
    body = body.stream();
  }
  if (Buffer.isBuffer(body)) {
    return body;
  }
  if (!(body instanceof import_stream.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data.size > 0 && accumBytes + chunk.length > data.size) {
        const err = new FetchError(`content size at ${data.url} over limit: ${data.size}`, "max-size");
        body.destroy(err);
        throw err;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    if (error2 instanceof FetchBaseError) {
      throw error2;
    } else {
      throw new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error2.message}`, "system", error2);
    }
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c) => typeof c === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers(headers.reduce((result, value, index2, array) => {
    if (index2 % 2 === 0) {
      result.push(array.slice(index2, index2 + 2));
    }
    return result;
  }, []).filter(([name, value]) => {
    try {
      validateHeaderName(name);
      validateHeaderValue(name, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
async function fetch(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request(url, options_);
    const options3 = getNodeRequestOptions(request);
    if (!supportedSchemas.has(options3.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${options3.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (options3.protocol === "data:") {
      const data = dataUriToBuffer$1(request.url);
      const response2 = new Response(data, { headers: { "Content-Type": data.typeFull } });
      resolve2(response2);
      return;
    }
    const send = (options3.protocol === "https:" ? import_https.default : import_http.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_stream.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send(options3);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (err) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, "system", err));
      finalize();
    });
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location = headers.get("Location");
        const locationURL = location === null ? null : new URL(location, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              try {
                headers.set("Location", locationURL);
              } catch (error2) {
                reject(error2);
              }
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: request.body,
              signal: request.signal,
              size: request.size
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_stream.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            resolve2(fetch(new Request(locationURL, requestOptions)));
            finalize();
            return;
          }
        }
      }
      response_.once("end", () => {
        if (signal) {
          signal.removeEventListener("abort", abortAndFinalize);
        }
      });
      let body = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), (error2) => {
        reject(error2);
      });
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_zlib.default.Z_SYNC_FLUSH,
        finishFlush: import_zlib.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createGunzip(zlibOptions), (error2) => {
          reject(error2);
        });
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), (error2) => {
          reject(error2);
        });
        raw.once("data", (chunk) => {
          if ((chunk[0] & 15) === 8) {
            body = (0, import_stream.pipeline)(body, import_zlib.default.createInflate(), (error2) => {
              reject(error2);
            });
          } else {
            body = (0, import_stream.pipeline)(body, import_zlib.default.createInflateRaw(), (error2) => {
              reject(error2);
            });
          }
          response = new Response(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createBrotliDecompress(), (error2) => {
          reject(error2);
        });
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
var import_http, import_https, import_zlib, import_stream, import_util, import_crypto, import_url, src, dataUriToBuffer$1, Readable, wm, Blob, fetchBlob, Blob$1, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, carriage, dashes, carriageLength, getFooter, getBoundary, INTERNALS$2, Body, clone, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers, redirectStatus, isRedirect, INTERNALS$1, Response, getSearch, INTERNALS, isRequest, Request, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    init_shims();
    import_http = __toModule(require("http"));
    import_https = __toModule(require("https"));
    import_zlib = __toModule(require("zlib"));
    import_stream = __toModule(require("stream"));
    import_util = __toModule(require("util"));
    import_crypto = __toModule(require("crypto"));
    import_url = __toModule(require("url"));
    src = dataUriToBuffer;
    dataUriToBuffer$1 = src;
    ({ Readable } = import_stream.default);
    wm = new WeakMap();
    Blob = class {
      constructor(blobParts = [], options3 = {}) {
        let size = 0;
        const parts = blobParts.map((element) => {
          let buffer;
          if (element instanceof Buffer) {
            buffer = element;
          } else if (ArrayBuffer.isView(element)) {
            buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
          } else if (element instanceof ArrayBuffer) {
            buffer = Buffer.from(element);
          } else if (element instanceof Blob) {
            buffer = element;
          } else {
            buffer = Buffer.from(typeof element === "string" ? element : String(element));
          }
          size += buffer.length || buffer.size || 0;
          return buffer;
        });
        const type = options3.type === void 0 ? "" : String(options3.type).toLowerCase();
        wm.set(this, {
          type: /[^\u0020-\u007E]/.test(type) ? "" : type,
          size,
          parts
        });
      }
      get size() {
        return wm.get(this).size;
      }
      get type() {
        return wm.get(this).type;
      }
      async text() {
        return Buffer.from(await this.arrayBuffer()).toString();
      }
      async arrayBuffer() {
        const data = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of this.stream()) {
          data.set(chunk, offset);
          offset += chunk.length;
        }
        return data.buffer;
      }
      stream() {
        return Readable.from(read(wm.get(this).parts));
      }
      slice(start = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = wm.get(this).parts.values();
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            const chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
            blobParts.push(chunk);
            added += ArrayBuffer.isView(chunk) ? chunk.byteLength : chunk.size;
            relativeStart = 0;
            if (added >= span) {
              break;
            }
          }
        }
        const blob = new Blob([], { type: String(type).toLowerCase() });
        Object.assign(wm.get(blob), { size: span, parts: blobParts });
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.stream === "function" && object.stream.length === 0 && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    fetchBlob = Blob;
    Blob$1 = fetchBlob;
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object) => {
      return typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && typeof object.sort === "function" && object[NAME] === "URLSearchParams";
    };
    isBlob = (object) => {
      return typeof object === "object" && typeof object.arrayBuffer === "function" && typeof object.type === "string" && typeof object.stream === "function" && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[NAME]);
    };
    isAbortSignal = (object) => {
      return typeof object === "object" && object[NAME] === "AbortSignal";
    };
    carriage = "\r\n";
    dashes = "-".repeat(2);
    carriageLength = Buffer.byteLength(carriage);
    getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    getBoundary = () => (0, import_crypto.randomBytes)(8).toString("hex");
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_util.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_stream.default)
          ;
        else if (isFormData(body)) {
          boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          body = import_stream.default.Readable.from(formDataIterator(body, boundary));
        } else {
          body = Buffer.from(String(body));
        }
        this[INTERNALS$2] = {
          body,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_stream.default) {
          body.on("error", (err) => {
            const error2 = err instanceof FetchBaseError ? err : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, "system", err);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance;
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_stream.default && typeof body.getBoundary !== "function") {
        p1 = new import_stream.PassThrough({ highWaterMark });
        p2 = new import_stream.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].body = p1;
        body = p2;
      }
      return body;
    };
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${body.getBoundary()}`;
      }
      if (isFormData(body)) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body instanceof import_stream.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request;
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      if (isFormData(body)) {
        return getFormDataLength(request[INTERNALS$2].boundary);
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else if (isBlob(body)) {
        body.stream().pipe(dest);
      } else if (Buffer.isBuffer(body)) {
        dest.write(body);
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_http.default.validateHeaderName === "function" ? import_http.default.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        const err = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        Object.defineProperty(err, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw err;
      }
    };
    validateHeaderValue = typeof import_http.default.validateHeaderValue === "function" ? import_http.default.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const err = new TypeError(`Invalid character in header content ["${name}"]`);
        Object.defineProperty(err, "code", { value: "ERR_INVALID_CHAR" });
        throw err;
      }
    };
    Headers = class extends URLSearchParams {
      constructor(init2) {
        let result = [];
        if (init2 instanceof Headers) {
          const raw = init2.raw();
          for (const [name, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name, value]));
          }
        } else if (init2 == null)
          ;
        else if (typeof init2 === "object" && !import_util.types.isBoxedPrimitive(init2)) {
          const method = init2[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init2));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init2].map((pair) => {
              if (typeof pair !== "object" || import_util.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name, value]) => {
          validateHeaderName(name);
          validateHeaderValue(name, String(value));
          return [String(name).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name, value) => {
                  validateHeaderName(name);
                  validateHeaderValue(name, String(value));
                  return URLSearchParams.prototype[p].call(receiver, String(name).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name) => {
                  validateHeaderName(name);
                  return URLSearchParams.prototype[p].call(receiver, String(name).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        const values = this.getAll(name);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback) {
        for (const name of this.keys()) {
          callback(this.get(name), name);
        }
      }
      *values() {
        for (const name of this.keys()) {
          yield this.get(name);
        }
      }
      *entries() {
        for (const name of this.keys()) {
          yield [name, this.get(name)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response = class extends Body {
      constructor(body = null, options3 = {}) {
        super(body, options3);
        const status = options3.status || 200;
        const headers = new Headers(options3.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          url: options3.url,
          status,
          statusText: options3.statusText || "",
          headers,
          counter: options3.counter,
          highWaterMark: options3.highWaterMark
        };
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response(clone(this, this.highWaterMark), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response.prototype, {
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    INTERNALS = Symbol("Request internals");
    isRequest = (object) => {
      return typeof object === "object" && typeof object[INTERNALS] === "object";
    };
    Request = class extends Body {
      constructor(input, init2 = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        let method = init2.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init2.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init2.body ? init2.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init2.size || input.size || 0
        });
        const headers = new Headers(init2.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init2) {
          signal = init2.signal;
        }
        if (signal !== null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal");
        }
        this[INTERNALS] = {
          method,
          redirect: init2.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        };
        this.follow = init2.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init2.follow;
        this.compress = init2.compress === void 0 ? input.compress === void 0 ? true : input.compress : init2.compress;
        this.counter = init2.counter || input.counter || 0;
        this.agent = init2.agent || input.agent;
        this.highWaterMark = init2.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init2.insecureHTTPParser || input.insecureHTTPParser || false;
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_url.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      clone() {
        return new Request(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const requestOptions = {
        path: parsedURL.pathname + search,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return requestOptions;
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@sveltejs/adapter-netlify/files/shims.js
var init_shims = __esm({
  "node_modules/@sveltejs/adapter-netlify/files/shims.js"() {
    init_install_fetch();
  }
});

// node_modules/kind-of/index.js
var require_kind_of = __commonJS({
  "node_modules/kind-of/index.js"(exports2, module2) {
    init_shims();
    var toString = Object.prototype.toString;
    module2.exports = function kindOf(val) {
      if (val === void 0)
        return "undefined";
      if (val === null)
        return "null";
      var type = typeof val;
      if (type === "boolean")
        return "boolean";
      if (type === "string")
        return "string";
      if (type === "number")
        return "number";
      if (type === "symbol")
        return "symbol";
      if (type === "function") {
        return isGeneratorFn(val) ? "generatorfunction" : "function";
      }
      if (isArray(val))
        return "array";
      if (isBuffer(val))
        return "buffer";
      if (isArguments(val))
        return "arguments";
      if (isDate(val))
        return "date";
      if (isError(val))
        return "error";
      if (isRegexp(val))
        return "regexp";
      switch (ctorName(val)) {
        case "Symbol":
          return "symbol";
        case "Promise":
          return "promise";
        case "WeakMap":
          return "weakmap";
        case "WeakSet":
          return "weakset";
        case "Map":
          return "map";
        case "Set":
          return "set";
        case "Int8Array":
          return "int8array";
        case "Uint8Array":
          return "uint8array";
        case "Uint8ClampedArray":
          return "uint8clampedarray";
        case "Int16Array":
          return "int16array";
        case "Uint16Array":
          return "uint16array";
        case "Int32Array":
          return "int32array";
        case "Uint32Array":
          return "uint32array";
        case "Float32Array":
          return "float32array";
        case "Float64Array":
          return "float64array";
      }
      if (isGeneratorObj(val)) {
        return "generator";
      }
      type = toString.call(val);
      switch (type) {
        case "[object Object]":
          return "object";
        case "[object Map Iterator]":
          return "mapiterator";
        case "[object Set Iterator]":
          return "setiterator";
        case "[object String Iterator]":
          return "stringiterator";
        case "[object Array Iterator]":
          return "arrayiterator";
      }
      return type.slice(8, -1).toLowerCase().replace(/\s/g, "");
    };
    function ctorName(val) {
      return typeof val.constructor === "function" ? val.constructor.name : null;
    }
    function isArray(val) {
      if (Array.isArray)
        return Array.isArray(val);
      return val instanceof Array;
    }
    function isError(val) {
      return val instanceof Error || typeof val.message === "string" && val.constructor && typeof val.constructor.stackTraceLimit === "number";
    }
    function isDate(val) {
      if (val instanceof Date)
        return true;
      return typeof val.toDateString === "function" && typeof val.getDate === "function" && typeof val.setDate === "function";
    }
    function isRegexp(val) {
      if (val instanceof RegExp)
        return true;
      return typeof val.flags === "string" && typeof val.ignoreCase === "boolean" && typeof val.multiline === "boolean" && typeof val.global === "boolean";
    }
    function isGeneratorFn(name, val) {
      return ctorName(name) === "GeneratorFunction";
    }
    function isGeneratorObj(val) {
      return typeof val.throw === "function" && typeof val.return === "function" && typeof val.next === "function";
    }
    function isArguments(val) {
      try {
        if (typeof val.length === "number" && typeof val.callee === "function") {
          return true;
        }
      } catch (err) {
        if (err.message.indexOf("callee") !== -1) {
          return true;
        }
      }
      return false;
    }
    function isBuffer(val) {
      if (val.constructor && typeof val.constructor.isBuffer === "function") {
        return val.constructor.isBuffer(val);
      }
      return false;
    }
  }
});

// node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  "node_modules/is-extendable/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    module2.exports = function isExtendable(val) {
      return typeof val !== "undefined" && val !== null && (typeof val === "object" || typeof val === "function");
    };
  }
});

// node_modules/extend-shallow/index.js
var require_extend_shallow = __commonJS({
  "node_modules/extend-shallow/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    var isObject = require_is_extendable();
    module2.exports = function extend(o) {
      if (!isObject(o)) {
        o = {};
      }
      var len = arguments.length;
      for (var i = 1; i < len; i++) {
        var obj = arguments[i];
        if (isObject(obj)) {
          assign(o, obj);
        }
      }
      return o;
    };
    function assign(a, b) {
      for (var key in b) {
        if (hasOwn(b, key)) {
          a[key] = b[key];
        }
      }
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  }
});

// node_modules/section-matter/index.js
var require_section_matter = __commonJS({
  "node_modules/section-matter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    var typeOf = require_kind_of();
    var extend = require_extend_shallow();
    module2.exports = function(input, options3) {
      if (typeof options3 === "function") {
        options3 = { parse: options3 };
      }
      var file = toObject(input);
      var defaults = { section_delimiter: "---", parse: identity };
      var opts = extend({}, defaults, options3);
      var delim = opts.section_delimiter;
      var lines = file.content.split(/\r?\n/);
      var sections = null;
      var section = createSection();
      var content = [];
      var stack = [];
      function initSections(val) {
        file.content = val;
        sections = [];
        content = [];
      }
      function closeSection(val) {
        if (stack.length) {
          section.key = getKey(stack[0], delim);
          section.content = val;
          opts.parse(section, sections);
          sections.push(section);
          section = createSection();
          content = [];
          stack = [];
        }
      }
      for (var i = 0; i < lines.length; i++) {
        var line = lines[i];
        var len = stack.length;
        var ln = line.trim();
        if (isDelimiter(ln, delim)) {
          if (ln.length === 3 && i !== 0) {
            if (len === 0 || len === 2) {
              content.push(line);
              continue;
            }
            stack.push(ln);
            section.data = content.join("\n");
            content = [];
            continue;
          }
          if (sections === null) {
            initSections(content.join("\n"));
          }
          if (len === 2) {
            closeSection(content.join("\n"));
          }
          stack.push(ln);
          continue;
        }
        content.push(line);
      }
      if (sections === null) {
        initSections(content.join("\n"));
      } else {
        closeSection(content.join("\n"));
      }
      file.sections = sections;
      return file;
    };
    function isDelimiter(line, delim) {
      if (line.slice(0, delim.length) !== delim) {
        return false;
      }
      if (line.charAt(delim.length + 1) === delim.slice(-1)) {
        return false;
      }
      return true;
    }
    function toObject(input) {
      if (typeOf(input) !== "object") {
        input = { content: input };
      }
      if (typeof input.content !== "string" && !isBuffer(input.content)) {
        throw new TypeError("expected a buffer or string");
      }
      input.content = input.content.toString();
      input.sections = [];
      return input;
    }
    function getKey(val, delim) {
      return val ? val.slice(delim.length).trim() : "";
    }
    function createSection() {
      return { key: "", data: "", content: "" };
    }
    function identity(val) {
      return val;
    }
    function isBuffer(val) {
      if (val && val.constructor && typeof val.constructor.isBuffer === "function") {
        return val.constructor.isBuffer(val);
      }
      return false;
    }
  }
});

// node_modules/js-yaml/lib/js-yaml/common.js
var require_common = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/common.js"(exports2, module2) {
    init_shims();
    "use strict";
    function isNothing(subject) {
      return typeof subject === "undefined" || subject === null;
    }
    function isObject(subject) {
      return typeof subject === "object" && subject !== null;
    }
    function toArray(sequence) {
      if (Array.isArray(sequence))
        return sequence;
      else if (isNothing(sequence))
        return [];
      return [sequence];
    }
    function extend(target, source) {
      var index2, length, key, sourceKeys;
      if (source) {
        sourceKeys = Object.keys(source);
        for (index2 = 0, length = sourceKeys.length; index2 < length; index2 += 1) {
          key = sourceKeys[index2];
          target[key] = source[key];
        }
      }
      return target;
    }
    function repeat(string, count) {
      var result = "", cycle;
      for (cycle = 0; cycle < count; cycle += 1) {
        result += string;
      }
      return result;
    }
    function isNegativeZero(number) {
      return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;
    }
    module2.exports.isNothing = isNothing;
    module2.exports.isObject = isObject;
    module2.exports.toArray = toArray;
    module2.exports.repeat = repeat;
    module2.exports.isNegativeZero = isNegativeZero;
    module2.exports.extend = extend;
  }
});

// node_modules/js-yaml/lib/js-yaml/exception.js
var require_exception = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/exception.js"(exports2, module2) {
    init_shims();
    "use strict";
    function YAMLException(reason, mark) {
      Error.call(this);
      this.name = "YAMLException";
      this.reason = reason;
      this.mark = mark;
      this.message = (this.reason || "(unknown reason)") + (this.mark ? " " + this.mark.toString() : "");
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      } else {
        this.stack = new Error().stack || "";
      }
    }
    YAMLException.prototype = Object.create(Error.prototype);
    YAMLException.prototype.constructor = YAMLException;
    YAMLException.prototype.toString = function toString(compact) {
      var result = this.name + ": ";
      result += this.reason || "(unknown reason)";
      if (!compact && this.mark) {
        result += " " + this.mark.toString();
      }
      return result;
    };
    module2.exports = YAMLException;
  }
});

// node_modules/js-yaml/lib/js-yaml/mark.js
var require_mark = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/mark.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    function Mark(name, buffer, position, line, column) {
      this.name = name;
      this.buffer = buffer;
      this.position = position;
      this.line = line;
      this.column = column;
    }
    Mark.prototype.getSnippet = function getSnippet(indent, maxLength) {
      var head, start, tail, end, snippet;
      if (!this.buffer)
        return null;
      indent = indent || 4;
      maxLength = maxLength || 75;
      head = "";
      start = this.position;
      while (start > 0 && "\0\r\n\x85\u2028\u2029".indexOf(this.buffer.charAt(start - 1)) === -1) {
        start -= 1;
        if (this.position - start > maxLength / 2 - 1) {
          head = " ... ";
          start += 5;
          break;
        }
      }
      tail = "";
      end = this.position;
      while (end < this.buffer.length && "\0\r\n\x85\u2028\u2029".indexOf(this.buffer.charAt(end)) === -1) {
        end += 1;
        if (end - this.position > maxLength / 2 - 1) {
          tail = " ... ";
          end -= 5;
          break;
        }
      }
      snippet = this.buffer.slice(start, end);
      return common.repeat(" ", indent) + head + snippet + tail + "\n" + common.repeat(" ", indent + this.position - start + head.length) + "^";
    };
    Mark.prototype.toString = function toString(compact) {
      var snippet, where = "";
      if (this.name) {
        where += 'in "' + this.name + '" ';
      }
      where += "at line " + (this.line + 1) + ", column " + (this.column + 1);
      if (!compact) {
        snippet = this.getSnippet();
        if (snippet) {
          where += ":\n" + snippet;
        }
      }
      return where;
    };
    module2.exports = Mark;
  }
});

// node_modules/js-yaml/lib/js-yaml/type.js
var require_type = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type.js"(exports2, module2) {
    init_shims();
    "use strict";
    var YAMLException = require_exception();
    var TYPE_CONSTRUCTOR_OPTIONS = [
      "kind",
      "resolve",
      "construct",
      "instanceOf",
      "predicate",
      "represent",
      "defaultStyle",
      "styleAliases"
    ];
    var YAML_NODE_KINDS = [
      "scalar",
      "sequence",
      "mapping"
    ];
    function compileStyleAliases(map) {
      var result = {};
      if (map !== null) {
        Object.keys(map).forEach(function(style) {
          map[style].forEach(function(alias) {
            result[String(alias)] = style;
          });
        });
      }
      return result;
    }
    function Type(tag, options3) {
      options3 = options3 || {};
      Object.keys(options3).forEach(function(name) {
        if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
          throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
        }
      });
      this.tag = tag;
      this.kind = options3["kind"] || null;
      this.resolve = options3["resolve"] || function() {
        return true;
      };
      this.construct = options3["construct"] || function(data) {
        return data;
      };
      this.instanceOf = options3["instanceOf"] || null;
      this.predicate = options3["predicate"] || null;
      this.represent = options3["represent"] || null;
      this.defaultStyle = options3["defaultStyle"] || null;
      this.styleAliases = compileStyleAliases(options3["styleAliases"] || null);
      if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
        throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
      }
    }
    module2.exports = Type;
  }
});

// node_modules/js-yaml/lib/js-yaml/schema.js
var require_schema = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    var YAMLException = require_exception();
    var Type = require_type();
    function compileList(schema, name, result) {
      var exclude = [];
      schema.include.forEach(function(includedSchema) {
        result = compileList(includedSchema, name, result);
      });
      schema[name].forEach(function(currentType) {
        result.forEach(function(previousType, previousIndex) {
          if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {
            exclude.push(previousIndex);
          }
        });
        result.push(currentType);
      });
      return result.filter(function(type, index2) {
        return exclude.indexOf(index2) === -1;
      });
    }
    function compileMap() {
      var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {}
      }, index2, length;
      function collectType(type) {
        result[type.kind][type.tag] = result["fallback"][type.tag] = type;
      }
      for (index2 = 0, length = arguments.length; index2 < length; index2 += 1) {
        arguments[index2].forEach(collectType);
      }
      return result;
    }
    function Schema(definition) {
      this.include = definition.include || [];
      this.implicit = definition.implicit || [];
      this.explicit = definition.explicit || [];
      this.implicit.forEach(function(type) {
        if (type.loadKind && type.loadKind !== "scalar") {
          throw new YAMLException("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");
        }
      });
      this.compiledImplicit = compileList(this, "implicit", []);
      this.compiledExplicit = compileList(this, "explicit", []);
      this.compiledTypeMap = compileMap(this.compiledImplicit, this.compiledExplicit);
    }
    Schema.DEFAULT = null;
    Schema.create = function createSchema() {
      var schemas, types2;
      switch (arguments.length) {
        case 1:
          schemas = Schema.DEFAULT;
          types2 = arguments[0];
          break;
        case 2:
          schemas = arguments[0];
          types2 = arguments[1];
          break;
        default:
          throw new YAMLException("Wrong number of arguments for Schema.create function");
      }
      schemas = common.toArray(schemas);
      types2 = common.toArray(types2);
      if (!schemas.every(function(schema) {
        return schema instanceof Schema;
      })) {
        throw new YAMLException("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");
      }
      if (!types2.every(function(type) {
        return type instanceof Type;
      })) {
        throw new YAMLException("Specified list of YAML types (or a single Type object) contains a non-Type object.");
      }
      return new Schema({
        include: schemas,
        explicit: types2
      });
    };
    module2.exports = Schema;
  }
});

// node_modules/js-yaml/lib/js-yaml/type/str.js
var require_str = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/str.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:str", {
      kind: "scalar",
      construct: function(data) {
        return data !== null ? data : "";
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/seq.js
var require_seq = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/seq.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:seq", {
      kind: "sequence",
      construct: function(data) {
        return data !== null ? data : [];
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/map.js
var require_map = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/map.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:map", {
      kind: "mapping",
      construct: function(data) {
        return data !== null ? data : {};
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/failsafe.js
var require_failsafe = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/failsafe.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Schema = require_schema();
    module2.exports = new Schema({
      explicit: [
        require_str(),
        require_seq(),
        require_map()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/null.js
var require_null = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/null.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    function resolveYamlNull(data) {
      if (data === null)
        return true;
      var max = data.length;
      return max === 1 && data === "~" || max === 4 && (data === "null" || data === "Null" || data === "NULL");
    }
    function constructYamlNull() {
      return null;
    }
    function isNull(object) {
      return object === null;
    }
    module2.exports = new Type("tag:yaml.org,2002:null", {
      kind: "scalar",
      resolve: resolveYamlNull,
      construct: constructYamlNull,
      predicate: isNull,
      represent: {
        canonical: function() {
          return "~";
        },
        lowercase: function() {
          return "null";
        },
        uppercase: function() {
          return "NULL";
        },
        camelcase: function() {
          return "Null";
        }
      },
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/bool.js
var require_bool = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/bool.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    function resolveYamlBoolean(data) {
      if (data === null)
        return false;
      var max = data.length;
      return max === 4 && (data === "true" || data === "True" || data === "TRUE") || max === 5 && (data === "false" || data === "False" || data === "FALSE");
    }
    function constructYamlBoolean(data) {
      return data === "true" || data === "True" || data === "TRUE";
    }
    function isBoolean(object) {
      return Object.prototype.toString.call(object) === "[object Boolean]";
    }
    module2.exports = new Type("tag:yaml.org,2002:bool", {
      kind: "scalar",
      resolve: resolveYamlBoolean,
      construct: constructYamlBoolean,
      predicate: isBoolean,
      represent: {
        lowercase: function(object) {
          return object ? "true" : "false";
        },
        uppercase: function(object) {
          return object ? "TRUE" : "FALSE";
        },
        camelcase: function(object) {
          return object ? "True" : "False";
        }
      },
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/int.js
var require_int = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/int.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    var Type = require_type();
    function isHexCode(c) {
      return 48 <= c && c <= 57 || 65 <= c && c <= 70 || 97 <= c && c <= 102;
    }
    function isOctCode(c) {
      return 48 <= c && c <= 55;
    }
    function isDecCode(c) {
      return 48 <= c && c <= 57;
    }
    function resolveYamlInteger(data) {
      if (data === null)
        return false;
      var max = data.length, index2 = 0, hasDigits = false, ch;
      if (!max)
        return false;
      ch = data[index2];
      if (ch === "-" || ch === "+") {
        ch = data[++index2];
      }
      if (ch === "0") {
        if (index2 + 1 === max)
          return true;
        ch = data[++index2];
        if (ch === "b") {
          index2++;
          for (; index2 < max; index2++) {
            ch = data[index2];
            if (ch === "_")
              continue;
            if (ch !== "0" && ch !== "1")
              return false;
            hasDigits = true;
          }
          return hasDigits && ch !== "_";
        }
        if (ch === "x") {
          index2++;
          for (; index2 < max; index2++) {
            ch = data[index2];
            if (ch === "_")
              continue;
            if (!isHexCode(data.charCodeAt(index2)))
              return false;
            hasDigits = true;
          }
          return hasDigits && ch !== "_";
        }
        for (; index2 < max; index2++) {
          ch = data[index2];
          if (ch === "_")
            continue;
          if (!isOctCode(data.charCodeAt(index2)))
            return false;
          hasDigits = true;
        }
        return hasDigits && ch !== "_";
      }
      if (ch === "_")
        return false;
      for (; index2 < max; index2++) {
        ch = data[index2];
        if (ch === "_")
          continue;
        if (ch === ":")
          break;
        if (!isDecCode(data.charCodeAt(index2))) {
          return false;
        }
        hasDigits = true;
      }
      if (!hasDigits || ch === "_")
        return false;
      if (ch !== ":")
        return true;
      return /^(:[0-5]?[0-9])+$/.test(data.slice(index2));
    }
    function constructYamlInteger(data) {
      var value = data, sign = 1, ch, base2, digits = [];
      if (value.indexOf("_") !== -1) {
        value = value.replace(/_/g, "");
      }
      ch = value[0];
      if (ch === "-" || ch === "+") {
        if (ch === "-")
          sign = -1;
        value = value.slice(1);
        ch = value[0];
      }
      if (value === "0")
        return 0;
      if (ch === "0") {
        if (value[1] === "b")
          return sign * parseInt(value.slice(2), 2);
        if (value[1] === "x")
          return sign * parseInt(value, 16);
        return sign * parseInt(value, 8);
      }
      if (value.indexOf(":") !== -1) {
        value.split(":").forEach(function(v) {
          digits.unshift(parseInt(v, 10));
        });
        value = 0;
        base2 = 1;
        digits.forEach(function(d) {
          value += d * base2;
          base2 *= 60;
        });
        return sign * value;
      }
      return sign * parseInt(value, 10);
    }
    function isInteger(object) {
      return Object.prototype.toString.call(object) === "[object Number]" && (object % 1 === 0 && !common.isNegativeZero(object));
    }
    module2.exports = new Type("tag:yaml.org,2002:int", {
      kind: "scalar",
      resolve: resolveYamlInteger,
      construct: constructYamlInteger,
      predicate: isInteger,
      represent: {
        binary: function(obj) {
          return obj >= 0 ? "0b" + obj.toString(2) : "-0b" + obj.toString(2).slice(1);
        },
        octal: function(obj) {
          return obj >= 0 ? "0" + obj.toString(8) : "-0" + obj.toString(8).slice(1);
        },
        decimal: function(obj) {
          return obj.toString(10);
        },
        hexadecimal: function(obj) {
          return obj >= 0 ? "0x" + obj.toString(16).toUpperCase() : "-0x" + obj.toString(16).toUpperCase().slice(1);
        }
      },
      defaultStyle: "decimal",
      styleAliases: {
        binary: [2, "bin"],
        octal: [8, "oct"],
        decimal: [10, "dec"],
        hexadecimal: [16, "hex"]
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/float.js
var require_float = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/float.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    var Type = require_type();
    var YAML_FLOAT_PATTERN = new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");
    function resolveYamlFloat(data) {
      if (data === null)
        return false;
      if (!YAML_FLOAT_PATTERN.test(data) || data[data.length - 1] === "_") {
        return false;
      }
      return true;
    }
    function constructYamlFloat(data) {
      var value, sign, base2, digits;
      value = data.replace(/_/g, "").toLowerCase();
      sign = value[0] === "-" ? -1 : 1;
      digits = [];
      if ("+-".indexOf(value[0]) >= 0) {
        value = value.slice(1);
      }
      if (value === ".inf") {
        return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
      } else if (value === ".nan") {
        return NaN;
      } else if (value.indexOf(":") >= 0) {
        value.split(":").forEach(function(v) {
          digits.unshift(parseFloat(v, 10));
        });
        value = 0;
        base2 = 1;
        digits.forEach(function(d) {
          value += d * base2;
          base2 *= 60;
        });
        return sign * value;
      }
      return sign * parseFloat(value, 10);
    }
    var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;
    function representYamlFloat(object, style) {
      var res;
      if (isNaN(object)) {
        switch (style) {
          case "lowercase":
            return ".nan";
          case "uppercase":
            return ".NAN";
          case "camelcase":
            return ".NaN";
        }
      } else if (Number.POSITIVE_INFINITY === object) {
        switch (style) {
          case "lowercase":
            return ".inf";
          case "uppercase":
            return ".INF";
          case "camelcase":
            return ".Inf";
        }
      } else if (Number.NEGATIVE_INFINITY === object) {
        switch (style) {
          case "lowercase":
            return "-.inf";
          case "uppercase":
            return "-.INF";
          case "camelcase":
            return "-.Inf";
        }
      } else if (common.isNegativeZero(object)) {
        return "-0.0";
      }
      res = object.toString(10);
      return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace("e", ".e") : res;
    }
    function isFloat(object) {
      return Object.prototype.toString.call(object) === "[object Number]" && (object % 1 !== 0 || common.isNegativeZero(object));
    }
    module2.exports = new Type("tag:yaml.org,2002:float", {
      kind: "scalar",
      resolve: resolveYamlFloat,
      construct: constructYamlFloat,
      predicate: isFloat,
      represent: representYamlFloat,
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/json.js
var require_json = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/json.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Schema = require_schema();
    module2.exports = new Schema({
      include: [
        require_failsafe()
      ],
      implicit: [
        require_null(),
        require_bool(),
        require_int(),
        require_float()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/core.js
var require_core = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/core.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Schema = require_schema();
    module2.exports = new Schema({
      include: [
        require_json()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/timestamp.js
var require_timestamp = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/timestamp.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    var YAML_DATE_REGEXP = new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$");
    var YAML_TIMESTAMP_REGEXP = new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");
    function resolveYamlTimestamp(data) {
      if (data === null)
        return false;
      if (YAML_DATE_REGEXP.exec(data) !== null)
        return true;
      if (YAML_TIMESTAMP_REGEXP.exec(data) !== null)
        return true;
      return false;
    }
    function constructYamlTimestamp(data) {
      var match, year, month, day, hour, minute, second, fraction = 0, delta = null, tz_hour, tz_minute, date;
      match = YAML_DATE_REGEXP.exec(data);
      if (match === null)
        match = YAML_TIMESTAMP_REGEXP.exec(data);
      if (match === null)
        throw new Error("Date resolve error");
      year = +match[1];
      month = +match[2] - 1;
      day = +match[3];
      if (!match[4]) {
        return new Date(Date.UTC(year, month, day));
      }
      hour = +match[4];
      minute = +match[5];
      second = +match[6];
      if (match[7]) {
        fraction = match[7].slice(0, 3);
        while (fraction.length < 3) {
          fraction += "0";
        }
        fraction = +fraction;
      }
      if (match[9]) {
        tz_hour = +match[10];
        tz_minute = +(match[11] || 0);
        delta = (tz_hour * 60 + tz_minute) * 6e4;
        if (match[9] === "-")
          delta = -delta;
      }
      date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));
      if (delta)
        date.setTime(date.getTime() - delta);
      return date;
    }
    function representYamlTimestamp(object) {
      return object.toISOString();
    }
    module2.exports = new Type("tag:yaml.org,2002:timestamp", {
      kind: "scalar",
      resolve: resolveYamlTimestamp,
      construct: constructYamlTimestamp,
      instanceOf: Date,
      represent: representYamlTimestamp
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/merge.js
var require_merge = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/merge.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    function resolveYamlMerge(data) {
      return data === "<<" || data === null;
    }
    module2.exports = new Type("tag:yaml.org,2002:merge", {
      kind: "scalar",
      resolve: resolveYamlMerge
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/binary.js
var require_binary = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/binary.js"(exports2, module2) {
    init_shims();
    "use strict";
    var NodeBuffer;
    try {
      _require = require;
      NodeBuffer = _require("buffer").Buffer;
    } catch (__) {
    }
    var _require;
    var Type = require_type();
    var BASE64_MAP = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";
    function resolveYamlBinary(data) {
      if (data === null)
        return false;
      var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;
      for (idx = 0; idx < max; idx++) {
        code = map.indexOf(data.charAt(idx));
        if (code > 64)
          continue;
        if (code < 0)
          return false;
        bitlen += 6;
      }
      return bitlen % 8 === 0;
    }
    function constructYamlBinary(data) {
      var idx, tailbits, input = data.replace(/[\r\n=]/g, ""), max = input.length, map = BASE64_MAP, bits = 0, result = [];
      for (idx = 0; idx < max; idx++) {
        if (idx % 4 === 0 && idx) {
          result.push(bits >> 16 & 255);
          result.push(bits >> 8 & 255);
          result.push(bits & 255);
        }
        bits = bits << 6 | map.indexOf(input.charAt(idx));
      }
      tailbits = max % 4 * 6;
      if (tailbits === 0) {
        result.push(bits >> 16 & 255);
        result.push(bits >> 8 & 255);
        result.push(bits & 255);
      } else if (tailbits === 18) {
        result.push(bits >> 10 & 255);
        result.push(bits >> 2 & 255);
      } else if (tailbits === 12) {
        result.push(bits >> 4 & 255);
      }
      if (NodeBuffer) {
        return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);
      }
      return result;
    }
    function representYamlBinary(object) {
      var result = "", bits = 0, idx, tail, max = object.length, map = BASE64_MAP;
      for (idx = 0; idx < max; idx++) {
        if (idx % 3 === 0 && idx) {
          result += map[bits >> 18 & 63];
          result += map[bits >> 12 & 63];
          result += map[bits >> 6 & 63];
          result += map[bits & 63];
        }
        bits = (bits << 8) + object[idx];
      }
      tail = max % 3;
      if (tail === 0) {
        result += map[bits >> 18 & 63];
        result += map[bits >> 12 & 63];
        result += map[bits >> 6 & 63];
        result += map[bits & 63];
      } else if (tail === 2) {
        result += map[bits >> 10 & 63];
        result += map[bits >> 4 & 63];
        result += map[bits << 2 & 63];
        result += map[64];
      } else if (tail === 1) {
        result += map[bits >> 2 & 63];
        result += map[bits << 4 & 63];
        result += map[64];
        result += map[64];
      }
      return result;
    }
    function isBinary(object) {
      return NodeBuffer && NodeBuffer.isBuffer(object);
    }
    module2.exports = new Type("tag:yaml.org,2002:binary", {
      kind: "scalar",
      resolve: resolveYamlBinary,
      construct: constructYamlBinary,
      predicate: isBinary,
      represent: representYamlBinary
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/omap.js
var require_omap = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/omap.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    var _toString = Object.prototype.toString;
    function resolveYamlOmap(data) {
      if (data === null)
        return true;
      var objectKeys = [], index2, length, pair, pairKey, pairHasKey, object = data;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        pair = object[index2];
        pairHasKey = false;
        if (_toString.call(pair) !== "[object Object]")
          return false;
        for (pairKey in pair) {
          if (_hasOwnProperty.call(pair, pairKey)) {
            if (!pairHasKey)
              pairHasKey = true;
            else
              return false;
          }
        }
        if (!pairHasKey)
          return false;
        if (objectKeys.indexOf(pairKey) === -1)
          objectKeys.push(pairKey);
        else
          return false;
      }
      return true;
    }
    function constructYamlOmap(data) {
      return data !== null ? data : [];
    }
    module2.exports = new Type("tag:yaml.org,2002:omap", {
      kind: "sequence",
      resolve: resolveYamlOmap,
      construct: constructYamlOmap
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/pairs.js
var require_pairs = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/pairs.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    var _toString = Object.prototype.toString;
    function resolveYamlPairs(data) {
      if (data === null)
        return true;
      var index2, length, pair, keys, result, object = data;
      result = new Array(object.length);
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        pair = object[index2];
        if (_toString.call(pair) !== "[object Object]")
          return false;
        keys = Object.keys(pair);
        if (keys.length !== 1)
          return false;
        result[index2] = [keys[0], pair[keys[0]]];
      }
      return true;
    }
    function constructYamlPairs(data) {
      if (data === null)
        return [];
      var index2, length, pair, keys, result, object = data;
      result = new Array(object.length);
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        pair = object[index2];
        keys = Object.keys(pair);
        result[index2] = [keys[0], pair[keys[0]]];
      }
      return result;
    }
    module2.exports = new Type("tag:yaml.org,2002:pairs", {
      kind: "sequence",
      resolve: resolveYamlPairs,
      construct: constructYamlPairs
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/set.js
var require_set = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/set.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    function resolveYamlSet(data) {
      if (data === null)
        return true;
      var key, object = data;
      for (key in object) {
        if (_hasOwnProperty.call(object, key)) {
          if (object[key] !== null)
            return false;
        }
      }
      return true;
    }
    function constructYamlSet(data) {
      return data !== null ? data : {};
    }
    module2.exports = new Type("tag:yaml.org,2002:set", {
      kind: "mapping",
      resolve: resolveYamlSet,
      construct: constructYamlSet
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/default_safe.js
var require_default_safe = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/default_safe.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Schema = require_schema();
    module2.exports = new Schema({
      include: [
        require_core()
      ],
      implicit: [
        require_timestamp(),
        require_merge()
      ],
      explicit: [
        require_binary(),
        require_omap(),
        require_pairs(),
        require_set()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/undefined.js
var require_undefined = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/undefined.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    function resolveJavascriptUndefined() {
      return true;
    }
    function constructJavascriptUndefined() {
      return void 0;
    }
    function representJavascriptUndefined() {
      return "";
    }
    function isUndefined(object) {
      return typeof object === "undefined";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/undefined", {
      kind: "scalar",
      resolve: resolveJavascriptUndefined,
      construct: constructJavascriptUndefined,
      predicate: isUndefined,
      represent: representJavascriptUndefined
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/regexp.js
var require_regexp = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/regexp.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Type = require_type();
    function resolveJavascriptRegExp(data) {
      if (data === null)
        return false;
      if (data.length === 0)
        return false;
      var regexp = data, tail = /\/([gim]*)$/.exec(data), modifiers = "";
      if (regexp[0] === "/") {
        if (tail)
          modifiers = tail[1];
        if (modifiers.length > 3)
          return false;
        if (regexp[regexp.length - modifiers.length - 1] !== "/")
          return false;
      }
      return true;
    }
    function constructJavascriptRegExp(data) {
      var regexp = data, tail = /\/([gim]*)$/.exec(data), modifiers = "";
      if (regexp[0] === "/") {
        if (tail)
          modifiers = tail[1];
        regexp = regexp.slice(1, regexp.length - modifiers.length - 1);
      }
      return new RegExp(regexp, modifiers);
    }
    function representJavascriptRegExp(object) {
      var result = "/" + object.source + "/";
      if (object.global)
        result += "g";
      if (object.multiline)
        result += "m";
      if (object.ignoreCase)
        result += "i";
      return result;
    }
    function isRegExp(object) {
      return Object.prototype.toString.call(object) === "[object RegExp]";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/regexp", {
      kind: "scalar",
      resolve: resolveJavascriptRegExp,
      construct: constructJavascriptRegExp,
      predicate: isRegExp,
      represent: representJavascriptRegExp
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/function.js
var require_function = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/function.js"(exports2, module2) {
    init_shims();
    "use strict";
    var esprima;
    try {
      _require = require;
      esprima = _require("esprima");
    } catch (_) {
      if (typeof window !== "undefined")
        esprima = window.esprima;
    }
    var _require;
    var Type = require_type();
    function resolveJavascriptFunction(data) {
      if (data === null)
        return false;
      try {
        var source = "(" + data + ")", ast = esprima.parse(source, { range: true });
        if (ast.type !== "Program" || ast.body.length !== 1 || ast.body[0].type !== "ExpressionStatement" || ast.body[0].expression.type !== "ArrowFunctionExpression" && ast.body[0].expression.type !== "FunctionExpression") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    function constructJavascriptFunction(data) {
      var source = "(" + data + ")", ast = esprima.parse(source, { range: true }), params = [], body;
      if (ast.type !== "Program" || ast.body.length !== 1 || ast.body[0].type !== "ExpressionStatement" || ast.body[0].expression.type !== "ArrowFunctionExpression" && ast.body[0].expression.type !== "FunctionExpression") {
        throw new Error("Failed to resolve function");
      }
      ast.body[0].expression.params.forEach(function(param) {
        params.push(param.name);
      });
      body = ast.body[0].expression.body.range;
      if (ast.body[0].expression.body.type === "BlockStatement") {
        return new Function(params, source.slice(body[0] + 1, body[1] - 1));
      }
      return new Function(params, "return " + source.slice(body[0], body[1]));
    }
    function representJavascriptFunction(object) {
      return object.toString();
    }
    function isFunction(object) {
      return Object.prototype.toString.call(object) === "[object Function]";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/function", {
      kind: "scalar",
      resolve: resolveJavascriptFunction,
      construct: constructJavascriptFunction,
      predicate: isFunction,
      represent: representJavascriptFunction
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/default_full.js
var require_default_full = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/default_full.js"(exports2, module2) {
    init_shims();
    "use strict";
    var Schema = require_schema();
    module2.exports = Schema.DEFAULT = new Schema({
      include: [
        require_default_safe()
      ],
      explicit: [
        require_undefined(),
        require_regexp(),
        require_function()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/loader.js
var require_loader = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/loader.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    var YAMLException = require_exception();
    var Mark = require_mark();
    var DEFAULT_SAFE_SCHEMA = require_default_safe();
    var DEFAULT_FULL_SCHEMA = require_default_full();
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    var CONTEXT_FLOW_IN = 1;
    var CONTEXT_FLOW_OUT = 2;
    var CONTEXT_BLOCK_IN = 3;
    var CONTEXT_BLOCK_OUT = 4;
    var CHOMPING_CLIP = 1;
    var CHOMPING_STRIP = 2;
    var CHOMPING_KEEP = 3;
    var PATTERN_NON_PRINTABLE = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
    var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
    var PATTERN_FLOW_INDICATORS = /[,\[\]\{\}]/;
    var PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\-]+!)$/i;
    var PATTERN_TAG_URI = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function is_EOL(c) {
      return c === 10 || c === 13;
    }
    function is_WHITE_SPACE(c) {
      return c === 9 || c === 32;
    }
    function is_WS_OR_EOL(c) {
      return c === 9 || c === 32 || c === 10 || c === 13;
    }
    function is_FLOW_INDICATOR(c) {
      return c === 44 || c === 91 || c === 93 || c === 123 || c === 125;
    }
    function fromHexCode(c) {
      var lc;
      if (48 <= c && c <= 57) {
        return c - 48;
      }
      lc = c | 32;
      if (97 <= lc && lc <= 102) {
        return lc - 97 + 10;
      }
      return -1;
    }
    function escapedHexLen(c) {
      if (c === 120) {
        return 2;
      }
      if (c === 117) {
        return 4;
      }
      if (c === 85) {
        return 8;
      }
      return 0;
    }
    function fromDecimalCode(c) {
      if (48 <= c && c <= 57) {
        return c - 48;
      }
      return -1;
    }
    function simpleEscapeSequence(c) {
      return c === 48 ? "\0" : c === 97 ? "\x07" : c === 98 ? "\b" : c === 116 ? "	" : c === 9 ? "	" : c === 110 ? "\n" : c === 118 ? "\v" : c === 102 ? "\f" : c === 114 ? "\r" : c === 101 ? "" : c === 32 ? " " : c === 34 ? '"' : c === 47 ? "/" : c === 92 ? "\\" : c === 78 ? "\x85" : c === 95 ? "\xA0" : c === 76 ? "\u2028" : c === 80 ? "\u2029" : "";
    }
    function charFromCodepoint(c) {
      if (c <= 65535) {
        return String.fromCharCode(c);
      }
      return String.fromCharCode((c - 65536 >> 10) + 55296, (c - 65536 & 1023) + 56320);
    }
    var simpleEscapeCheck = new Array(256);
    var simpleEscapeMap = new Array(256);
    for (i = 0; i < 256; i++) {
      simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
      simpleEscapeMap[i] = simpleEscapeSequence(i);
    }
    var i;
    function State(input, options3) {
      this.input = input;
      this.filename = options3["filename"] || null;
      this.schema = options3["schema"] || DEFAULT_FULL_SCHEMA;
      this.onWarning = options3["onWarning"] || null;
      this.legacy = options3["legacy"] || false;
      this.json = options3["json"] || false;
      this.listener = options3["listener"] || null;
      this.implicitTypes = this.schema.compiledImplicit;
      this.typeMap = this.schema.compiledTypeMap;
      this.length = input.length;
      this.position = 0;
      this.line = 0;
      this.lineStart = 0;
      this.lineIndent = 0;
      this.documents = [];
    }
    function generateError(state, message) {
      return new YAMLException(message, new Mark(state.filename, state.input, state.position, state.line, state.position - state.lineStart));
    }
    function throwError(state, message) {
      throw generateError(state, message);
    }
    function throwWarning(state, message) {
      if (state.onWarning) {
        state.onWarning.call(null, generateError(state, message));
      }
    }
    var directiveHandlers = {
      YAML: function handleYamlDirective(state, name, args) {
        var match, major, minor;
        if (state.version !== null) {
          throwError(state, "duplication of %YAML directive");
        }
        if (args.length !== 1) {
          throwError(state, "YAML directive accepts exactly one argument");
        }
        match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);
        if (match === null) {
          throwError(state, "ill-formed argument of the YAML directive");
        }
        major = parseInt(match[1], 10);
        minor = parseInt(match[2], 10);
        if (major !== 1) {
          throwError(state, "unacceptable YAML version of the document");
        }
        state.version = args[0];
        state.checkLineBreaks = minor < 2;
        if (minor !== 1 && minor !== 2) {
          throwWarning(state, "unsupported YAML version of the document");
        }
      },
      TAG: function handleTagDirective(state, name, args) {
        var handle, prefix;
        if (args.length !== 2) {
          throwError(state, "TAG directive accepts exactly two arguments");
        }
        handle = args[0];
        prefix = args[1];
        if (!PATTERN_TAG_HANDLE.test(handle)) {
          throwError(state, "ill-formed tag handle (first argument) of the TAG directive");
        }
        if (_hasOwnProperty.call(state.tagMap, handle)) {
          throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
        }
        if (!PATTERN_TAG_URI.test(prefix)) {
          throwError(state, "ill-formed tag prefix (second argument) of the TAG directive");
        }
        state.tagMap[handle] = prefix;
      }
    };
    function captureSegment(state, start, end, checkJson) {
      var _position, _length, _character, _result;
      if (start < end) {
        _result = state.input.slice(start, end);
        if (checkJson) {
          for (_position = 0, _length = _result.length; _position < _length; _position += 1) {
            _character = _result.charCodeAt(_position);
            if (!(_character === 9 || 32 <= _character && _character <= 1114111)) {
              throwError(state, "expected valid JSON character");
            }
          }
        } else if (PATTERN_NON_PRINTABLE.test(_result)) {
          throwError(state, "the stream contains non-printable characters");
        }
        state.result += _result;
      }
    }
    function mergeMappings(state, destination, source, overridableKeys) {
      var sourceKeys, key, index2, quantity;
      if (!common.isObject(source)) {
        throwError(state, "cannot merge mappings; the provided source object is unacceptable");
      }
      sourceKeys = Object.keys(source);
      for (index2 = 0, quantity = sourceKeys.length; index2 < quantity; index2 += 1) {
        key = sourceKeys[index2];
        if (!_hasOwnProperty.call(destination, key)) {
          destination[key] = source[key];
          overridableKeys[key] = true;
        }
      }
    }
    function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {
      var index2, quantity;
      if (Array.isArray(keyNode)) {
        keyNode = Array.prototype.slice.call(keyNode);
        for (index2 = 0, quantity = keyNode.length; index2 < quantity; index2 += 1) {
          if (Array.isArray(keyNode[index2])) {
            throwError(state, "nested arrays are not supported inside keys");
          }
          if (typeof keyNode === "object" && _class(keyNode[index2]) === "[object Object]") {
            keyNode[index2] = "[object Object]";
          }
        }
      }
      if (typeof keyNode === "object" && _class(keyNode) === "[object Object]") {
        keyNode = "[object Object]";
      }
      keyNode = String(keyNode);
      if (_result === null) {
        _result = {};
      }
      if (keyTag === "tag:yaml.org,2002:merge") {
        if (Array.isArray(valueNode)) {
          for (index2 = 0, quantity = valueNode.length; index2 < quantity; index2 += 1) {
            mergeMappings(state, _result, valueNode[index2], overridableKeys);
          }
        } else {
          mergeMappings(state, _result, valueNode, overridableKeys);
        }
      } else {
        if (!state.json && !_hasOwnProperty.call(overridableKeys, keyNode) && _hasOwnProperty.call(_result, keyNode)) {
          state.line = startLine || state.line;
          state.position = startPos || state.position;
          throwError(state, "duplicated mapping key");
        }
        _result[keyNode] = valueNode;
        delete overridableKeys[keyNode];
      }
      return _result;
    }
    function readLineBreak(state) {
      var ch;
      ch = state.input.charCodeAt(state.position);
      if (ch === 10) {
        state.position++;
      } else if (ch === 13) {
        state.position++;
        if (state.input.charCodeAt(state.position) === 10) {
          state.position++;
        }
      } else {
        throwError(state, "a line break is expected");
      }
      state.line += 1;
      state.lineStart = state.position;
    }
    function skipSeparationSpace(state, allowComments, checkIndent) {
      var lineBreaks = 0, ch = state.input.charCodeAt(state.position);
      while (ch !== 0) {
        while (is_WHITE_SPACE(ch)) {
          ch = state.input.charCodeAt(++state.position);
        }
        if (allowComments && ch === 35) {
          do {
            ch = state.input.charCodeAt(++state.position);
          } while (ch !== 10 && ch !== 13 && ch !== 0);
        }
        if (is_EOL(ch)) {
          readLineBreak(state);
          ch = state.input.charCodeAt(state.position);
          lineBreaks++;
          state.lineIndent = 0;
          while (ch === 32) {
            state.lineIndent++;
            ch = state.input.charCodeAt(++state.position);
          }
        } else {
          break;
        }
      }
      if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
        throwWarning(state, "deficient indentation");
      }
      return lineBreaks;
    }
    function testDocumentSeparator(state) {
      var _position = state.position, ch;
      ch = state.input.charCodeAt(_position);
      if ((ch === 45 || ch === 46) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {
        _position += 3;
        ch = state.input.charCodeAt(_position);
        if (ch === 0 || is_WS_OR_EOL(ch)) {
          return true;
        }
      }
      return false;
    }
    function writeFoldedLines(state, count) {
      if (count === 1) {
        state.result += " ";
      } else if (count > 1) {
        state.result += common.repeat("\n", count - 1);
      }
    }
    function readPlainScalar(state, nodeIndent, withinFlowCollection) {
      var preceding, following, captureStart, captureEnd, hasPendingContent, _line, _lineStart, _lineIndent, _kind = state.kind, _result = state.result, ch;
      ch = state.input.charCodeAt(state.position);
      if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 35 || ch === 38 || ch === 42 || ch === 33 || ch === 124 || ch === 62 || ch === 39 || ch === 34 || ch === 37 || ch === 64 || ch === 96) {
        return false;
      }
      if (ch === 63 || ch === 45) {
        following = state.input.charCodeAt(state.position + 1);
        if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {
          return false;
        }
      }
      state.kind = "scalar";
      state.result = "";
      captureStart = captureEnd = state.position;
      hasPendingContent = false;
      while (ch !== 0) {
        if (ch === 58) {
          following = state.input.charCodeAt(state.position + 1);
          if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {
            break;
          }
        } else if (ch === 35) {
          preceding = state.input.charCodeAt(state.position - 1);
          if (is_WS_OR_EOL(preceding)) {
            break;
          }
        } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {
          break;
        } else if (is_EOL(ch)) {
          _line = state.line;
          _lineStart = state.lineStart;
          _lineIndent = state.lineIndent;
          skipSeparationSpace(state, false, -1);
          if (state.lineIndent >= nodeIndent) {
            hasPendingContent = true;
            ch = state.input.charCodeAt(state.position);
            continue;
          } else {
            state.position = captureEnd;
            state.line = _line;
            state.lineStart = _lineStart;
            state.lineIndent = _lineIndent;
            break;
          }
        }
        if (hasPendingContent) {
          captureSegment(state, captureStart, captureEnd, false);
          writeFoldedLines(state, state.line - _line);
          captureStart = captureEnd = state.position;
          hasPendingContent = false;
        }
        if (!is_WHITE_SPACE(ch)) {
          captureEnd = state.position + 1;
        }
        ch = state.input.charCodeAt(++state.position);
      }
      captureSegment(state, captureStart, captureEnd, false);
      if (state.result) {
        return true;
      }
      state.kind = _kind;
      state.result = _result;
      return false;
    }
    function readSingleQuotedScalar(state, nodeIndent) {
      var ch, captureStart, captureEnd;
      ch = state.input.charCodeAt(state.position);
      if (ch !== 39) {
        return false;
      }
      state.kind = "scalar";
      state.result = "";
      state.position++;
      captureStart = captureEnd = state.position;
      while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 39) {
          captureSegment(state, captureStart, state.position, true);
          ch = state.input.charCodeAt(++state.position);
          if (ch === 39) {
            captureStart = state.position;
            state.position++;
            captureEnd = state.position;
          } else {
            return true;
          }
        } else if (is_EOL(ch)) {
          captureSegment(state, captureStart, captureEnd, true);
          writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
          captureStart = captureEnd = state.position;
        } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
          throwError(state, "unexpected end of the document within a single quoted scalar");
        } else {
          state.position++;
          captureEnd = state.position;
        }
      }
      throwError(state, "unexpected end of the stream within a single quoted scalar");
    }
    function readDoubleQuotedScalar(state, nodeIndent) {
      var captureStart, captureEnd, hexLength, hexResult, tmp, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch !== 34) {
        return false;
      }
      state.kind = "scalar";
      state.result = "";
      state.position++;
      captureStart = captureEnd = state.position;
      while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 34) {
          captureSegment(state, captureStart, state.position, true);
          state.position++;
          return true;
        } else if (ch === 92) {
          captureSegment(state, captureStart, state.position, true);
          ch = state.input.charCodeAt(++state.position);
          if (is_EOL(ch)) {
            skipSeparationSpace(state, false, nodeIndent);
          } else if (ch < 256 && simpleEscapeCheck[ch]) {
            state.result += simpleEscapeMap[ch];
            state.position++;
          } else if ((tmp = escapedHexLen(ch)) > 0) {
            hexLength = tmp;
            hexResult = 0;
            for (; hexLength > 0; hexLength--) {
              ch = state.input.charCodeAt(++state.position);
              if ((tmp = fromHexCode(ch)) >= 0) {
                hexResult = (hexResult << 4) + tmp;
              } else {
                throwError(state, "expected hexadecimal character");
              }
            }
            state.result += charFromCodepoint(hexResult);
            state.position++;
          } else {
            throwError(state, "unknown escape sequence");
          }
          captureStart = captureEnd = state.position;
        } else if (is_EOL(ch)) {
          captureSegment(state, captureStart, captureEnd, true);
          writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
          captureStart = captureEnd = state.position;
        } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
          throwError(state, "unexpected end of the document within a double quoted scalar");
        } else {
          state.position++;
          captureEnd = state.position;
        }
      }
      throwError(state, "unexpected end of the stream within a double quoted scalar");
    }
    function readFlowCollection(state, nodeIndent) {
      var readNext = true, _line, _tag = state.tag, _result, _anchor = state.anchor, following, terminator, isPair, isExplicitPair, isMapping, overridableKeys = {}, keyNode, keyTag, valueNode, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch === 91) {
        terminator = 93;
        isMapping = false;
        _result = [];
      } else if (ch === 123) {
        terminator = 125;
        isMapping = true;
        _result = {};
      } else {
        return false;
      }
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
      }
      ch = state.input.charCodeAt(++state.position);
      while (ch !== 0) {
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if (ch === terminator) {
          state.position++;
          state.tag = _tag;
          state.anchor = _anchor;
          state.kind = isMapping ? "mapping" : "sequence";
          state.result = _result;
          return true;
        } else if (!readNext) {
          throwError(state, "missed comma between flow collection entries");
        }
        keyTag = keyNode = valueNode = null;
        isPair = isExplicitPair = false;
        if (ch === 63) {
          following = state.input.charCodeAt(state.position + 1);
          if (is_WS_OR_EOL(following)) {
            isPair = isExplicitPair = true;
            state.position++;
            skipSeparationSpace(state, true, nodeIndent);
          }
        }
        _line = state.line;
        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
        keyTag = state.tag;
        keyNode = state.result;
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if ((isExplicitPair || state.line === _line) && ch === 58) {
          isPair = true;
          ch = state.input.charCodeAt(++state.position);
          skipSeparationSpace(state, true, nodeIndent);
          composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
          valueNode = state.result;
        }
        if (isMapping) {
          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
        } else if (isPair) {
          _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
        } else {
          _result.push(keyNode);
        }
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if (ch === 44) {
          readNext = true;
          ch = state.input.charCodeAt(++state.position);
        } else {
          readNext = false;
        }
      }
      throwError(state, "unexpected end of the stream within a flow collection");
    }
    function readBlockScalar(state, nodeIndent) {
      var captureStart, folding, chomping = CHOMPING_CLIP, didReadContent = false, detectedIndent = false, textIndent = nodeIndent, emptyLines = 0, atMoreIndented = false, tmp, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch === 124) {
        folding = false;
      } else if (ch === 62) {
        folding = true;
      } else {
        return false;
      }
      state.kind = "scalar";
      state.result = "";
      while (ch !== 0) {
        ch = state.input.charCodeAt(++state.position);
        if (ch === 43 || ch === 45) {
          if (CHOMPING_CLIP === chomping) {
            chomping = ch === 43 ? CHOMPING_KEEP : CHOMPING_STRIP;
          } else {
            throwError(state, "repeat of a chomping mode identifier");
          }
        } else if ((tmp = fromDecimalCode(ch)) >= 0) {
          if (tmp === 0) {
            throwError(state, "bad explicit indentation width of a block scalar; it cannot be less than one");
          } else if (!detectedIndent) {
            textIndent = nodeIndent + tmp - 1;
            detectedIndent = true;
          } else {
            throwError(state, "repeat of an indentation width identifier");
          }
        } else {
          break;
        }
      }
      if (is_WHITE_SPACE(ch)) {
        do {
          ch = state.input.charCodeAt(++state.position);
        } while (is_WHITE_SPACE(ch));
        if (ch === 35) {
          do {
            ch = state.input.charCodeAt(++state.position);
          } while (!is_EOL(ch) && ch !== 0);
        }
      }
      while (ch !== 0) {
        readLineBreak(state);
        state.lineIndent = 0;
        ch = state.input.charCodeAt(state.position);
        while ((!detectedIndent || state.lineIndent < textIndent) && ch === 32) {
          state.lineIndent++;
          ch = state.input.charCodeAt(++state.position);
        }
        if (!detectedIndent && state.lineIndent > textIndent) {
          textIndent = state.lineIndent;
        }
        if (is_EOL(ch)) {
          emptyLines++;
          continue;
        }
        if (state.lineIndent < textIndent) {
          if (chomping === CHOMPING_KEEP) {
            state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
          } else if (chomping === CHOMPING_CLIP) {
            if (didReadContent) {
              state.result += "\n";
            }
          }
          break;
        }
        if (folding) {
          if (is_WHITE_SPACE(ch)) {
            atMoreIndented = true;
            state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
          } else if (atMoreIndented) {
            atMoreIndented = false;
            state.result += common.repeat("\n", emptyLines + 1);
          } else if (emptyLines === 0) {
            if (didReadContent) {
              state.result += " ";
            }
          } else {
            state.result += common.repeat("\n", emptyLines);
          }
        } else {
          state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
        }
        didReadContent = true;
        detectedIndent = true;
        emptyLines = 0;
        captureStart = state.position;
        while (!is_EOL(ch) && ch !== 0) {
          ch = state.input.charCodeAt(++state.position);
        }
        captureSegment(state, captureStart, state.position, false);
      }
      return true;
    }
    function readBlockSequence(state, nodeIndent) {
      var _line, _tag = state.tag, _anchor = state.anchor, _result = [], following, detected = false, ch;
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
      }
      ch = state.input.charCodeAt(state.position);
      while (ch !== 0) {
        if (ch !== 45) {
          break;
        }
        following = state.input.charCodeAt(state.position + 1);
        if (!is_WS_OR_EOL(following)) {
          break;
        }
        detected = true;
        state.position++;
        if (skipSeparationSpace(state, true, -1)) {
          if (state.lineIndent <= nodeIndent) {
            _result.push(null);
            ch = state.input.charCodeAt(state.position);
            continue;
          }
        }
        _line = state.line;
        composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
        _result.push(state.result);
        skipSeparationSpace(state, true, -1);
        ch = state.input.charCodeAt(state.position);
        if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {
          throwError(state, "bad indentation of a sequence entry");
        } else if (state.lineIndent < nodeIndent) {
          break;
        }
      }
      if (detected) {
        state.tag = _tag;
        state.anchor = _anchor;
        state.kind = "sequence";
        state.result = _result;
        return true;
      }
      return false;
    }
    function readBlockMapping(state, nodeIndent, flowIndent) {
      var following, allowCompact, _line, _pos, _tag = state.tag, _anchor = state.anchor, _result = {}, overridableKeys = {}, keyTag = null, keyNode = null, valueNode = null, atExplicitKey = false, detected = false, ch;
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
      }
      ch = state.input.charCodeAt(state.position);
      while (ch !== 0) {
        following = state.input.charCodeAt(state.position + 1);
        _line = state.line;
        _pos = state.position;
        if ((ch === 63 || ch === 58) && is_WS_OR_EOL(following)) {
          if (ch === 63) {
            if (atExplicitKey) {
              storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
              keyTag = keyNode = valueNode = null;
            }
            detected = true;
            atExplicitKey = true;
            allowCompact = true;
          } else if (atExplicitKey) {
            atExplicitKey = false;
            allowCompact = true;
          } else {
            throwError(state, "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line");
          }
          state.position += 1;
          ch = following;
        } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
          if (state.line === _line) {
            ch = state.input.charCodeAt(state.position);
            while (is_WHITE_SPACE(ch)) {
              ch = state.input.charCodeAt(++state.position);
            }
            if (ch === 58) {
              ch = state.input.charCodeAt(++state.position);
              if (!is_WS_OR_EOL(ch)) {
                throwError(state, "a whitespace character is expected after the key-value separator within a block mapping");
              }
              if (atExplicitKey) {
                storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
                keyTag = keyNode = valueNode = null;
              }
              detected = true;
              atExplicitKey = false;
              allowCompact = false;
              keyTag = state.tag;
              keyNode = state.result;
            } else if (detected) {
              throwError(state, "can not read an implicit mapping pair; a colon is missed");
            } else {
              state.tag = _tag;
              state.anchor = _anchor;
              return true;
            }
          } else if (detected) {
            throwError(state, "can not read a block mapping entry; a multiline key may not be an implicit key");
          } else {
            state.tag = _tag;
            state.anchor = _anchor;
            return true;
          }
        } else {
          break;
        }
        if (state.line === _line || state.lineIndent > nodeIndent) {
          if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
            if (atExplicitKey) {
              keyNode = state.result;
            } else {
              valueNode = state.result;
            }
          }
          if (!atExplicitKey) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);
            keyTag = keyNode = valueNode = null;
          }
          skipSeparationSpace(state, true, -1);
          ch = state.input.charCodeAt(state.position);
        }
        if (state.lineIndent > nodeIndent && ch !== 0) {
          throwError(state, "bad indentation of a mapping entry");
        } else if (state.lineIndent < nodeIndent) {
          break;
        }
      }
      if (atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
      }
      if (detected) {
        state.tag = _tag;
        state.anchor = _anchor;
        state.kind = "mapping";
        state.result = _result;
      }
      return detected;
    }
    function readTagProperty(state) {
      var _position, isVerbatim = false, isNamed = false, tagHandle, tagName, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch !== 33)
        return false;
      if (state.tag !== null) {
        throwError(state, "duplication of a tag property");
      }
      ch = state.input.charCodeAt(++state.position);
      if (ch === 60) {
        isVerbatim = true;
        ch = state.input.charCodeAt(++state.position);
      } else if (ch === 33) {
        isNamed = true;
        tagHandle = "!!";
        ch = state.input.charCodeAt(++state.position);
      } else {
        tagHandle = "!";
      }
      _position = state.position;
      if (isVerbatim) {
        do {
          ch = state.input.charCodeAt(++state.position);
        } while (ch !== 0 && ch !== 62);
        if (state.position < state.length) {
          tagName = state.input.slice(_position, state.position);
          ch = state.input.charCodeAt(++state.position);
        } else {
          throwError(state, "unexpected end of the stream within a verbatim tag");
        }
      } else {
        while (ch !== 0 && !is_WS_OR_EOL(ch)) {
          if (ch === 33) {
            if (!isNamed) {
              tagHandle = state.input.slice(_position - 1, state.position + 1);
              if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
                throwError(state, "named tag handle cannot contain such characters");
              }
              isNamed = true;
              _position = state.position + 1;
            } else {
              throwError(state, "tag suffix cannot contain exclamation marks");
            }
          }
          ch = state.input.charCodeAt(++state.position);
        }
        tagName = state.input.slice(_position, state.position);
        if (PATTERN_FLOW_INDICATORS.test(tagName)) {
          throwError(state, "tag suffix cannot contain flow indicator characters");
        }
      }
      if (tagName && !PATTERN_TAG_URI.test(tagName)) {
        throwError(state, "tag name cannot contain such characters: " + tagName);
      }
      if (isVerbatim) {
        state.tag = tagName;
      } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
        state.tag = state.tagMap[tagHandle] + tagName;
      } else if (tagHandle === "!") {
        state.tag = "!" + tagName;
      } else if (tagHandle === "!!") {
        state.tag = "tag:yaml.org,2002:" + tagName;
      } else {
        throwError(state, 'undeclared tag handle "' + tagHandle + '"');
      }
      return true;
    }
    function readAnchorProperty(state) {
      var _position, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch !== 38)
        return false;
      if (state.anchor !== null) {
        throwError(state, "duplication of an anchor property");
      }
      ch = state.input.charCodeAt(++state.position);
      _position = state.position;
      while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }
      if (state.position === _position) {
        throwError(state, "name of an anchor node must contain at least one character");
      }
      state.anchor = state.input.slice(_position, state.position);
      return true;
    }
    function readAlias(state) {
      var _position, alias, ch;
      ch = state.input.charCodeAt(state.position);
      if (ch !== 42)
        return false;
      ch = state.input.charCodeAt(++state.position);
      _position = state.position;
      while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }
      if (state.position === _position) {
        throwError(state, "name of an alias node must contain at least one character");
      }
      alias = state.input.slice(_position, state.position);
      if (!_hasOwnProperty.call(state.anchorMap, alias)) {
        throwError(state, 'unidentified alias "' + alias + '"');
      }
      state.result = state.anchorMap[alias];
      skipSeparationSpace(state, true, -1);
      return true;
    }
    function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
      var allowBlockStyles, allowBlockScalars, allowBlockCollections, indentStatus = 1, atNewLine = false, hasContent = false, typeIndex, typeQuantity, type, flowIndent, blockIndent;
      if (state.listener !== null) {
        state.listener("open", state);
      }
      state.tag = null;
      state.anchor = null;
      state.kind = null;
      state.result = null;
      allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;
      if (allowToSeek) {
        if (skipSeparationSpace(state, true, -1)) {
          atNewLine = true;
          if (state.lineIndent > parentIndent) {
            indentStatus = 1;
          } else if (state.lineIndent === parentIndent) {
            indentStatus = 0;
          } else if (state.lineIndent < parentIndent) {
            indentStatus = -1;
          }
        }
      }
      if (indentStatus === 1) {
        while (readTagProperty(state) || readAnchorProperty(state)) {
          if (skipSeparationSpace(state, true, -1)) {
            atNewLine = true;
            allowBlockCollections = allowBlockStyles;
            if (state.lineIndent > parentIndent) {
              indentStatus = 1;
            } else if (state.lineIndent === parentIndent) {
              indentStatus = 0;
            } else if (state.lineIndent < parentIndent) {
              indentStatus = -1;
            }
          } else {
            allowBlockCollections = false;
          }
        }
      }
      if (allowBlockCollections) {
        allowBlockCollections = atNewLine || allowCompact;
      }
      if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
        if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
          flowIndent = parentIndent;
        } else {
          flowIndent = parentIndent + 1;
        }
        blockIndent = state.position - state.lineStart;
        if (indentStatus === 1) {
          if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {
            hasContent = true;
          } else {
            if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {
              hasContent = true;
            } else if (readAlias(state)) {
              hasContent = true;
              if (state.tag !== null || state.anchor !== null) {
                throwError(state, "alias node should not have any properties");
              }
            } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
              hasContent = true;
              if (state.tag === null) {
                state.tag = "?";
              }
            }
            if (state.anchor !== null) {
              state.anchorMap[state.anchor] = state.result;
            }
          }
        } else if (indentStatus === 0) {
          hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
        }
      }
      if (state.tag !== null && state.tag !== "!") {
        if (state.tag === "?") {
          if (state.result !== null && state.kind !== "scalar") {
            throwError(state, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + state.kind + '"');
          }
          for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {
            type = state.implicitTypes[typeIndex];
            if (type.resolve(state.result)) {
              state.result = type.construct(state.result);
              state.tag = type.tag;
              if (state.anchor !== null) {
                state.anchorMap[state.anchor] = state.result;
              }
              break;
            }
          }
        } else if (_hasOwnProperty.call(state.typeMap[state.kind || "fallback"], state.tag)) {
          type = state.typeMap[state.kind || "fallback"][state.tag];
          if (state.result !== null && type.kind !== state.kind) {
            throwError(state, "unacceptable node kind for !<" + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
          }
          if (!type.resolve(state.result)) {
            throwError(state, "cannot resolve a node with !<" + state.tag + "> explicit tag");
          } else {
            state.result = type.construct(state.result);
            if (state.anchor !== null) {
              state.anchorMap[state.anchor] = state.result;
            }
          }
        } else {
          throwError(state, "unknown tag !<" + state.tag + ">");
        }
      }
      if (state.listener !== null) {
        state.listener("close", state);
      }
      return state.tag !== null || state.anchor !== null || hasContent;
    }
    function readDocument(state) {
      var documentStart = state.position, _position, directiveName, directiveArgs, hasDirectives = false, ch;
      state.version = null;
      state.checkLineBreaks = state.legacy;
      state.tagMap = {};
      state.anchorMap = {};
      while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        skipSeparationSpace(state, true, -1);
        ch = state.input.charCodeAt(state.position);
        if (state.lineIndent > 0 || ch !== 37) {
          break;
        }
        hasDirectives = true;
        ch = state.input.charCodeAt(++state.position);
        _position = state.position;
        while (ch !== 0 && !is_WS_OR_EOL(ch)) {
          ch = state.input.charCodeAt(++state.position);
        }
        directiveName = state.input.slice(_position, state.position);
        directiveArgs = [];
        if (directiveName.length < 1) {
          throwError(state, "directive name must not be less than one character in length");
        }
        while (ch !== 0) {
          while (is_WHITE_SPACE(ch)) {
            ch = state.input.charCodeAt(++state.position);
          }
          if (ch === 35) {
            do {
              ch = state.input.charCodeAt(++state.position);
            } while (ch !== 0 && !is_EOL(ch));
            break;
          }
          if (is_EOL(ch))
            break;
          _position = state.position;
          while (ch !== 0 && !is_WS_OR_EOL(ch)) {
            ch = state.input.charCodeAt(++state.position);
          }
          directiveArgs.push(state.input.slice(_position, state.position));
        }
        if (ch !== 0)
          readLineBreak(state);
        if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
          directiveHandlers[directiveName](state, directiveName, directiveArgs);
        } else {
          throwWarning(state, 'unknown document directive "' + directiveName + '"');
        }
      }
      skipSeparationSpace(state, true, -1);
      if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 45 && state.input.charCodeAt(state.position + 1) === 45 && state.input.charCodeAt(state.position + 2) === 45) {
        state.position += 3;
        skipSeparationSpace(state, true, -1);
      } else if (hasDirectives) {
        throwError(state, "directives end mark is expected");
      }
      composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
      skipSeparationSpace(state, true, -1);
      if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
        throwWarning(state, "non-ASCII line breaks are interpreted as content");
      }
      state.documents.push(state.result);
      if (state.position === state.lineStart && testDocumentSeparator(state)) {
        if (state.input.charCodeAt(state.position) === 46) {
          state.position += 3;
          skipSeparationSpace(state, true, -1);
        }
        return;
      }
      if (state.position < state.length - 1) {
        throwError(state, "end of the stream or a document separator is expected");
      } else {
        return;
      }
    }
    function loadDocuments(input, options3) {
      input = String(input);
      options3 = options3 || {};
      if (input.length !== 0) {
        if (input.charCodeAt(input.length - 1) !== 10 && input.charCodeAt(input.length - 1) !== 13) {
          input += "\n";
        }
        if (input.charCodeAt(0) === 65279) {
          input = input.slice(1);
        }
      }
      var state = new State(input, options3);
      var nullpos = input.indexOf("\0");
      if (nullpos !== -1) {
        state.position = nullpos;
        throwError(state, "null byte is not allowed in input");
      }
      state.input += "\0";
      while (state.input.charCodeAt(state.position) === 32) {
        state.lineIndent += 1;
        state.position += 1;
      }
      while (state.position < state.length - 1) {
        readDocument(state);
      }
      return state.documents;
    }
    function loadAll(input, iterator, options3) {
      if (iterator !== null && typeof iterator === "object" && typeof options3 === "undefined") {
        options3 = iterator;
        iterator = null;
      }
      var documents = loadDocuments(input, options3);
      if (typeof iterator !== "function") {
        return documents;
      }
      for (var index2 = 0, length = documents.length; index2 < length; index2 += 1) {
        iterator(documents[index2]);
      }
    }
    function load2(input, options3) {
      var documents = loadDocuments(input, options3);
      if (documents.length === 0) {
        return void 0;
      } else if (documents.length === 1) {
        return documents[0];
      }
      throw new YAMLException("expected a single document in the stream, but found more");
    }
    function safeLoadAll(input, iterator, options3) {
      if (typeof iterator === "object" && iterator !== null && typeof options3 === "undefined") {
        options3 = iterator;
        iterator = null;
      }
      return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options3));
    }
    function safeLoad(input, options3) {
      return load2(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options3));
    }
    module2.exports.loadAll = loadAll;
    module2.exports.load = load2;
    module2.exports.safeLoadAll = safeLoadAll;
    module2.exports.safeLoad = safeLoad;
  }
});

// node_modules/js-yaml/lib/js-yaml/dumper.js
var require_dumper = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/dumper.js"(exports2, module2) {
    init_shims();
    "use strict";
    var common = require_common();
    var YAMLException = require_exception();
    var DEFAULT_FULL_SCHEMA = require_default_full();
    var DEFAULT_SAFE_SCHEMA = require_default_safe();
    var _toString = Object.prototype.toString;
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    var CHAR_TAB = 9;
    var CHAR_LINE_FEED = 10;
    var CHAR_CARRIAGE_RETURN = 13;
    var CHAR_SPACE = 32;
    var CHAR_EXCLAMATION = 33;
    var CHAR_DOUBLE_QUOTE = 34;
    var CHAR_SHARP = 35;
    var CHAR_PERCENT = 37;
    var CHAR_AMPERSAND = 38;
    var CHAR_SINGLE_QUOTE = 39;
    var CHAR_ASTERISK = 42;
    var CHAR_COMMA = 44;
    var CHAR_MINUS = 45;
    var CHAR_COLON = 58;
    var CHAR_EQUALS = 61;
    var CHAR_GREATER_THAN = 62;
    var CHAR_QUESTION = 63;
    var CHAR_COMMERCIAL_AT = 64;
    var CHAR_LEFT_SQUARE_BRACKET = 91;
    var CHAR_RIGHT_SQUARE_BRACKET = 93;
    var CHAR_GRAVE_ACCENT = 96;
    var CHAR_LEFT_CURLY_BRACKET = 123;
    var CHAR_VERTICAL_LINE = 124;
    var CHAR_RIGHT_CURLY_BRACKET = 125;
    var ESCAPE_SEQUENCES = {};
    ESCAPE_SEQUENCES[0] = "\\0";
    ESCAPE_SEQUENCES[7] = "\\a";
    ESCAPE_SEQUENCES[8] = "\\b";
    ESCAPE_SEQUENCES[9] = "\\t";
    ESCAPE_SEQUENCES[10] = "\\n";
    ESCAPE_SEQUENCES[11] = "\\v";
    ESCAPE_SEQUENCES[12] = "\\f";
    ESCAPE_SEQUENCES[13] = "\\r";
    ESCAPE_SEQUENCES[27] = "\\e";
    ESCAPE_SEQUENCES[34] = '\\"';
    ESCAPE_SEQUENCES[92] = "\\\\";
    ESCAPE_SEQUENCES[133] = "\\N";
    ESCAPE_SEQUENCES[160] = "\\_";
    ESCAPE_SEQUENCES[8232] = "\\L";
    ESCAPE_SEQUENCES[8233] = "\\P";
    var DEPRECATED_BOOLEANS_SYNTAX = [
      "y",
      "Y",
      "yes",
      "Yes",
      "YES",
      "on",
      "On",
      "ON",
      "n",
      "N",
      "no",
      "No",
      "NO",
      "off",
      "Off",
      "OFF"
    ];
    function compileStyleMap(schema, map) {
      var result, keys, index2, length, tag, style, type;
      if (map === null)
        return {};
      result = {};
      keys = Object.keys(map);
      for (index2 = 0, length = keys.length; index2 < length; index2 += 1) {
        tag = keys[index2];
        style = String(map[tag]);
        if (tag.slice(0, 2) === "!!") {
          tag = "tag:yaml.org,2002:" + tag.slice(2);
        }
        type = schema.compiledTypeMap["fallback"][tag];
        if (type && _hasOwnProperty.call(type.styleAliases, style)) {
          style = type.styleAliases[style];
        }
        result[tag] = style;
      }
      return result;
    }
    function encodeHex(character) {
      var string, handle, length;
      string = character.toString(16).toUpperCase();
      if (character <= 255) {
        handle = "x";
        length = 2;
      } else if (character <= 65535) {
        handle = "u";
        length = 4;
      } else if (character <= 4294967295) {
        handle = "U";
        length = 8;
      } else {
        throw new YAMLException("code point within a string may not be greater than 0xFFFFFFFF");
      }
      return "\\" + handle + common.repeat("0", length - string.length) + string;
    }
    function State(options3) {
      this.schema = options3["schema"] || DEFAULT_FULL_SCHEMA;
      this.indent = Math.max(1, options3["indent"] || 2);
      this.noArrayIndent = options3["noArrayIndent"] || false;
      this.skipInvalid = options3["skipInvalid"] || false;
      this.flowLevel = common.isNothing(options3["flowLevel"]) ? -1 : options3["flowLevel"];
      this.styleMap = compileStyleMap(this.schema, options3["styles"] || null);
      this.sortKeys = options3["sortKeys"] || false;
      this.lineWidth = options3["lineWidth"] || 80;
      this.noRefs = options3["noRefs"] || false;
      this.noCompatMode = options3["noCompatMode"] || false;
      this.condenseFlow = options3["condenseFlow"] || false;
      this.implicitTypes = this.schema.compiledImplicit;
      this.explicitTypes = this.schema.compiledExplicit;
      this.tag = null;
      this.result = "";
      this.duplicates = [];
      this.usedDuplicates = null;
    }
    function indentString(string, spaces) {
      var ind = common.repeat(" ", spaces), position = 0, next = -1, result = "", line, length = string.length;
      while (position < length) {
        next = string.indexOf("\n", position);
        if (next === -1) {
          line = string.slice(position);
          position = length;
        } else {
          line = string.slice(position, next + 1);
          position = next + 1;
        }
        if (line.length && line !== "\n")
          result += ind;
        result += line;
      }
      return result;
    }
    function generateNextLine(state, level) {
      return "\n" + common.repeat(" ", state.indent * level);
    }
    function testImplicitResolving(state, str2) {
      var index2, length, type;
      for (index2 = 0, length = state.implicitTypes.length; index2 < length; index2 += 1) {
        type = state.implicitTypes[index2];
        if (type.resolve(str2)) {
          return true;
        }
      }
      return false;
    }
    function isWhitespace(c) {
      return c === CHAR_SPACE || c === CHAR_TAB;
    }
    function isPrintable(c) {
      return 32 <= c && c <= 126 || 161 <= c && c <= 55295 && c !== 8232 && c !== 8233 || 57344 <= c && c <= 65533 && c !== 65279 || 65536 <= c && c <= 1114111;
    }
    function isNsChar(c) {
      return isPrintable(c) && !isWhitespace(c) && c !== 65279 && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;
    }
    function isPlainSafe(c, prev) {
      return isPrintable(c) && c !== 65279 && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET && c !== CHAR_COLON && (c !== CHAR_SHARP || prev && isNsChar(prev));
    }
    function isPlainSafeFirst(c) {
      return isPrintable(c) && c !== 65279 && !isWhitespace(c) && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;
    }
    function needIndentIndicator(string) {
      var leadingSpaceRe = /^\n* /;
      return leadingSpaceRe.test(string);
    }
    var STYLE_PLAIN = 1;
    var STYLE_SINGLE = 2;
    var STYLE_LITERAL = 3;
    var STYLE_FOLDED = 4;
    var STYLE_DOUBLE = 5;
    function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
      var i;
      var char, prev_char;
      var hasLineBreak = false;
      var hasFoldableLine = false;
      var shouldTrackWidth = lineWidth !== -1;
      var previousLineBreak = -1;
      var plain = isPlainSafeFirst(string.charCodeAt(0)) && !isWhitespace(string.charCodeAt(string.length - 1));
      if (singleLineOnly) {
        for (i = 0; i < string.length; i++) {
          char = string.charCodeAt(i);
          if (!isPrintable(char)) {
            return STYLE_DOUBLE;
          }
          prev_char = i > 0 ? string.charCodeAt(i - 1) : null;
          plain = plain && isPlainSafe(char, prev_char);
        }
      } else {
        for (i = 0; i < string.length; i++) {
          char = string.charCodeAt(i);
          if (char === CHAR_LINE_FEED) {
            hasLineBreak = true;
            if (shouldTrackWidth) {
              hasFoldableLine = hasFoldableLine || i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== " ";
              previousLineBreak = i;
            }
          } else if (!isPrintable(char)) {
            return STYLE_DOUBLE;
          }
          prev_char = i > 0 ? string.charCodeAt(i - 1) : null;
          plain = plain && isPlainSafe(char, prev_char);
        }
        hasFoldableLine = hasFoldableLine || shouldTrackWidth && (i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== " ");
      }
      if (!hasLineBreak && !hasFoldableLine) {
        return plain && !testAmbiguousType(string) ? STYLE_PLAIN : STYLE_SINGLE;
      }
      if (indentPerLevel > 9 && needIndentIndicator(string)) {
        return STYLE_DOUBLE;
      }
      return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
    }
    function writeScalar(state, string, level, iskey) {
      state.dump = function() {
        if (string.length === 0) {
          return "''";
        }
        if (!state.noCompatMode && DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {
          return "'" + string + "'";
        }
        var indent = state.indent * Math.max(1, level);
        var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);
        var singleLineOnly = iskey || state.flowLevel > -1 && level >= state.flowLevel;
        function testAmbiguity(string2) {
          return testImplicitResolving(state, string2);
        }
        switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
          case STYLE_PLAIN:
            return string;
          case STYLE_SINGLE:
            return "'" + string.replace(/'/g, "''") + "'";
          case STYLE_LITERAL:
            return "|" + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));
          case STYLE_FOLDED:
            return ">" + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
          case STYLE_DOUBLE:
            return '"' + escapeString(string, lineWidth) + '"';
          default:
            throw new YAMLException("impossible error: invalid scalar style");
        }
      }();
    }
    function blockHeader(string, indentPerLevel) {
      var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : "";
      var clip = string[string.length - 1] === "\n";
      var keep = clip && (string[string.length - 2] === "\n" || string === "\n");
      var chomp = keep ? "+" : clip ? "" : "-";
      return indentIndicator + chomp + "\n";
    }
    function dropEndingNewline(string) {
      return string[string.length - 1] === "\n" ? string.slice(0, -1) : string;
    }
    function foldString(string, width) {
      var lineRe = /(\n+)([^\n]*)/g;
      var result = function() {
        var nextLF = string.indexOf("\n");
        nextLF = nextLF !== -1 ? nextLF : string.length;
        lineRe.lastIndex = nextLF;
        return foldLine(string.slice(0, nextLF), width);
      }();
      var prevMoreIndented = string[0] === "\n" || string[0] === " ";
      var moreIndented;
      var match;
      while (match = lineRe.exec(string)) {
        var prefix = match[1], line = match[2];
        moreIndented = line[0] === " ";
        result += prefix + (!prevMoreIndented && !moreIndented && line !== "" ? "\n" : "") + foldLine(line, width);
        prevMoreIndented = moreIndented;
      }
      return result;
    }
    function foldLine(line, width) {
      if (line === "" || line[0] === " ")
        return line;
      var breakRe = / [^ ]/g;
      var match;
      var start = 0, end, curr = 0, next = 0;
      var result = "";
      while (match = breakRe.exec(line)) {
        next = match.index;
        if (next - start > width) {
          end = curr > start ? curr : next;
          result += "\n" + line.slice(start, end);
          start = end + 1;
        }
        curr = next;
      }
      result += "\n";
      if (line.length - start > width && curr > start) {
        result += line.slice(start, curr) + "\n" + line.slice(curr + 1);
      } else {
        result += line.slice(start);
      }
      return result.slice(1);
    }
    function escapeString(string) {
      var result = "";
      var char, nextChar;
      var escapeSeq;
      for (var i = 0; i < string.length; i++) {
        char = string.charCodeAt(i);
        if (char >= 55296 && char <= 56319) {
          nextChar = string.charCodeAt(i + 1);
          if (nextChar >= 56320 && nextChar <= 57343) {
            result += encodeHex((char - 55296) * 1024 + nextChar - 56320 + 65536);
            i++;
            continue;
          }
        }
        escapeSeq = ESCAPE_SEQUENCES[char];
        result += !escapeSeq && isPrintable(char) ? string[i] : escapeSeq || encodeHex(char);
      }
      return result;
    }
    function writeFlowSequence(state, level, object) {
      var _result = "", _tag = state.tag, index2, length;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        if (writeNode(state, level, object[index2], false, false)) {
          if (index2 !== 0)
            _result += "," + (!state.condenseFlow ? " " : "");
          _result += state.dump;
        }
      }
      state.tag = _tag;
      state.dump = "[" + _result + "]";
    }
    function writeBlockSequence(state, level, object, compact) {
      var _result = "", _tag = state.tag, index2, length;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        if (writeNode(state, level + 1, object[index2], true, true)) {
          if (!compact || index2 !== 0) {
            _result += generateNextLine(state, level);
          }
          if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
            _result += "-";
          } else {
            _result += "- ";
          }
          _result += state.dump;
        }
      }
      state.tag = _tag;
      state.dump = _result || "[]";
    }
    function writeFlowMapping(state, level, object) {
      var _result = "", _tag = state.tag, objectKeyList = Object.keys(object), index2, length, objectKey, objectValue, pairBuffer;
      for (index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1) {
        pairBuffer = "";
        if (index2 !== 0)
          pairBuffer += ", ";
        if (state.condenseFlow)
          pairBuffer += '"';
        objectKey = objectKeyList[index2];
        objectValue = object[objectKey];
        if (!writeNode(state, level, objectKey, false, false)) {
          continue;
        }
        if (state.dump.length > 1024)
          pairBuffer += "? ";
        pairBuffer += state.dump + (state.condenseFlow ? '"' : "") + ":" + (state.condenseFlow ? "" : " ");
        if (!writeNode(state, level, objectValue, false, false)) {
          continue;
        }
        pairBuffer += state.dump;
        _result += pairBuffer;
      }
      state.tag = _tag;
      state.dump = "{" + _result + "}";
    }
    function writeBlockMapping(state, level, object, compact) {
      var _result = "", _tag = state.tag, objectKeyList = Object.keys(object), index2, length, objectKey, objectValue, explicitPair, pairBuffer;
      if (state.sortKeys === true) {
        objectKeyList.sort();
      } else if (typeof state.sortKeys === "function") {
        objectKeyList.sort(state.sortKeys);
      } else if (state.sortKeys) {
        throw new YAMLException("sortKeys must be a boolean or a function");
      }
      for (index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1) {
        pairBuffer = "";
        if (!compact || index2 !== 0) {
          pairBuffer += generateNextLine(state, level);
        }
        objectKey = objectKeyList[index2];
        objectValue = object[objectKey];
        if (!writeNode(state, level + 1, objectKey, true, true, true)) {
          continue;
        }
        explicitPair = state.tag !== null && state.tag !== "?" || state.dump && state.dump.length > 1024;
        if (explicitPair) {
          if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
            pairBuffer += "?";
          } else {
            pairBuffer += "? ";
          }
        }
        pairBuffer += state.dump;
        if (explicitPair) {
          pairBuffer += generateNextLine(state, level);
        }
        if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
          continue;
        }
        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
          pairBuffer += ":";
        } else {
          pairBuffer += ": ";
        }
        pairBuffer += state.dump;
        _result += pairBuffer;
      }
      state.tag = _tag;
      state.dump = _result || "{}";
    }
    function detectType(state, object, explicit) {
      var _result, typeList, index2, length, type, style;
      typeList = explicit ? state.explicitTypes : state.implicitTypes;
      for (index2 = 0, length = typeList.length; index2 < length; index2 += 1) {
        type = typeList[index2];
        if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === "object" && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {
          state.tag = explicit ? type.tag : "?";
          if (type.represent) {
            style = state.styleMap[type.tag] || type.defaultStyle;
            if (_toString.call(type.represent) === "[object Function]") {
              _result = type.represent(object, style);
            } else if (_hasOwnProperty.call(type.represent, style)) {
              _result = type.represent[style](object, style);
            } else {
              throw new YAMLException("!<" + type.tag + '> tag resolver accepts not "' + style + '" style');
            }
            state.dump = _result;
          }
          return true;
        }
      }
      return false;
    }
    function writeNode(state, level, object, block, compact, iskey) {
      state.tag = null;
      state.dump = object;
      if (!detectType(state, object, false)) {
        detectType(state, object, true);
      }
      var type = _toString.call(state.dump);
      if (block) {
        block = state.flowLevel < 0 || state.flowLevel > level;
      }
      var objectOrArray = type === "[object Object]" || type === "[object Array]", duplicateIndex, duplicate;
      if (objectOrArray) {
        duplicateIndex = state.duplicates.indexOf(object);
        duplicate = duplicateIndex !== -1;
      }
      if (state.tag !== null && state.tag !== "?" || duplicate || state.indent !== 2 && level > 0) {
        compact = false;
      }
      if (duplicate && state.usedDuplicates[duplicateIndex]) {
        state.dump = "*ref_" + duplicateIndex;
      } else {
        if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
          state.usedDuplicates[duplicateIndex] = true;
        }
        if (type === "[object Object]") {
          if (block && Object.keys(state.dump).length !== 0) {
            writeBlockMapping(state, level, state.dump, compact);
            if (duplicate) {
              state.dump = "&ref_" + duplicateIndex + state.dump;
            }
          } else {
            writeFlowMapping(state, level, state.dump);
            if (duplicate) {
              state.dump = "&ref_" + duplicateIndex + " " + state.dump;
            }
          }
        } else if (type === "[object Array]") {
          var arrayLevel = state.noArrayIndent && level > 0 ? level - 1 : level;
          if (block && state.dump.length !== 0) {
            writeBlockSequence(state, arrayLevel, state.dump, compact);
            if (duplicate) {
              state.dump = "&ref_" + duplicateIndex + state.dump;
            }
          } else {
            writeFlowSequence(state, arrayLevel, state.dump);
            if (duplicate) {
              state.dump = "&ref_" + duplicateIndex + " " + state.dump;
            }
          }
        } else if (type === "[object String]") {
          if (state.tag !== "?") {
            writeScalar(state, state.dump, level, iskey);
          }
        } else {
          if (state.skipInvalid)
            return false;
          throw new YAMLException("unacceptable kind of an object to dump " + type);
        }
        if (state.tag !== null && state.tag !== "?") {
          state.dump = "!<" + state.tag + "> " + state.dump;
        }
      }
      return true;
    }
    function getDuplicateReferences(object, state) {
      var objects = [], duplicatesIndexes = [], index2, length;
      inspectNode(object, objects, duplicatesIndexes);
      for (index2 = 0, length = duplicatesIndexes.length; index2 < length; index2 += 1) {
        state.duplicates.push(objects[duplicatesIndexes[index2]]);
      }
      state.usedDuplicates = new Array(length);
    }
    function inspectNode(object, objects, duplicatesIndexes) {
      var objectKeyList, index2, length;
      if (object !== null && typeof object === "object") {
        index2 = objects.indexOf(object);
        if (index2 !== -1) {
          if (duplicatesIndexes.indexOf(index2) === -1) {
            duplicatesIndexes.push(index2);
          }
        } else {
          objects.push(object);
          if (Array.isArray(object)) {
            for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
              inspectNode(object[index2], objects, duplicatesIndexes);
            }
          } else {
            objectKeyList = Object.keys(object);
            for (index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1) {
              inspectNode(object[objectKeyList[index2]], objects, duplicatesIndexes);
            }
          }
        }
      }
    }
    function dump(input, options3) {
      options3 = options3 || {};
      var state = new State(options3);
      if (!state.noRefs)
        getDuplicateReferences(input, state);
      if (writeNode(state, 0, input, true, true))
        return state.dump + "\n";
      return "";
    }
    function safeDump(input, options3) {
      return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options3));
    }
    module2.exports.dump = dump;
    module2.exports.safeDump = safeDump;
  }
});

// node_modules/js-yaml/lib/js-yaml.js
var require_js_yaml = __commonJS({
  "node_modules/js-yaml/lib/js-yaml.js"(exports2, module2) {
    init_shims();
    "use strict";
    var loader = require_loader();
    var dumper = require_dumper();
    function deprecated(name) {
      return function() {
        throw new Error("Function " + name + " is deprecated and cannot be used.");
      };
    }
    module2.exports.Type = require_type();
    module2.exports.Schema = require_schema();
    module2.exports.FAILSAFE_SCHEMA = require_failsafe();
    module2.exports.JSON_SCHEMA = require_json();
    module2.exports.CORE_SCHEMA = require_core();
    module2.exports.DEFAULT_SAFE_SCHEMA = require_default_safe();
    module2.exports.DEFAULT_FULL_SCHEMA = require_default_full();
    module2.exports.load = loader.load;
    module2.exports.loadAll = loader.loadAll;
    module2.exports.safeLoad = loader.safeLoad;
    module2.exports.safeLoadAll = loader.safeLoadAll;
    module2.exports.dump = dumper.dump;
    module2.exports.safeDump = dumper.safeDump;
    module2.exports.YAMLException = require_exception();
    module2.exports.MINIMAL_SCHEMA = require_failsafe();
    module2.exports.SAFE_SCHEMA = require_default_safe();
    module2.exports.DEFAULT_SCHEMA = require_default_full();
    module2.exports.scan = deprecated("scan");
    module2.exports.parse = deprecated("parse");
    module2.exports.compose = deprecated("compose");
    module2.exports.addConstructor = deprecated("addConstructor");
  }
});

// node_modules/js-yaml/index.js
var require_js_yaml2 = __commonJS({
  "node_modules/js-yaml/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    var yaml2 = require_js_yaml();
    module2.exports = yaml2;
  }
});

// node_modules/gray-matter/lib/engines.js
var require_engines = __commonJS({
  "node_modules/gray-matter/lib/engines.js"(exports, module) {
    init_shims();
    "use strict";
    var yaml = require_js_yaml2();
    var engines = exports = module.exports;
    engines.yaml = {
      parse: yaml.safeLoad.bind(yaml),
      stringify: yaml.safeDump.bind(yaml)
    };
    engines.json = {
      parse: JSON.parse.bind(JSON),
      stringify: function(obj, options3) {
        const opts = Object.assign({ replacer: null, space: 2 }, options3);
        return JSON.stringify(obj, opts.replacer, opts.space);
      }
    };
    engines.javascript = {
      parse: function parse(str, options, wrap) {
        try {
          if (wrap !== false) {
            str = "(function() {\nreturn " + str.trim() + ";\n}());";
          }
          return eval(str) || {};
        } catch (err) {
          if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {
            return parse(str, options, false);
          }
          throw new SyntaxError(err);
        }
      },
      stringify: function() {
        throw new Error("stringifying JavaScript is not supported");
      }
    };
  }
});

// node_modules/strip-bom-string/index.js
var require_strip_bom_string = __commonJS({
  "node_modules/strip-bom-string/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    module2.exports = function(str2) {
      if (typeof str2 === "string" && str2.charAt(0) === "\uFEFF") {
        return str2.slice(1);
      }
      return str2;
    };
  }
});

// node_modules/gray-matter/lib/utils.js
var require_utils = __commonJS({
  "node_modules/gray-matter/lib/utils.js"(exports2) {
    init_shims();
    "use strict";
    var stripBom = require_strip_bom_string();
    var typeOf = require_kind_of();
    exports2.define = function(obj, key, val) {
      Reflect.defineProperty(obj, key, {
        enumerable: false,
        configurable: true,
        writable: true,
        value: val
      });
    };
    exports2.isBuffer = function(val) {
      return typeOf(val) === "buffer";
    };
    exports2.isObject = function(val) {
      return typeOf(val) === "object";
    };
    exports2.toBuffer = function(input) {
      return typeof input === "string" ? Buffer.from(input) : input;
    };
    exports2.toString = function(input) {
      if (exports2.isBuffer(input))
        return stripBom(String(input));
      if (typeof input !== "string") {
        throw new TypeError("expected input to be a string or buffer");
      }
      return stripBom(input);
    };
    exports2.arrayify = function(val) {
      return val ? Array.isArray(val) ? val : [val] : [];
    };
    exports2.startsWith = function(str2, substr, len) {
      if (typeof len !== "number")
        len = substr.length;
      return str2.slice(0, len) === substr;
    };
  }
});

// node_modules/gray-matter/lib/defaults.js
var require_defaults = __commonJS({
  "node_modules/gray-matter/lib/defaults.js"(exports2, module2) {
    init_shims();
    "use strict";
    var engines2 = require_engines();
    var utils = require_utils();
    module2.exports = function(options3) {
      const opts = Object.assign({}, options3);
      opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || "---");
      if (opts.delimiters.length === 1) {
        opts.delimiters.push(opts.delimiters[0]);
      }
      opts.language = (opts.language || opts.lang || "yaml").toLowerCase();
      opts.engines = Object.assign({}, engines2, opts.parsers, opts.engines);
      return opts;
    };
  }
});

// node_modules/gray-matter/lib/engine.js
var require_engine = __commonJS({
  "node_modules/gray-matter/lib/engine.js"(exports2, module2) {
    init_shims();
    "use strict";
    module2.exports = function(name, options3) {
      let engine = options3.engines[name] || options3.engines[aliase(name)];
      if (typeof engine === "undefined") {
        throw new Error('gray-matter engine "' + name + '" is not registered');
      }
      if (typeof engine === "function") {
        engine = { parse: engine };
      }
      return engine;
    };
    function aliase(name) {
      switch (name.toLowerCase()) {
        case "js":
        case "javascript":
          return "javascript";
        case "coffee":
        case "coffeescript":
        case "cson":
          return "coffee";
        case "yaml":
        case "yml":
          return "yaml";
        default: {
          return name;
        }
      }
    }
  }
});

// node_modules/gray-matter/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/gray-matter/lib/stringify.js"(exports2, module2) {
    init_shims();
    "use strict";
    var typeOf = require_kind_of();
    var getEngine = require_engine();
    var defaults = require_defaults();
    module2.exports = function(file, data, options3) {
      if (data == null && options3 == null) {
        switch (typeOf(file)) {
          case "object":
            data = file.data;
            options3 = {};
            break;
          case "string":
            return file;
          default: {
            throw new TypeError("expected file to be a string or object");
          }
        }
      }
      const str2 = file.content;
      const opts = defaults(options3);
      if (data == null) {
        if (!opts.data)
          return file;
        data = opts.data;
      }
      const language = file.language || opts.language;
      const engine = getEngine(language, opts);
      if (typeof engine.stringify !== "function") {
        throw new TypeError('expected "' + language + '.stringify" to be a function');
      }
      data = Object.assign({}, file.data, data);
      const open = opts.delimiters[0];
      const close = opts.delimiters[1];
      const matter = engine.stringify(data, options3).trim();
      let buf = "";
      if (matter !== "{}") {
        buf = newline(open) + newline(matter) + newline(close);
      }
      if (typeof file.excerpt === "string" && file.excerpt !== "") {
        if (str2.indexOf(file.excerpt.trim()) === -1) {
          buf += newline(file.excerpt) + newline(close);
        }
      }
      return buf + newline(str2);
    };
    function newline(str2) {
      return str2.slice(-1) !== "\n" ? str2 + "\n" : str2;
    }
  }
});

// node_modules/gray-matter/lib/excerpt.js
var require_excerpt = __commonJS({
  "node_modules/gray-matter/lib/excerpt.js"(exports2, module2) {
    init_shims();
    "use strict";
    var defaults = require_defaults();
    module2.exports = function(file, options3) {
      const opts = defaults(options3);
      if (file.data == null) {
        file.data = {};
      }
      if (typeof opts.excerpt === "function") {
        return opts.excerpt(file, opts);
      }
      const sep = file.data.excerpt_separator || opts.excerpt_separator;
      if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {
        return file;
      }
      const delimiter = typeof opts.excerpt === "string" ? opts.excerpt : sep || opts.delimiters[0];
      const idx = file.content.indexOf(delimiter);
      if (idx !== -1) {
        file.excerpt = file.content.slice(0, idx);
      }
      return file;
    };
  }
});

// node_modules/gray-matter/lib/to-file.js
var require_to_file = __commonJS({
  "node_modules/gray-matter/lib/to-file.js"(exports2, module2) {
    init_shims();
    "use strict";
    var typeOf = require_kind_of();
    var stringify = require_stringify();
    var utils = require_utils();
    module2.exports = function(file) {
      if (typeOf(file) !== "object") {
        file = { content: file };
      }
      if (typeOf(file.data) !== "object") {
        file.data = {};
      }
      if (file.contents && file.content == null) {
        file.content = file.contents;
      }
      utils.define(file, "orig", utils.toBuffer(file.content));
      utils.define(file, "language", file.language || "");
      utils.define(file, "matter", file.matter || "");
      utils.define(file, "stringify", function(data, options3) {
        if (options3 && options3.language) {
          file.language = options3.language;
        }
        return stringify(file, data, options3);
      });
      file.content = utils.toString(file.content);
      file.isEmpty = false;
      file.excerpt = "";
      return file;
    };
  }
});

// node_modules/gray-matter/lib/parse.js
var require_parse = __commonJS({
  "node_modules/gray-matter/lib/parse.js"(exports2, module2) {
    init_shims();
    "use strict";
    var getEngine = require_engine();
    var defaults = require_defaults();
    module2.exports = function(language, str2, options3) {
      const opts = defaults(options3);
      const engine = getEngine(language, opts);
      if (typeof engine.parse !== "function") {
        throw new TypeError('expected "' + language + '.parse" to be a function');
      }
      return engine.parse(str2, opts);
    };
  }
});

// node_modules/gray-matter/index.js
var require_gray_matter = __commonJS({
  "node_modules/gray-matter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    var fs2 = require("fs");
    var sections = require_section_matter();
    var defaults = require_defaults();
    var stringify = require_stringify();
    var excerpt = require_excerpt();
    var engines2 = require_engines();
    var toFile = require_to_file();
    var parse2 = require_parse();
    var utils = require_utils();
    function matter(input, options3) {
      if (input === "") {
        return { data: {}, content: input, excerpt: "", orig: input };
      }
      let file = toFile(input);
      const cached = matter.cache[file.content];
      if (!options3) {
        if (cached) {
          file = Object.assign({}, cached);
          file.orig = cached.orig;
          return file;
        }
        matter.cache[file.content] = file;
      }
      return parseMatter(file, options3);
    }
    function parseMatter(file, options3) {
      const opts = defaults(options3);
      const open = opts.delimiters[0];
      const close = "\n" + opts.delimiters[1];
      let str2 = file.content;
      if (opts.language) {
        file.language = opts.language;
      }
      const openLen = open.length;
      if (!utils.startsWith(str2, open, openLen)) {
        excerpt(file, opts);
        return file;
      }
      if (str2.charAt(openLen) === open.slice(-1)) {
        return file;
      }
      str2 = str2.slice(openLen);
      const len = str2.length;
      const language = matter.language(str2, opts);
      if (language.name) {
        file.language = language.name;
        str2 = str2.slice(language.raw.length);
      }
      let closeIndex = str2.indexOf(close);
      if (closeIndex === -1) {
        closeIndex = len;
      }
      file.matter = str2.slice(0, closeIndex);
      const block = file.matter.replace(/^\s*#[^\n]+/gm, "").trim();
      if (block === "") {
        file.isEmpty = true;
        file.empty = file.content;
        file.data = {};
      } else {
        file.data = parse2(file.language, file.matter, opts);
      }
      if (closeIndex === len) {
        file.content = "";
      } else {
        file.content = str2.slice(closeIndex + close.length);
        if (file.content[0] === "\r") {
          file.content = file.content.slice(1);
        }
        if (file.content[0] === "\n") {
          file.content = file.content.slice(1);
        }
      }
      excerpt(file, opts);
      if (opts.sections === true || typeof opts.section === "function") {
        sections(file, opts.section);
      }
      return file;
    }
    matter.engines = engines2;
    matter.stringify = function(file, data, options3) {
      if (typeof file === "string")
        file = matter(file, options3);
      return stringify(file, data, options3);
    };
    matter.read = function(filepath, options3) {
      const str2 = fs2.readFileSync(filepath, "utf8");
      const file = matter(str2, options3);
      file.path = filepath;
      return file;
    };
    matter.test = function(str2, options3) {
      return utils.startsWith(str2, defaults(options3).delimiters[0]);
    };
    matter.language = function(str2, options3) {
      const opts = defaults(options3);
      const open = opts.delimiters[0];
      if (matter.test(str2)) {
        str2 = str2.slice(open.length);
      }
      const language = str2.slice(0, str2.search(/\r?\n/));
      return {
        raw: language,
        name: language ? language.trim() : ""
      };
    };
    matter.cache = {};
    matter.clearCache = function() {
      matter.cache = {};
    };
    module2.exports = matter;
  }
});

// node_modules/date-fns/_lib/toInteger/index.js
var require_toInteger = __commonJS({
  "node_modules/date-fns/_lib/toInteger/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = toInteger;
    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
      }
      var number = Number(dirtyNumber);
      if (isNaN(number)) {
        return number;
      }
      return number < 0 ? Math.ceil(number) : Math.floor(number);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/requiredArgs/index.js
var require_requiredArgs = __commonJS({
  "node_modules/date-fns/_lib/requiredArgs/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = requiredArgs;
    function requiredArgs(required, args) {
      if (args.length < required) {
        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/toDate/index.js
var require_toDate = __commonJS({
  "node_modules/date-fns/toDate/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = toDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function toDate(argument) {
      (0, _index.default)(1, arguments);
      var argStr = Object.prototype.toString.call(argument);
      if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
        return new Date(argument.getTime());
      } else if (typeof argument === "number" || argStr === "[object Number]") {
        return new Date(argument);
      } else {
        if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
          console.warn(new Error().stack);
        }
        return new Date(NaN);
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addDays/index.js
var require_addDays = __commonJS({
  "node_modules/date-fns/addDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addDays;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var amount = (0, _index.default)(dirtyAmount);
      if (isNaN(amount)) {
        return new Date(NaN);
      }
      if (!amount) {
        return date;
      }
      date.setDate(date.getDate() + amount);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMonths/index.js
var require_addMonths = __commonJS({
  "node_modules/date-fns/addMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addMonths;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var amount = (0, _index.default)(dirtyAmount);
      if (isNaN(amount)) {
        return new Date(NaN);
      }
      if (!amount) {
        return date;
      }
      var dayOfMonth = date.getDate();
      var endOfDesiredMonth = new Date(date.getTime());
      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
      var daysInMonth = endOfDesiredMonth.getDate();
      if (dayOfMonth >= daysInMonth) {
        return endOfDesiredMonth;
      } else {
        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
        return date;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/add/index.js
var require_add = __commonJS({
  "node_modules/date-fns/add/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = add;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function add(dirtyDate, duration) {
      (0, _index4.default)(2, arguments);
      if (!duration || typeof duration !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index5.default)(duration.years) : 0;
      var months = duration.months ? (0, _index5.default)(duration.months) : 0;
      var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;
      var days = duration.days ? (0, _index5.default)(duration.days) : 0;
      var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;
      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;
      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;
      var date = (0, _index3.default)(dirtyDate);
      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;
      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;
      var minutesToAdd = minutes + hours * 60;
      var secondsToAdd = seconds + minutesToAdd * 60;
      var msToAdd = secondsToAdd * 1e3;
      var finalDate = new Date(dateWithDays.getTime() + msToAdd);
      return finalDate;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWeekend/index.js
var require_isWeekend = __commonJS({
  "node_modules/date-fns/isWeekend/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isWeekend;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWeekend(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      return day === 0 || day === 6;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSunday/index.js
var require_isSunday = __commonJS({
  "node_modules/date-fns/isSunday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSunday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSunday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSaturday/index.js
var require_isSaturday = __commonJS({
  "node_modules/date-fns/isSaturday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSaturday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSaturday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 6;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addBusinessDays/index.js
var require_addBusinessDays = __commonJS({
  "node_modules/date-fns/addBusinessDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addBusinessDays;
    var _index = _interopRequireDefault(require_isWeekend());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_isSunday());
    var _index6 = _interopRequireDefault(require_isSaturday());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var startedOnWeekend = (0, _index.default)(date);
      var amount = (0, _index3.default)(dirtyAmount);
      if (isNaN(amount))
        return new Date(NaN);
      var hours = date.getHours();
      var sign = amount < 0 ? -1 : 1;
      var fullWeeks = (0, _index3.default)(amount / 5);
      date.setDate(date.getDate() + fullWeeks * 7);
      var restDays = Math.abs(amount % 5);
      while (restDays > 0) {
        date.setDate(date.getDate() + sign);
        if (!(0, _index.default)(date))
          restDays -= 1;
      }
      if (startedOnWeekend && (0, _index.default)(date) && amount !== 0) {
        if ((0, _index6.default)(date))
          date.setDate(date.getDate() + (sign < 0 ? 2 : -1));
        if ((0, _index5.default)(date))
          date.setDate(date.getDate() + (sign < 0 ? 1 : -2));
      }
      date.setHours(hours);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMilliseconds/index.js
var require_addMilliseconds = __commonJS({
  "node_modules/date-fns/addMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var timestamp = (0, _index2.default)(dirtyDate).getTime();
      var amount = (0, _index.default)(dirtyAmount);
      return new Date(timestamp + amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addHours/index.js
var require_addHours = __commonJS({
  "node_modules/date-fns/addHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    function addHours(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_HOUR);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfWeek/index.js
var require_startOfWeek = __commonJS({
  "node_modules/date-fns/startOfWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setDate(date.getDate() - diff);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfISOWeek/index.js
var require_startOfISOWeek = __commonJS({
  "node_modules/date-fns/startOfISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfISOWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeekYear/index.js
var require_getISOWeekYear = __commonJS({
  "node_modules/date-fns/getISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getISOWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index2.default)(fourthOfJanuaryOfThisYear);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfISOWeekYear/index.js
var require_startOfISOWeekYear = __commonJS({
  "node_modules/date-fns/startOfISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
var require_getTimezoneOffsetInMilliseconds = __commonJS({
  "node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getTimezoneOffsetInMilliseconds;
    function getTimezoneOffsetInMilliseconds(date) {
      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
      utcDate.setUTCFullYear(date.getFullYear());
      return date.getTime() - utcDate.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfDay/index.js
var require_startOfDay = __commonJS({
  "node_modules/date-fns/startOfDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarDays/index.js
var require_differenceInCalendarDays = __commonJS({
  "node_modules/date-fns/differenceInCalendarDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarDays;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_startOfDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);
      var startOfDayRight = (0, _index2.default)(dirtyDateRight);
      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISOWeekYear/index.js
var require_setISOWeekYear = __commonJS({
  "node_modules/date-fns/setISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setISOWeekYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index4 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeekYear = (0, _index.default)(dirtyISOWeekYear);
      var diff = (0, _index4.default)(date, (0, _index3.default)(date));
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      date = (0, _index3.default)(fourthOfJanuary);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addISOWeekYears/index.js
var require_addISOWeekYears = __commonJS({
  "node_modules/date-fns/addISOWeekYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addISOWeekYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_getISOWeekYear());
    var _index3 = _interopRequireDefault(require_setISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index3.default)(dirtyDate, (0, _index2.default)(dirtyDate) + amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMinutes/index.js
var require_addMinutes = __commonJS({
  "node_modules/date-fns/addMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 6e4;
    function addMinutes(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addQuarters/index.js
var require_addQuarters = __commonJS({
  "node_modules/date-fns/addQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addQuarters;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      var months = amount * 3;
      return (0, _index2.default)(dirtyDate, months);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addSeconds/index.js
var require_addSeconds = __commonJS({
  "node_modules/date-fns/addSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addWeeks/index.js
var require_addWeeks = __commonJS({
  "node_modules/date-fns/addWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addWeeks;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      var days = amount * 7;
      return (0, _index2.default)(dirtyDate, days);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addYears/index.js
var require_addYears = __commonJS({
  "node_modules/date-fns/addYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 12);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/areIntervalsOverlapping/index.js
var require_areIntervalsOverlapping = __commonJS({
  "node_modules/date-fns/areIntervalsOverlapping/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = areIntervalsOverlapping;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
      var options3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
        inclusive: false
      };
      (0, _index2.default)(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = (0, _index.default)(intervalLeft.start).getTime();
      var leftEndTime = (0, _index.default)(intervalLeft.end).getTime();
      var rightStartTime = (0, _index.default)(intervalRight.start).getTime();
      var rightEndTime = (0, _index.default)(intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError("Invalid interval");
      }
      if (options3.inclusive) {
        return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
      }
      return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/max/index.js
var require_max = __commonJS({
  "node_modules/date-fns/max/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = max;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function max(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else if (typeof dirtyDatesArray === "object" && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        return new Date(NaN);
      }
      var result;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/min/index.js
var require_min = __commonJS({
  "node_modules/date-fns/min/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = min;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function min(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else if (typeof dirtyDatesArray === "object" && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        return new Date(NaN);
      }
      var result;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/clamp/index.js
var require_clamp = __commonJS({
  "node_modules/date-fns/clamp/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = clamp;
    var _index = _interopRequireDefault(require_max());
    var _index2 = _interopRequireDefault(require_min());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function clamp(date, _ref) {
      var start = _ref.start, end = _ref.end;
      (0, _index3.default)(2, arguments);
      return (0, _index2.default)([(0, _index.default)([date, start]), end]);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/closestIndexTo/index.js
var require_closestIndexTo = __commonJS({
  "node_modules/date-fns/closestIndexTo/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = closestIndexTo;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(dateToCompare)) {
        return NaN;
      }
      var timeToCompare = dateToCompare.getTime();
      var datesArray;
      if (dirtyDatesArray == null) {
        datesArray = [];
      } else if (typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }
      var result;
      var minDistance;
      datesArray.forEach(function(dirtyDate, index2) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(currentDate)) {
          result = NaN;
          minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < minDistance) {
          result = index2;
          minDistance = distance;
        }
      });
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/closestTo/index.js
var require_closestTo = __commonJS({
  "node_modules/date-fns/closestTo/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = closestTo;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(dateToCompare)) {
        return new Date(NaN);
      }
      var timeToCompare = dateToCompare.getTime();
      var datesArray;
      if (dirtyDatesArray == null) {
        datesArray = [];
      } else if (typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }
      var result;
      var minDistance;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(currentDate)) {
          result = new Date(NaN);
          minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < minDistance) {
          result = currentDate;
          minDistance = distance;
        }
      });
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/compareAsc/index.js
var require_compareAsc = __commonJS({
  "node_modules/date-fns/compareAsc/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = compareAsc;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareAsc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();
      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1;
      } else {
        return diff;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/compareDesc/index.js
var require_compareDesc = __commonJS({
  "node_modules/date-fns/compareDesc/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = compareDesc;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareDesc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();
      if (diff > 0) {
        return -1;
      } else if (diff < 0) {
        return 1;
      } else {
        return diff;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/constants/index.js
var require_constants = __commonJS({
  "node_modules/date-fns/constants/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.secondsInMinute = exports2.secondsInHour = exports2.quartersInYear = exports2.monthsInYear = exports2.monthsInQuarter = exports2.minutesInHour = exports2.minTime = exports2.millisecondsInSecond = exports2.millisecondsInHour = exports2.millisecondsInMinute = exports2.maxTime = exports2.daysInWeek = void 0;
    var daysInWeek = 7;
    exports2.daysInWeek = daysInWeek;
    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
    exports2.maxTime = maxTime;
    var millisecondsInMinute = 6e4;
    exports2.millisecondsInMinute = millisecondsInMinute;
    var millisecondsInHour = 36e5;
    exports2.millisecondsInHour = millisecondsInHour;
    var millisecondsInSecond = 1e3;
    exports2.millisecondsInSecond = millisecondsInSecond;
    var minTime = -maxTime;
    exports2.minTime = minTime;
    var minutesInHour = 60;
    exports2.minutesInHour = minutesInHour;
    var monthsInQuarter = 3;
    exports2.monthsInQuarter = monthsInQuarter;
    var monthsInYear = 12;
    exports2.monthsInYear = monthsInYear;
    var quartersInYear = 4;
    exports2.quartersInYear = quartersInYear;
    var secondsInHour = 3600;
    exports2.secondsInHour = secondsInHour;
    var secondsInMinute = 60;
    exports2.secondsInMinute = secondsInMinute;
  }
});

// node_modules/date-fns/daysToWeeks/index.js
var require_daysToWeeks = __commonJS({
  "node_modules/date-fns/daysToWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = daysToWeeks;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function daysToWeeks(days) {
      (0, _index.default)(1, arguments);
      var weeks = days / _index2.daysInWeek;
      return Math.floor(weeks);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isValid/index.js
var require_isValid = __commonJS({
  "node_modules/date-fns/isValid/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isValid;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isValid(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return !isNaN(date);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameDay/index.js
var require_isSameDay = __commonJS({
  "node_modules/date-fns/isSameDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameDay;
    var _index = _interopRequireDefault(require_startOfDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameDay(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfDay = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfDay = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInBusinessDays/index.js
var require_differenceInBusinessDays = __commonJS({
  "node_modules/date-fns/differenceInBusinessDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInBusinessDays;
    var _index = _interopRequireDefault(require_isValid());
    var _index2 = _interopRequireDefault(require_isWeekend());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index5 = _interopRequireDefault(require_addDays());
    var _index6 = _interopRequireDefault(require_isSameDay());
    var _index7 = _interopRequireDefault(require_toInteger());
    var _index8 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index8.default)(2, arguments);
      var dateLeft = (0, _index3.default)(dirtyDateLeft);
      var dateRight = (0, _index3.default)(dirtyDateRight);
      if (!(0, _index.default)(dateLeft) || !(0, _index.default)(dateRight))
        return NaN;
      var calendarDifference = (0, _index4.default)(dateLeft, dateRight);
      var sign = calendarDifference < 0 ? -1 : 1;
      var weeks = (0, _index7.default)(calendarDifference / 7);
      var result = weeks * 5;
      dateRight = (0, _index5.default)(dateRight, weeks * 7);
      while (!(0, _index6.default)(dateLeft, dateRight)) {
        result += (0, _index2.default)(dateRight) ? 0 : sign;
        dateRight = (0, _index5.default)(dateRight, sign);
      }
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeekYears/index.js
var require_differenceInCalendarISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeekYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarISOWeekYears;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      return (0, _index.default)(dirtyDateLeft) - (0, _index.default)(dirtyDateRight);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeeks/index.js
var require_differenceInCalendarISOWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarISOWeeks;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfISOWeekLeft = (0, _index2.default)(dirtyDateLeft);
      var startOfISOWeekRight = (0, _index2.default)(dirtyDateRight);
      var timestampLeft = startOfISOWeekLeft.getTime() - (0, _index.default)(startOfISOWeekLeft);
      var timestampRight = startOfISOWeekRight.getTime() - (0, _index.default)(startOfISOWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarMonths/index.js
var require_differenceInCalendarMonths = __commonJS({
  "node_modules/date-fns/differenceInCalendarMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarMonths;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
      return yearDiff * 12 + monthDiff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getQuarter/index.js
var require_getQuarter = __commonJS({
  "node_modules/date-fns/getQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var quarter = Math.floor(date.getMonth() / 3) + 1;
      return quarter;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarQuarters/index.js
var require_differenceInCalendarQuarters = __commonJS({
  "node_modules/date-fns/differenceInCalendarQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarQuarters;
    var _index = _interopRequireDefault(require_getQuarter());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index2.default)(dirtyDateLeft);
      var dateRight = (0, _index2.default)(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var quarterDiff = (0, _index.default)(dateLeft) - (0, _index.default)(dateRight);
      return yearDiff * 4 + quarterDiff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarWeeks/index.js
var require_differenceInCalendarWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarWeeks;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      (0, _index3.default)(2, arguments);
      var startOfWeekLeft = (0, _index.default)(dirtyDateLeft, dirtyOptions);
      var startOfWeekRight = (0, _index.default)(dirtyDateRight, dirtyOptions);
      var timestampLeft = startOfWeekLeft.getTime() - (0, _index2.default)(startOfWeekLeft);
      var timestampRight = startOfWeekRight.getTime() - (0, _index2.default)(startOfWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarYears/index.js
var require_differenceInCalendarYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() - dateRight.getFullYear();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInDays/index.js
var require_differenceInDays = __commonJS({
  "node_modules/date-fns/differenceInDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInDays;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareLocalAsc(dateLeft, dateRight) {
      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1;
      } else {
        return diff;
      }
    }
    function differenceInDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = compareLocalAsc(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setDate(dateLeft.getDate() - sign * difference);
      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
      var result = sign * (difference - isLastDayNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMilliseconds/index.js
var require_differenceInMilliseconds = __commonJS({
  "node_modules/date-fns/differenceInMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInMilliseconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getTime() - dateRight.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInHours/index.js
var require_differenceInHours = __commonJS({
  "node_modules/date-fns/differenceInHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInHours;
    var _index = _interopRequireDefault(require_differenceInMilliseconds());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    function differenceInHours(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subISOWeekYears/index.js
var require_subISOWeekYears = __commonJS({
  "node_modules/date-fns/subISOWeekYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subISOWeekYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addISOWeekYears());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInISOWeekYears/index.js
var require_differenceInISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInISOWeekYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInISOWeekYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarISOWeekYears());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_subISOWeekYears());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index5.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft = (0, _index4.default)(dateLeft, sign * difference);
      var isLastISOWeekYearNotFull = Number((0, _index3.default)(dateLeft, dateRight) === -sign);
      var result = sign * (difference - isLastISOWeekYearNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMinutes/index.js
var require_differenceInMinutes = __commonJS({
  "node_modules/date-fns/differenceInMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInMinutes;
    var _index = _interopRequireDefault(require_differenceInMilliseconds());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 6e4;
    function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfDay/index.js
var require_endOfDay = __commonJS({
  "node_modules/date-fns/endOfDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfMonth/index.js
var require_endOfMonth = __commonJS({
  "node_modules/date-fns/endOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isLastDayOfMonth/index.js
var require_isLastDayOfMonth = __commonJS({
  "node_modules/date-fns/isLastDayOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isLastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_endOfDay());
    var _index3 = _interopRequireDefault(require_endOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLastDayOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMonths/index.js
var require_differenceInMonths = __commonJS({
  "node_modules/date-fns/differenceInMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInMonths;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarMonths());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_isLastDayOfMonth());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      var result;
      if (difference < 1) {
        result = 0;
      } else {
        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
          dateLeft.setDate(30);
        }
        dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {
          isLastMonthNotFull = false;
        }
        result = sign * (difference - Number(isLastMonthNotFull));
      }
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInQuarters/index.js
var require_differenceInQuarters = __commonJS({
  "node_modules/date-fns/differenceInQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInQuarters;
    var _index = _interopRequireDefault(require_differenceInMonths());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / 3;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInSeconds/index.js
var require_differenceInSeconds = __commonJS({
  "node_modules/date-fns/differenceInSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInSeconds;
    var _index = _interopRequireDefault(require_differenceInMilliseconds());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / 1e3;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInWeeks/index.js
var require_differenceInWeeks = __commonJS({
  "node_modules/date-fns/differenceInWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInWeeks;
    var _index = _interopRequireDefault(require_differenceInDays());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / 7;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInYears/index.js
var require_differenceInYears = __commonJS({
  "node_modules/date-fns/differenceInYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarYears());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setFullYear(1584);
      dateRight.setFullYear(1584);
      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
      var result = sign * (difference - Number(isLastYearNotFull));
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachDayOfInterval/index.js
var require_eachDayOfInterval = __commonJS({
  "node_modules/date-fns/eachDayOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachDayOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachDayOfInterval(dirtyInterval, options3) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      var step = options3 && "step" in options3 ? Number(options3.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setDate(currentDate.getDate() + step);
        currentDate.setHours(0, 0, 0, 0);
      }
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachHourOfInterval/index.js
var require_eachHourOfInterval = __commonJS({
  "node_modules/date-fns/eachHourOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachHourOfInterval;
    var _index = _interopRequireDefault(require_addHours());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachHourOfInterval(dirtyInterval, options3) {
      (0, _index3.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index2.default)(interval.start);
      var endDate = (0, _index2.default)(interval.end);
      var startTime = startDate.getTime();
      var endTime = endDate.getTime();
      if (!(startTime <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setMinutes(0, 0, 0);
      var step = options3 && "step" in options3 ? Number(options3.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index2.default)(currentDate));
        currentDate = (0, _index.default)(currentDate, step);
      }
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfMinute/index.js
var require_startOfMinute = __commonJS({
  "node_modules/date-fns/startOfMinute/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfMinute;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setSeconds(0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachMinuteOfInterval/index.js
var require_eachMinuteOfInterval = __commonJS({
  "node_modules/date-fns/eachMinuteOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachMinuteOfInterval;
    var _index = _interopRequireDefault(require_addMinutes());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_startOfMinute());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMinuteOfInterval(interval, options3) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index3.default)((0, _index2.default)(interval.start));
      var endDate = (0, _index3.default)((0, _index2.default)(interval.end));
      var startTime = startDate.getTime();
      var endTime = endDate.getTime();
      if (startTime >= endTime) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      var step = options3 && "step" in options3 ? Number(options3.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number equal or greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index2.default)(currentDate));
        currentDate = (0, _index.default)(currentDate, step);
      }
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachMonthOfInterval/index.js
var require_eachMonthOfInterval = __commonJS({
  "node_modules/date-fns/eachMonthOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachMonthOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMonthOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      var dates = [];
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setDate(1);
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setMonth(currentDate.getMonth() + 1);
      }
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfQuarter/index.js
var require_startOfQuarter = __commonJS({
  "node_modules/date-fns/startOfQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3;
      date.setMonth(month, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachQuarterOfInterval/index.js
var require_eachQuarterOfInterval = __commonJS({
  "node_modules/date-fns/eachQuarterOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachQuarterOfInterval;
    var _index = _interopRequireDefault(require_addQuarters());
    var _index2 = _interopRequireDefault(require_startOfQuarter());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachQuarterOfInterval(dirtyInterval) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index3.default)(interval.start);
      var endDate = (0, _index3.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var startDateQuarter = (0, _index2.default)(startDate);
      var endDateQuarter = (0, _index2.default)(endDate);
      endTime = endDateQuarter.getTime();
      var quarters = [];
      var currentQuarter = startDateQuarter;
      while (currentQuarter.getTime() <= endTime) {
        quarters.push((0, _index3.default)(currentQuarter));
        currentQuarter = (0, _index.default)(currentQuarter, 1);
      }
      return quarters;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekOfInterval/index.js
var require_eachWeekOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachWeekOfInterval;
    var _index = _interopRequireDefault(require_addWeeks());
    var _index2 = _interopRequireDefault(require_startOfWeek());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekOfInterval(dirtyInterval, options3) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index3.default)(interval.start);
      var endDate = (0, _index3.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var startDateWeek = (0, _index2.default)(startDate, options3);
      var endDateWeek = (0, _index2.default)(endDate, options3);
      startDateWeek.setHours(15);
      endDateWeek.setHours(15);
      endTime = endDateWeek.getTime();
      var weeks = [];
      var currentWeek = startDateWeek;
      while (currentWeek.getTime() <= endTime) {
        currentWeek.setHours(0);
        weeks.push((0, _index3.default)(currentWeek));
        currentWeek = (0, _index.default)(currentWeek, 1);
        currentWeek.setHours(15);
      }
      return weeks;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfInterval/index.js
var require_eachWeekendOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekendOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachWeekendOfInterval;
    var _index = _interopRequireDefault(require_eachDayOfInterval());
    var _index2 = _interopRequireDefault(require_isSunday());
    var _index3 = _interopRequireDefault(require_isWeekend());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfInterval(interval) {
      (0, _index4.default)(1, arguments);
      var dateInterval = (0, _index.default)(interval);
      var weekends = [];
      var index2 = 0;
      while (index2 < dateInterval.length) {
        var date = dateInterval[index2++];
        if ((0, _index3.default)(date)) {
          weekends.push(date);
          if ((0, _index2.default)(date))
            index2 = index2 + 5;
        }
      }
      return weekends;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfMonth/index.js
var require_startOfMonth = __commonJS({
  "node_modules/date-fns/startOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfMonth/index.js
var require_eachWeekendOfMonth = __commonJS({
  "node_modules/date-fns/eachWeekendOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachWeekendOfMonth;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index2 = _interopRequireDefault(require_startOfMonth());
    var _index3 = _interopRequireDefault(require_endOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index2.default)(dirtyDate);
      if (isNaN(startDate.getTime()))
        throw new RangeError("The passed date is invalid");
      var endDate = (0, _index3.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfYear/index.js
var require_startOfYear = __commonJS({
  "node_modules/date-fns/startOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var cleanDate = (0, _index.default)(dirtyDate);
      var date = new Date(0);
      date.setFullYear(cleanDate.getFullYear(), 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfYear/index.js
var require_endOfYear = __commonJS({
  "node_modules/date-fns/endOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfYear/index.js
var require_eachWeekendOfYear = __commonJS({
  "node_modules/date-fns/eachWeekendOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachWeekendOfYear;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index2 = _interopRequireDefault(require_startOfYear());
    var _index3 = _interopRequireDefault(require_endOfYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index2.default)(dirtyDate);
      if (isNaN(startDate))
        throw new RangeError("The passed date is invalid");
      var endDate = (0, _index3.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachYearOfInterval/index.js
var require_eachYearOfInterval = __commonJS({
  "node_modules/date-fns/eachYearOfInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = eachYearOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachYearOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setMonth(0, 1);
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setFullYear(currentDate.getFullYear() + 1);
      }
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfDecade/index.js
var require_endOfDecade = __commonJS({
  "node_modules/date-fns/endOfDecade/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade, 11, 31);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfHour/index.js
var require_endOfHour = __commonJS({
  "node_modules/date-fns/endOfHour/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfHour;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMinutes(59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfWeek/index.js
var require_endOfWeek = __commonJS({
  "node_modules/date-fns/endOfWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setDate(date.getDate() + diff);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfISOWeek/index.js
var require_endOfISOWeek = __commonJS({
  "node_modules/date-fns/endOfISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfISOWeek;
    var _index = _interopRequireDefault(require_endOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfISOWeekYear/index.js
var require_endOfISOWeekYear = __commonJS({
  "node_modules/date-fns/endOfISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      date.setMilliseconds(date.getMilliseconds() - 1);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfMinute/index.js
var require_endOfMinute = __commonJS({
  "node_modules/date-fns/endOfMinute/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfMinute;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setSeconds(59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfQuarter/index.js
var require_endOfQuarter = __commonJS({
  "node_modules/date-fns/endOfQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfSecond/index.js
var require_endOfSecond = __commonJS({
  "node_modules/date-fns/endOfSecond/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfSecond;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMilliseconds(999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfToday/index.js
var require_endOfToday = __commonJS({
  "node_modules/date-fns/endOfToday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfToday;
    var _index = _interopRequireDefault(require_endOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfTomorrow/index.js
var require_endOfTomorrow = __commonJS({
  "node_modules/date-fns/endOfTomorrow/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfTomorrow;
    function endOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfYesterday/index.js
var require_endOfYesterday = __commonJS({
  "node_modules/date-fns/endOfYesterday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = endOfYesterday;
    function endOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
var require_formatDistance = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDistance2;
    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXWeeks: {
        one: "about 1 week",
        other: "about {{count}} weeks"
      },
      xWeeks: {
        one: "1 week",
        other: "{{count}} weeks"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    };
    function formatDistance2(token, count, options3) {
      options3 = options3 || {};
      var result;
      if (typeof formatDistanceLocale[token] === "string") {
        result = formatDistanceLocale[token];
      } else if (count === 1) {
        result = formatDistanceLocale[token].one;
      } else {
        result = formatDistanceLocale[token].other.replace("{{count}}", count);
      }
      if (options3.addSuffix) {
        if (options3.comparison > 0) {
          return "in " + result;
        } else {
          return result + " ago";
        }
      }
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
var require_buildFormatLongFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildFormatLongFn;
    function buildFormatLongFn(args) {
      return function() {
        var options3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var width = options3.width ? String(options3.width) : args.defaultWidth;
        var format3 = args.formats[width] || args.formats[args.defaultWidth];
        return format3;
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
var require_formatLong = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildFormatLongFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dateFormats = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    };
    var timeFormats = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    };
    var dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    };
    var formatLong = {
      date: (0, _index.default)({
        formats: dateFormats,
        defaultWidth: "full"
      }),
      time: (0, _index.default)({
        formats: timeFormats,
        defaultWidth: "full"
      }),
      dateTime: (0, _index.default)({
        formats: dateTimeFormats,
        defaultWidth: "full"
      })
    };
    var _default = formatLong;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
var require_formatRelative = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatRelative;
    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    };
    function formatRelative(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
var require_buildLocalizeFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildLocalizeFn;
    function buildLocalizeFn(args) {
      return function(dirtyIndex, dirtyOptions) {
        var options3 = dirtyOptions || {};
        var context = options3.context ? String(options3.context) : "standalone";
        var valuesArray;
        if (context === "formatting" && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options3.width ? String(options3.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;
          var _width = options3.width ? String(options3.width) : args.defaultWidth;
          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index2 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index2];
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/localize/index.js
var require_localize = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildLocalizeFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var eraValues = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    };
    var quarterValues = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    };
    var monthValues = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    };
    var dayValues = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    };
    var dayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    };
    var formattingDayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    };
    function ordinalNumber(dirtyNumber, _dirtyOptions) {
      var number = Number(dirtyNumber);
      var rem100 = number % 100;
      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + "st";
          case 2:
            return number + "nd";
          case 3:
            return number + "rd";
        }
      }
      return number + "th";
    }
    var localize = {
      ordinalNumber,
      era: (0, _index.default)({
        values: eraValues,
        defaultWidth: "wide"
      }),
      quarter: (0, _index.default)({
        values: quarterValues,
        defaultWidth: "wide",
        argumentCallback: function(quarter) {
          return Number(quarter) - 1;
        }
      }),
      month: (0, _index.default)({
        values: monthValues,
        defaultWidth: "wide"
      }),
      day: (0, _index.default)({
        values: dayValues,
        defaultWidth: "wide"
      }),
      dayPeriod: (0, _index.default)({
        values: dayPeriodValues,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: "wide"
      })
    };
    var _default = localize;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
var require_buildMatchPatternFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildMatchPatternFn;
    function buildMatchPatternFn(args) {
      return function(string) {
        var options3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var matchResult = string.match(args.matchPattern);
        if (!matchResult)
          return null;
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult)
          return null;
        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options3.valueCallback ? options3.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchFn/index.js
var require_buildMatchFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildMatchFn;
    function buildMatchFn(args) {
      return function(string) {
        var options3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var width = options3.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);
        if (!matchResult) {
          return null;
        }
        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        }) : findKey(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        });
        var value;
        value = args.valueCallback ? args.valueCallback(key) : key;
        value = options3.valueCallback ? options3.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    function findKey(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }
      return void 0;
    }
    function findIndex(array, predicate) {
      for (var key = 0; key < array.length; key++) {
        if (predicate(array[key])) {
          return key;
        }
      }
      return void 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/match/index.js
var require_match = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildMatchPatternFn());
    var _index2 = _interopRequireDefault(require_buildMatchFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern = /\d+/i;
    var matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match = {
      ordinalNumber: (0, _index.default)({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function(value) {
          return parseInt(value, 10);
        }
      }),
      era: (0, _index2.default)({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns,
        defaultParseWidth: "any"
      }),
      quarter: (0, _index2.default)({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: "any",
        valueCallback: function(index2) {
          return index2 + 1;
        }
      }),
      month: (0, _index2.default)({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: "any"
      }),
      day: (0, _index2.default)({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns,
        defaultParseWidth: "any"
      }),
      dayPeriod: (0, _index2.default)({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: "any"
      })
    };
    var _default = match;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/index.js
var require_en_US = __commonJS({
  "node_modules/date-fns/locale/en-US/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_formatDistance());
    var _index2 = _interopRequireDefault(require_formatLong());
    var _index3 = _interopRequireDefault(require_formatRelative());
    var _index4 = _interopRequireDefault(require_localize());
    var _index5 = _interopRequireDefault(require_match());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale = {
      code: "en-US",
      formatDistance: _index.default,
      formatLong: _index2.default,
      formatRelative: _index3.default,
      localize: _index4.default,
      match: _index5.default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    };
    var _default = locale;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMilliseconds/index.js
var require_subMilliseconds = __commonJS({
  "node_modules/date-fns/subMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/addLeadingZeros/index.js
var require_addLeadingZeros = __commonJS({
  "node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addLeadingZeros;
    function addLeadingZeros(number, targetLength) {
      var sign = number < 0 ? "-" : "";
      var output = Math.abs(number).toString();
      while (output.length < targetLength) {
        output = "0" + output;
      }
      return sign + output;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/lightFormatters/index.js
var require_lightFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formatters = {
      y: function(date, token) {
        var signedYear = date.getUTCFullYear();
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
      },
      M: function(date, token) {
        var month = date.getUTCMonth();
        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
      },
      d: function(date, token) {
        return (0, _index.default)(date.getUTCDate(), token.length);
      },
      a: function(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return dayPeriodEnumValue.toUpperCase();
          case "aaa":
            return dayPeriodEnumValue;
          case "aaaaa":
            return dayPeriodEnumValue[0];
          case "aaaa":
          default:
            return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
        }
      },
      h: function(date, token) {
        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
      },
      H: function(date, token) {
        return (0, _index.default)(date.getUTCHours(), token.length);
      },
      m: function(date, token) {
        return (0, _index.default)(date.getUTCMinutes(), token.length);
      },
      s: function(date, token) {
        return (0, _index.default)(date.getUTCSeconds(), token.length);
      },
      S: function(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return (0, _index.default)(fractionalSeconds, token.length);
      }
    };
    var _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCDayOfYear/index.js
var require_getUTCDayOfYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function getUTCDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var timestamp = date.getTime();
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime();
      var difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
var require_startOfUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var weekStartsOn = 1;
      var date = (0, _index.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
var require_getUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCISOWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getUTCFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index2.default)(fourthOfJanuaryOfThisYear);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
var require_startOfUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCISOWeekYear;
    var _index = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4);
      fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeek/index.js
var require_getUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeek/index.js
var require_startOfUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index2.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeekYear/index.js
var require_getUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCWeekYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCWeekYear(dirtyDate, dirtyOptions) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index2.default)(dirtyDate, dirtyOptions);
      var year = date.getUTCFullYear();
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index.default)(options3.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
var require_startOfUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCWeekYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_getUTCWeekYear());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
      (0, _index4.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index.default)(options3.firstWeekContainsDate);
      var year = (0, _index2.default)(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setUTCHours(0, 0, 0, 0);
      var date = (0, _index3.default)(firstWeek, dirtyOptions);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeek/index.js
var require_getUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCWeek(dirtyDate, options3) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date, options3).getTime() - (0, _index3.default)(date, options3).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/formatters/index.js
var require_formatters = __commonJS({
  "node_modules/date-fns/_lib/format/formatters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_lightFormatters());
    var _index2 = _interopRequireDefault(require_getUTCDayOfYear());
    var _index3 = _interopRequireDefault(require_getUTCISOWeek());
    var _index4 = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index5 = _interopRequireDefault(require_getUTCWeek());
    var _index6 = _interopRequireDefault(require_getUTCWeekYear());
    var _index7 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dayPeriodEnum = {
      am: "am",
      pm: "pm",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    };
    var formatters = {
      G: function(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return localize.era(era, {
              width: "abbreviated"
            });
          case "GGGGG":
            return localize.era(era, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return localize.era(era, {
              width: "wide"
            });
        }
      },
      y: function(date, token, localize) {
        if (token === "yo") {
          var signedYear = date.getUTCFullYear();
          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: "year"
          });
        }
        return _index.default.y(date, token);
      },
      Y: function(date, token, localize, options3) {
        var signedWeekYear = (0, _index6.default)(date, options3);
        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
        if (token === "YY") {
          var twoDigitYear = weekYear % 100;
          return (0, _index7.default)(twoDigitYear, 2);
        }
        if (token === "Yo") {
          return localize.ordinalNumber(weekYear, {
            unit: "year"
          });
        }
        return (0, _index7.default)(weekYear, token.length);
      },
      R: function(date, token) {
        var isoWeekYear = (0, _index4.default)(date);
        return (0, _index7.default)(isoWeekYear, token.length);
      },
      u: function(date, token) {
        var year = date.getUTCFullYear();
        return (0, _index7.default)(year, token.length);
      },
      Q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "Q":
            return String(quarter);
          case "QQ":
            return (0, _index7.default)(quarter, 2);
          case "Qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "QQQ":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "formatting"
            });
          case "QQQQQ":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "q":
            return String(quarter);
          case "qq":
            return (0, _index7.default)(quarter, 2);
          case "qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "qqq":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "standalone"
            });
          case "qqqqq":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      M: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "M":
          case "MM":
            return _index.default.M(date, token);
          case "Mo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "MMM":
            return localize.month(month, {
              width: "abbreviated",
              context: "formatting"
            });
          case "MMMMM":
            return localize.month(month, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return localize.month(month, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      L: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "L":
            return String(month + 1);
          case "LL":
            return (0, _index7.default)(month + 1, 2);
          case "Lo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "LLL":
            return localize.month(month, {
              width: "abbreviated",
              context: "standalone"
            });
          case "LLLLL":
            return localize.month(month, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return localize.month(month, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      w: function(date, token, localize, options3) {
        var week = (0, _index5.default)(date, options3);
        if (token === "wo") {
          return localize.ordinalNumber(week, {
            unit: "week"
          });
        }
        return (0, _index7.default)(week, token.length);
      },
      I: function(date, token, localize) {
        var isoWeek = (0, _index3.default)(date);
        if (token === "Io") {
          return localize.ordinalNumber(isoWeek, {
            unit: "week"
          });
        }
        return (0, _index7.default)(isoWeek, token.length);
      },
      d: function(date, token, localize) {
        if (token === "do") {
          return localize.ordinalNumber(date.getUTCDate(), {
            unit: "date"
          });
        }
        return _index.default.d(date, token);
      },
      D: function(date, token, localize) {
        var dayOfYear = (0, _index2.default)(date);
        if (token === "Do") {
          return localize.ordinalNumber(dayOfYear, {
            unit: "dayOfYear"
          });
        }
        return (0, _index7.default)(dayOfYear, token.length);
      },
      E: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "EEEEE":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "EEEE":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      e: function(date, token, localize, options3) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options3.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "e":
            return String(localDayOfWeek);
          case "ee":
            return (0, _index7.default)(localDayOfWeek, 2);
          case "eo":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "eee":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "eeeee":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "eeee":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      c: function(date, token, localize, options3) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options3.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "c":
            return String(localDayOfWeek);
          case "cc":
            return (0, _index7.default)(localDayOfWeek, token.length);
          case "co":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "ccc":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "standalone"
            });
          case "ccccc":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "standalone"
            });
          case "cccc":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      i: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
        switch (token) {
          case "i":
            return String(isoDayOfWeek);
          case "ii":
            return (0, _index7.default)(isoDayOfWeek, token.length);
          case "io":
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: "day"
            });
          case "iii":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "iiiii":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "iiiiii":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "iiii":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      a: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "aaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "aaaaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      b: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        }
        switch (token) {
          case "b":
          case "bb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "bbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "bbbbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      B: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }
        switch (token) {
          case "B":
          case "BB":
          case "BBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "BBBBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      h: function(date, token, localize) {
        if (token === "ho") {
          var hours = date.getUTCHours() % 12;
          if (hours === 0)
            hours = 12;
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return _index.default.h(date, token);
      },
      H: function(date, token, localize) {
        if (token === "Ho") {
          return localize.ordinalNumber(date.getUTCHours(), {
            unit: "hour"
          });
        }
        return _index.default.H(date, token);
      },
      K: function(date, token, localize) {
        var hours = date.getUTCHours() % 12;
        if (token === "Ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index7.default)(hours, token.length);
      },
      k: function(date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0)
          hours = 24;
        if (token === "ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index7.default)(hours, token.length);
      },
      m: function(date, token, localize) {
        if (token === "mo") {
          return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: "minute"
          });
        }
        return _index.default.m(date, token);
      },
      s: function(date, token, localize) {
        if (token === "so") {
          return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: "second"
          });
        }
        return _index.default.s(date, token);
      },
      S: function(date, token) {
        return _index.default.S(date, token);
      },
      X: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0) {
          return "Z";
        }
        switch (token) {
          case "X":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "XXXX":
          case "XX":
            return formatTimezone(timezoneOffset);
          case "XXXXX":
          case "XXX":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      x: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "x":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "xxxx":
          case "xx":
            return formatTimezone(timezoneOffset);
          case "xxxxx":
          case "xxx":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      O: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "OOOO":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      z: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "zzzz":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      t: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1e3);
        return (0, _index7.default)(timestamp, token.length);
      },
      T: function(date, token, _localize, options3) {
        var originalDate = options3._originalDate || date;
        var timestamp = originalDate.getTime();
        return (0, _index7.default)(timestamp, token.length);
      }
    };
    function formatTimezoneShort(offset, dirtyDelimiter) {
      var sign = offset > 0 ? "-" : "+";
      var absOffset = Math.abs(offset);
      var hours = Math.floor(absOffset / 60);
      var minutes = absOffset % 60;
      if (minutes === 0) {
        return sign + String(hours);
      }
      var delimiter = dirtyDelimiter || "";
      return sign + String(hours) + delimiter + (0, _index7.default)(minutes, 2);
    }
    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
      if (offset % 60 === 0) {
        var sign = offset > 0 ? "-" : "+";
        return sign + (0, _index7.default)(Math.abs(offset) / 60, 2);
      }
      return formatTimezone(offset, dirtyDelimiter);
    }
    function formatTimezone(offset, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || "";
      var sign = offset > 0 ? "-" : "+";
      var absOffset = Math.abs(offset);
      var hours = (0, _index7.default)(Math.floor(absOffset / 60), 2);
      var minutes = (0, _index7.default)(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }
    var _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/longFormatters/index.js
var require_longFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/longFormatters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    function dateLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case "P":
          return formatLong.date({
            width: "short"
          });
        case "PP":
          return formatLong.date({
            width: "medium"
          });
        case "PPP":
          return formatLong.date({
            width: "long"
          });
        case "PPPP":
        default:
          return formatLong.date({
            width: "full"
          });
      }
    }
    function timeLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case "p":
          return formatLong.time({
            width: "short"
          });
        case "pp":
          return formatLong.time({
            width: "medium"
          });
        case "ppp":
          return formatLong.time({
            width: "long"
          });
        case "pppp":
        default:
          return formatLong.time({
            width: "full"
          });
      }
    }
    function dateTimeLongFormatter(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/);
      var datePattern = matchResult[1];
      var timePattern = matchResult[2];
      if (!timePattern) {
        return dateLongFormatter(pattern, formatLong);
      }
      var dateTimeFormat;
      switch (datePattern) {
        case "P":
          dateTimeFormat = formatLong.dateTime({
            width: "short"
          });
          break;
        case "PP":
          dateTimeFormat = formatLong.dateTime({
            width: "medium"
          });
          break;
        case "PPP":
          dateTimeFormat = formatLong.dateTime({
            width: "long"
          });
          break;
        case "PPPP":
        default:
          dateTimeFormat = formatLong.dateTime({
            width: "full"
          });
          break;
      }
      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
    }
    var longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    var _default = longFormatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/protectedTokens/index.js
var require_protectedTokens = __commonJS({
  "node_modules/date-fns/_lib/protectedTokens/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
    exports2.isProtectedWeekYearToken = isProtectedWeekYearToken;
    exports2.throwProtectedError = throwProtectedError;
    var protectedDayOfYearTokens = ["D", "DD"];
    var protectedWeekYearTokens = ["YY", "YYYY"];
    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }
    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }
    function throwProtectedError(token, format3, input) {
      if (token === "YYYY") {
        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "YY") {
        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "D") {
        throw new RangeError("Use `d` instead of `D` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "DD") {
        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      }
    }
  }
});

// node_modules/date-fns/format/index.js
var require_format = __commonJS({
  "node_modules/date-fns/format/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = format3;
    var _index = _interopRequireDefault(require_isValid());
    var _index2 = _interopRequireDefault(require_en_US());
    var _index3 = _interopRequireDefault(require_subMilliseconds());
    var _index4 = _interopRequireDefault(require_toDate());
    var _index5 = _interopRequireDefault(require_formatters());
    var _index6 = _interopRequireDefault(require_longFormatters());
    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index8 = require_protectedTokens();
    var _index9 = _interopRequireDefault(require_toInteger());
    var _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function format3(dirtyDate, dirtyFormatStr, dirtyOptions) {
      (0, _index10.default)(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var options3 = dirtyOptions || {};
      var locale = options3.locale || _index2.default;
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options3.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      if (!locale.localize) {
        throw new RangeError("locale must contain localize property");
      }
      if (!locale.formatLong) {
        throw new RangeError("locale must contain formatLong property");
      }
      var originalDate = (0, _index4.default)(dirtyDate);
      if (!(0, _index.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var timezoneOffset = (0, _index7.default)(originalDate);
      var utcDate = (0, _index3.default)(originalDate, timezoneOffset);
      var formatterOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale,
        _originalDate: originalDate
      };
      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter === "p" || firstCharacter === "P") {
          var longFormatter = _index6.default[firstCharacter];
          return longFormatter(substring, locale.formatLong, formatterOptions);
        }
        return substring;
      }).join("").match(formattingTokensRegExp).map(function(substring) {
        if (substring === "''") {
          return "'";
        }
        var firstCharacter = substring[0];
        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }
        var formatter = _index5.default[firstCharacter];
        if (formatter) {
          if (!options3.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {
            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
          }
          if (!options3.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {
            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
          }
          return formatter(utcDate, substring, locale.localize, formatterOptions);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/assign/index.js
var require_assign = __commonJS({
  "node_modules/date-fns/_lib/assign/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = assign;
    function assign(target, dirtyObject) {
      if (target == null) {
        throw new TypeError("assign requires that input parameter not be null or undefined");
      }
      dirtyObject = dirtyObject || {};
      for (var property in dirtyObject) {
        if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {
          target[property] = dirtyObject[property];
        }
      }
      return target;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/cloneObject/index.js
var require_cloneObject = __commonJS({
  "node_modules/date-fns/_lib/cloneObject/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = cloneObject;
    var _index = _interopRequireDefault(require_assign());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function cloneObject(dirtyObject) {
      return (0, _index.default)({}, dirtyObject);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistance/index.js
var require_formatDistance2 = __commonJS({
  "node_modules/date-fns/formatDistance/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDistance2;
    var _index = _interopRequireDefault(require_compareAsc());
    var _index2 = _interopRequireDefault(require_differenceInMonths());
    var _index3 = _interopRequireDefault(require_differenceInSeconds());
    var _index4 = _interopRequireDefault(require_en_US());
    var _index5 = _interopRequireDefault(require_toDate());
    var _index6 = _interopRequireDefault(require_cloneObject());
    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index8 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MINUTES_IN_DAY = 1440;
    var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
    var MINUTES_IN_MONTH = 43200;
    var MINUTES_IN_TWO_MONTHS = 86400;
    function formatDistance2(dirtyDate, dirtyBaseDate) {
      var options3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index8.default)(2, arguments);
      var locale = options3.locale || _index4.default;
      if (!locale.formatDistance) {
        throw new RangeError("locale must contain formatDistance property");
      }
      var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison)) {
        throw new RangeError("Invalid time value");
      }
      var localizeOptions = (0, _index6.default)(options3);
      localizeOptions.addSuffix = Boolean(options3.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;
      if (comparison > 0) {
        dateLeft = (0, _index5.default)(dirtyBaseDate);
        dateRight = (0, _index5.default)(dirtyDate);
      } else {
        dateLeft = (0, _index5.default)(dirtyDate);
        dateRight = (0, _index5.default)(dirtyBaseDate);
      }
      var seconds = (0, _index3.default)(dateRight, dateLeft);
      var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1e3;
      var minutes = Math.round((seconds - offsetInSeconds) / 60);
      var months;
      if (minutes < 2) {
        if (options3.includeSeconds) {
          if (seconds < 5) {
            return locale.formatDistance("lessThanXSeconds", 5, localizeOptions);
          } else if (seconds < 10) {
            return locale.formatDistance("lessThanXSeconds", 10, localizeOptions);
          } else if (seconds < 20) {
            return locale.formatDistance("lessThanXSeconds", 20, localizeOptions);
          } else if (seconds < 40) {
            return locale.formatDistance("halfAMinute", null, localizeOptions);
          } else if (seconds < 60) {
            return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
          } else {
            return locale.formatDistance("xMinutes", 1, localizeOptions);
          }
        } else {
          if (minutes === 0) {
            return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
          } else {
            return locale.formatDistance("xMinutes", minutes, localizeOptions);
          }
        }
      } else if (minutes < 45) {
        return locale.formatDistance("xMinutes", minutes, localizeOptions);
      } else if (minutes < 90) {
        return locale.formatDistance("aboutXHours", 1, localizeOptions);
      } else if (minutes < MINUTES_IN_DAY) {
        var hours = Math.round(minutes / 60);
        return locale.formatDistance("aboutXHours", hours, localizeOptions);
      } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
        return locale.formatDistance("xDays", 1, localizeOptions);
      } else if (minutes < MINUTES_IN_MONTH) {
        var days = Math.round(minutes / MINUTES_IN_DAY);
        return locale.formatDistance("xDays", days, localizeOptions);
      } else if (minutes < MINUTES_IN_TWO_MONTHS) {
        months = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance("aboutXMonths", months, localizeOptions);
      }
      months = (0, _index2.default)(dateRight, dateLeft);
      if (months < 12) {
        var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance("xMonths", nearestMonth, localizeOptions);
      } else {
        var monthsSinceStartOfYear = months % 12;
        var years = Math.floor(months / 12);
        if (monthsSinceStartOfYear < 3) {
          return locale.formatDistance("aboutXYears", years, localizeOptions);
        } else if (monthsSinceStartOfYear < 9) {
          return locale.formatDistance("overXYears", years, localizeOptions);
        } else {
          return locale.formatDistance("almostXYears", years + 1, localizeOptions);
        }
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceStrict/index.js
var require_formatDistanceStrict = __commonJS({
  "node_modules/date-fns/formatDistanceStrict/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDistanceStrict;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_compareAsc());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_cloneObject());
    var _index5 = _interopRequireDefault(require_en_US());
    var _index6 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 1e3 * 60;
    var MINUTES_IN_DAY = 60 * 24;
    var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
    var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
    function formatDistanceStrict(dirtyDate, dirtyBaseDate) {
      var options3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index6.default)(2, arguments);
      var locale = options3.locale || _index5.default;
      if (!locale.formatDistance) {
        throw new RangeError("locale must contain localize.formatDistance property");
      }
      var comparison = (0, _index2.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison)) {
        throw new RangeError("Invalid time value");
      }
      var localizeOptions = (0, _index4.default)(options3);
      localizeOptions.addSuffix = Boolean(options3.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;
      if (comparison > 0) {
        dateLeft = (0, _index3.default)(dirtyBaseDate);
        dateRight = (0, _index3.default)(dirtyDate);
      } else {
        dateLeft = (0, _index3.default)(dirtyDate);
        dateRight = (0, _index3.default)(dirtyBaseDate);
      }
      var roundingMethod = options3.roundingMethod == null ? "round" : String(options3.roundingMethod);
      var roundingMethodFn;
      if (roundingMethod === "floor") {
        roundingMethodFn = Math.floor;
      } else if (roundingMethod === "ceil") {
        roundingMethodFn = Math.ceil;
      } else if (roundingMethod === "round") {
        roundingMethodFn = Math.round;
      } else {
        throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
      }
      var milliseconds = dateRight.getTime() - dateLeft.getTime();
      var minutes = milliseconds / MILLISECONDS_IN_MINUTE;
      var timezoneOffset = (0, _index.default)(dateRight) - (0, _index.default)(dateLeft);
      var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;
      var unit;
      if (options3.unit == null) {
        if (minutes < 1) {
          unit = "second";
        } else if (minutes < 60) {
          unit = "minute";
        } else if (minutes < MINUTES_IN_DAY) {
          unit = "hour";
        } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {
          unit = "day";
        } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {
          unit = "month";
        } else {
          unit = "year";
        }
      } else {
        unit = String(options3.unit);
      }
      if (unit === "second") {
        var seconds = roundingMethodFn(milliseconds / 1e3);
        return locale.formatDistance("xSeconds", seconds, localizeOptions);
      } else if (unit === "minute") {
        var roundedMinutes = roundingMethodFn(minutes);
        return locale.formatDistance("xMinutes", roundedMinutes, localizeOptions);
      } else if (unit === "hour") {
        var hours = roundingMethodFn(minutes / 60);
        return locale.formatDistance("xHours", hours, localizeOptions);
      } else if (unit === "day") {
        var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
        return locale.formatDistance("xDays", days, localizeOptions);
      } else if (unit === "month") {
        var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);
        return months === 12 && options3.unit !== "month" ? locale.formatDistance("xYears", 1, localizeOptions) : locale.formatDistance("xMonths", months, localizeOptions);
      } else if (unit === "year") {
        var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);
        return locale.formatDistance("xYears", years, localizeOptions);
      }
      throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceToNow/index.js
var require_formatDistanceToNow = __commonJS({
  "node_modules/date-fns/formatDistanceToNow/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDistanceToNow;
    var _index = _interopRequireDefault(require_formatDistance2());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNow(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), dirtyOptions);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceToNowStrict/index.js
var require_formatDistanceToNowStrict = __commonJS({
  "node_modules/date-fns/formatDistanceToNowStrict/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDistanceToNowStrict;
    var _index = _interopRequireDefault(require_formatDistanceStrict());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), dirtyOptions);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDuration/index.js
var require_formatDuration = __commonJS({
  "node_modules/date-fns/formatDuration/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatDuration;
    var _index = _interopRequireDefault(require_en_US());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var defaultFormat = ["years", "months", "weeks", "days", "hours", "minutes", "seconds"];
    function formatDuration(duration, options3) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }
      var format3 = (options3 === null || options3 === void 0 ? void 0 : options3.format) || defaultFormat;
      var locale = (options3 === null || options3 === void 0 ? void 0 : options3.locale) || _index.default;
      var zero = (options3 === null || options3 === void 0 ? void 0 : options3.zero) || false;
      var delimiter = (options3 === null || options3 === void 0 ? void 0 : options3.delimiter) || " ";
      var result = format3.reduce(function(acc, unit) {
        var token = "x".concat(unit.replace(/(^.)/, function(m) {
          return m.toUpperCase();
        }));
        var addChunk = typeof duration[unit] === "number" && (zero || duration[unit]);
        return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;
      }, []).join(delimiter);
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISO/index.js
var require_formatISO = __commonJS({
  "node_modules/date-fns/formatISO/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatISO;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var options3 = dirtyOptions || {};
      var format3 = options3.format == null ? "extended" : String(options3.format);
      var representation = options3.representation == null ? "complete" : String(options3.representation);
      if (format3 !== "extended" && format3 !== "basic") {
        throw new RangeError("format must be 'extended' or 'basic'");
      }
      if (representation !== "date" && representation !== "time" && representation !== "complete") {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }
      var result = "";
      var tzOffset = "";
      var dateDelimiter = format3 === "extended" ? "-" : "";
      var timeDelimiter = format3 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index3.default)(originalDate.getDate(), 2);
        var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);
        var year = (0, _index3.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var offset = originalDate.getTimezoneOffset();
        if (offset !== 0) {
          var absoluteOffset = Math.abs(offset);
          var hourOffset = (0, _index3.default)(Math.floor(absoluteOffset / 60), 2);
          var minuteOffset = (0, _index3.default)(absoluteOffset % 60, 2);
          var sign = offset < 0 ? "+" : "-";
          tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else {
          tzOffset = "Z";
        }
        var hour = (0, _index3.default)(originalDate.getHours(), 2);
        var minute = (0, _index3.default)(originalDate.getMinutes(), 2);
        var second = (0, _index3.default)(originalDate.getSeconds(), 2);
        var separator = result === "" ? "" : "T";
        var time = [hour, minute, second].join(timeDelimiter);
        result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
      }
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISO9075/index.js
var require_formatISO9075 = __commonJS({
  "node_modules/date-fns/formatISO9075/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatISO9075;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO9075(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var options3 = dirtyOptions || {};
      var format3 = options3.format == null ? "extended" : String(options3.format);
      var representation = options3.representation == null ? "complete" : String(options3.representation);
      if (format3 !== "extended" && format3 !== "basic") {
        throw new RangeError("format must be 'extended' or 'basic'");
      }
      if (representation !== "date" && representation !== "time" && representation !== "complete") {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }
      var result = "";
      var dateDelimiter = format3 === "extended" ? "-" : "";
      var timeDelimiter = format3 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index3.default)(originalDate.getDate(), 2);
        var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);
        var year = (0, _index3.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var hour = (0, _index3.default)(originalDate.getHours(), 2);
        var minute = (0, _index3.default)(originalDate.getMinutes(), 2);
        var second = (0, _index3.default)(originalDate.getSeconds(), 2);
        var separator = result === "" ? "" : " ";
        result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
      }
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISODuration/index.js
var require_formatISODuration = __commonJS({
  "node_modules/date-fns/formatISODuration/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatISODuration;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISODuration(duration) {
      (0, _index.default)(1, arguments);
      if (typeof duration !== "object")
        throw new Error("Duration must be an object");
      var _duration$years = duration.years, years = _duration$years === void 0 ? 0 : _duration$years, _duration$months = duration.months, months = _duration$months === void 0 ? 0 : _duration$months, _duration$days = duration.days, days = _duration$days === void 0 ? 0 : _duration$days, _duration$hours = duration.hours, hours = _duration$hours === void 0 ? 0 : _duration$hours, _duration$minutes = duration.minutes, minutes = _duration$minutes === void 0 ? 0 : _duration$minutes, _duration$seconds = duration.seconds, seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
      return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRFC3339/index.js
var require_formatRFC3339 = __commonJS({
  "node_modules/date-fns/formatRFC3339/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatRFC3339;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    var _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRFC3339(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var options3 = dirtyOptions || {};
      var fractionDigits = options3.fractionDigits == null ? 0 : (0, _index4.default)(options3.fractionDigits);
      if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
        throw new RangeError("fractionDigits must be between 0 and 3 inclusively");
      }
      var day = (0, _index3.default)(originalDate.getDate(), 2);
      var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);
      var year = originalDate.getFullYear();
      var hour = (0, _index3.default)(originalDate.getHours(), 2);
      var minute = (0, _index3.default)(originalDate.getMinutes(), 2);
      var second = (0, _index3.default)(originalDate.getSeconds(), 2);
      var fractionalSecond = "";
      if (fractionDigits > 0) {
        var milliseconds = originalDate.getMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
        fractionalSecond = "." + (0, _index3.default)(fractionalSeconds, fractionDigits);
      }
      var offset = "";
      var tzOffset = originalDate.getTimezoneOffset();
      if (tzOffset !== 0) {
        var absoluteOffset = Math.abs(tzOffset);
        var hourOffset = (0, _index3.default)((0, _index4.default)(absoluteOffset / 60), 2);
        var minuteOffset = (0, _index3.default)(absoluteOffset % 60, 2);
        var sign = tzOffset < 0 ? "+" : "-";
        offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
      } else {
        offset = "Z";
      }
      return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRFC7231/index.js
var require_formatRFC7231 = __commonJS({
  "node_modules/date-fns/formatRFC7231/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatRFC7231;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function formatRFC7231(dirtyDate) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var dayName = days[originalDate.getUTCDay()];
      var dayOfMonth = (0, _index3.default)(originalDate.getUTCDate(), 2);
      var monthName = months[originalDate.getUTCMonth()];
      var year = originalDate.getUTCFullYear();
      var hour = (0, _index3.default)(originalDate.getUTCHours(), 2);
      var minute = (0, _index3.default)(originalDate.getUTCMinutes(), 2);
      var second = (0, _index3.default)(originalDate.getUTCSeconds(), 2);
      return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRelative/index.js
var require_formatRelative2 = __commonJS({
  "node_modules/date-fns/formatRelative/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = formatRelative;
    var _index = _interopRequireDefault(require_differenceInCalendarDays());
    var _index2 = _interopRequireDefault(require_format());
    var _index3 = _interopRequireDefault(require_en_US());
    var _index4 = _interopRequireDefault(require_subMilliseconds());
    var _index5 = _interopRequireDefault(require_toDate());
    var _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index7 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
      (0, _index7.default)(2, arguments);
      var date = (0, _index5.default)(dirtyDate);
      var baseDate = (0, _index5.default)(dirtyBaseDate);
      var _ref = dirtyOptions || {}, _ref$locale = _ref.locale, locale = _ref$locale === void 0 ? _index3.default : _ref$locale, _ref$weekStartsOn = _ref.weekStartsOn, weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;
      if (!locale.localize) {
        throw new RangeError("locale must contain localize property");
      }
      if (!locale.formatLong) {
        throw new RangeError("locale must contain formatLong property");
      }
      if (!locale.formatRelative) {
        throw new RangeError("locale must contain formatRelative property");
      }
      var diff = (0, _index.default)(date, baseDate);
      if (isNaN(diff)) {
        throw new RangeError("Invalid time value");
      }
      var token;
      if (diff < -6) {
        token = "other";
      } else if (diff < -1) {
        token = "lastWeek";
      } else if (diff < 0) {
        token = "yesterday";
      } else if (diff < 1) {
        token = "today";
      } else if (diff < 2) {
        token = "tomorrow";
      } else if (diff < 7) {
        token = "nextWeek";
      } else {
        token = "other";
      }
      var utcDate = (0, _index4.default)(date, (0, _index6.default)(date));
      var utcBaseDate = (0, _index4.default)(baseDate, (0, _index6.default)(baseDate));
      var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {
        locale,
        weekStartsOn
      });
      return (0, _index2.default)(date, formatStr, {
        locale,
        weekStartsOn
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/fromUnixTime/index.js
var require_fromUnixTime = __commonJS({
  "node_modules/date-fns/fromUnixTime/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = fromUnixTime;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function fromUnixTime(dirtyUnixTime) {
      (0, _index3.default)(1, arguments);
      var unixTime = (0, _index2.default)(dirtyUnixTime);
      return (0, _index.default)(unixTime * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDate/index.js
var require_getDate = __commonJS({
  "node_modules/date-fns/getDate/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDate;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDate(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dayOfMonth = date.getDate();
      return dayOfMonth;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDay/index.js
var require_getDay = __commonJS({
  "node_modules/date-fns/getDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      return day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDayOfYear/index.js
var require_getDayOfYear = __commonJS({
  "node_modules/date-fns/getDayOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfYear());
    var _index3 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDayOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index3.default)(date, (0, _index2.default)(date));
      var dayOfYear = diff + 1;
      return dayOfYear;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDaysInMonth/index.js
var require_getDaysInMonth = __commonJS({
  "node_modules/date-fns/getDaysInMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDaysInMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var monthIndex = date.getMonth();
      var lastDayOfMonth = new Date(0);
      lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
      lastDayOfMonth.setHours(0, 0, 0, 0);
      return lastDayOfMonth.getDate();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isLeapYear/index.js
var require_isLeapYear = __commonJS({
  "node_modules/date-fns/isLeapYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isLeapYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLeapYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDaysInYear/index.js
var require_getDaysInYear = __commonJS({
  "node_modules/date-fns/getDaysInYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDaysInYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isLeapYear());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      if (String(new Date(date)) === "Invalid Date") {
        return NaN;
      }
      return (0, _index2.default)(date) ? 366 : 365;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDecade/index.js
var require_getDecade = __commonJS({
  "node_modules/date-fns/getDecade/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      return decade;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getHours/index.js
var require_getHours = __commonJS({
  "node_modules/date-fns/getHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getHours;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getHours(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var hours = date.getHours();
      return hours;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISODay/index.js
var require_getISODay = __commonJS({
  "node_modules/date-fns/getISODay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getISODay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISODay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      if (day === 0) {
        day = 7;
      }
      return day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeek/index.js
var require_getISOWeek = __commonJS({
  "node_modules/date-fns/getISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeeksInYear/index.js
var require_getISOWeeksInYear = __commonJS({
  "node_modules/date-fns/getISOWeeksInYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getISOWeeksInYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear());
    var _index2 = _interopRequireDefault(require_addWeeks());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeeksInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var thisYear = (0, _index.default)(dirtyDate);
      var nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60));
      var diff = nextYear.valueOf() - thisYear.valueOf();
      return Math.round(diff / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMilliseconds/index.js
var require_getMilliseconds = __commonJS({
  "node_modules/date-fns/getMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getMilliseconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMilliseconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var milliseconds = date.getMilliseconds();
      return milliseconds;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMinutes/index.js
var require_getMinutes = __commonJS({
  "node_modules/date-fns/getMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getMinutes;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMinutes(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var minutes = date.getMinutes();
      return minutes;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMonth/index.js
var require_getMonth = __commonJS({
  "node_modules/date-fns/getMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      return month;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getOverlappingDaysInIntervals/index.js
var require_getOverlappingDaysInIntervals = __commonJS({
  "node_modules/date-fns/getOverlappingDaysInIntervals/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getOverlappingDaysInIntervals;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1e3;
    function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
      (0, _index2.default)(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = (0, _index.default)(intervalLeft.start).getTime();
      var leftEndTime = (0, _index.default)(intervalLeft.end).getTime();
      var rightStartTime = (0, _index.default)(intervalRight.start).getTime();
      var rightEndTime = (0, _index.default)(intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError("Invalid interval");
      }
      var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;
      if (!isOverlapping) {
        return 0;
      }
      var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
      var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
      var differenceInMs = overlapEndDate - overlapStartDate;
      return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getSeconds/index.js
var require_getSeconds = __commonJS({
  "node_modules/date-fns/getSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getSeconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getSeconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var seconds = date.getSeconds();
      return seconds;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getTime/index.js
var require_getTime = __commonJS({
  "node_modules/date-fns/getTime/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getTime;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getTime(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var timestamp = date.getTime();
      return timestamp;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getUnixTime/index.js
var require_getUnixTime = __commonJS({
  "node_modules/date-fns/getUnixTime/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUnixTime;
    var _index = _interopRequireDefault(require_getTime());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUnixTime(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return Math.floor((0, _index.default)(dirtyDate) / 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeekYear/index.js
var require_getWeekYear = __commonJS({
  "node_modules/date-fns/getWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getWeekYear;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekYear(dirtyDate, options3) {
      var _options$locale, _options$locale$optio;
      (0, _index4.default)(1, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var year = date.getFullYear();
      var localeFirstWeekContainsDate = options3 === null || options3 === void 0 ? void 0 : (_options$locale = options3.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index3.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = (options3 === null || options3 === void 0 ? void 0 : options3.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : (0, _index3.default)(options3.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index.default)(firstWeekOfNextYear, options3);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index.default)(firstWeekOfThisYear, options3);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfWeekYear/index.js
var require_startOfWeekYear = __commonJS({
  "node_modules/date-fns/startOfWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfWeekYear;
    var _index = _interopRequireDefault(require_getWeekYear());
    var _index2 = _interopRequireDefault(require_startOfWeek());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeekYear(dirtyDate, dirtyOptions) {
      (0, _index4.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index3.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index3.default)(options3.firstWeekContainsDate);
      var year = (0, _index.default)(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(firstWeek, dirtyOptions);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeek/index.js
var require_getWeek = __commonJS({
  "node_modules/date-fns/getWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_startOfWeekYear());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getWeek(dirtyDate, options3) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index3.default)(dirtyDate);
      var diff = (0, _index.default)(date, options3).getTime() - (0, _index2.default)(date, options3).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeekOfMonth/index.js
var require_getWeekOfMonth = __commonJS({
  "node_modules/date-fns/getWeekOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getWeekOfMonth;
    var _index = _interopRequireDefault(require_getDate());
    var _index2 = _interopRequireDefault(require_getDay());
    var _index3 = _interopRequireDefault(require_startOfMonth());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekOfMonth(date, dirtyOptions) {
      (0, _index5.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index4.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index4.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var currentDayOfMonth = (0, _index.default)(date);
      if (isNaN(currentDayOfMonth)) {
        return currentDayOfMonth;
      }
      var startWeekDay = (0, _index2.default)((0, _index3.default)(date));
      var lastDayOfFirstWeek = 0;
      if (startWeekDay >= weekStartsOn) {
        lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
      } else {
        lastDayOfFirstWeek = weekStartsOn - startWeekDay;
      }
      var weekNumber = 1;
      if (currentDayOfMonth > lastDayOfFirstWeek) {
        var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
        weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
      }
      return weekNumber;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfMonth/index.js
var require_lastDayOfMonth = __commonJS({
  "node_modules/date-fns/lastDayOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeeksInMonth/index.js
var require_getWeeksInMonth = __commonJS({
  "node_modules/date-fns/getWeeksInMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getWeeksInMonth;
    var _index = _interopRequireDefault(require_differenceInCalendarWeeks());
    var _index2 = _interopRequireDefault(require_lastDayOfMonth());
    var _index3 = _interopRequireDefault(require_startOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeeksInMonth(date, options3) {
      (0, _index4.default)(1, arguments);
      return (0, _index.default)((0, _index2.default)(date), (0, _index3.default)(date), options3) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getYear/index.js
var require_getYear = __commonJS({
  "node_modules/date-fns/getYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      return year;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToMilliseconds/index.js
var require_hoursToMilliseconds = __commonJS({
  "node_modules/date-fns/hoursToMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = hoursToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMilliseconds(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.millisecondsInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToMinutes/index.js
var require_hoursToMinutes = __commonJS({
  "node_modules/date-fns/hoursToMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = hoursToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMinutes(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.minutesInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToSeconds/index.js
var require_hoursToSeconds = __commonJS({
  "node_modules/date-fns/hoursToSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = hoursToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToSeconds(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.secondsInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subDays/index.js
var require_subDays = __commonJS({
  "node_modules/date-fns/subDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subDays;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMonths/index.js
var require_subMonths = __commonJS({
  "node_modules/date-fns/subMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subMonths;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/sub/index.js
var require_sub = __commonJS({
  "node_modules/date-fns/sub/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = sub;
    var _index = _interopRequireDefault(require_subDays());
    var _index2 = _interopRequireDefault(require_subMonths());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function sub(dirtyDate, duration) {
      (0, _index4.default)(2, arguments);
      if (!duration || typeof duration !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index5.default)(duration.years) : 0;
      var months = duration.months ? (0, _index5.default)(duration.months) : 0;
      var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;
      var days = duration.days ? (0, _index5.default)(duration.days) : 0;
      var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;
      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;
      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;
      var dateWithoutMonths = (0, _index2.default)((0, _index3.default)(dirtyDate), months + years * 12);
      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);
      var minutestoSub = minutes + hours * 60;
      var secondstoSub = seconds + minutestoSub * 60;
      var mstoSub = secondstoSub * 1e3;
      var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
      return finalDate;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/intervalToDuration/index.js
var require_intervalToDuration = __commonJS({
  "node_modules/date-fns/intervalToDuration/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = intervalToDuration;
    var _index = _interopRequireDefault(require_compareAsc());
    var _index2 = _interopRequireDefault(require_differenceInYears());
    var _index3 = _interopRequireDefault(require_differenceInMonths());
    var _index4 = _interopRequireDefault(require_differenceInDays());
    var _index5 = _interopRequireDefault(require_differenceInHours());
    var _index6 = _interopRequireDefault(require_differenceInMinutes());
    var _index7 = _interopRequireDefault(require_differenceInSeconds());
    var _index8 = _interopRequireDefault(require_isValid());
    var _index9 = _interopRequireDefault(require_requiredArgs());
    var _index10 = _interopRequireDefault(require_toDate());
    var _index11 = _interopRequireDefault(require_sub());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intervalToDuration(_ref) {
      var start = _ref.start, end = _ref.end;
      (0, _index9.default)(1, arguments);
      var dateLeft = (0, _index10.default)(start);
      var dateRight = (0, _index10.default)(end);
      if (!(0, _index8.default)(dateLeft)) {
        throw new RangeError("Start Date is invalid");
      }
      if (!(0, _index8.default)(dateRight)) {
        throw new RangeError("End Date is invalid");
      }
      var duration = {
        years: 0,
        months: 0,
        days: 0,
        hours: 0,
        minutes: 0,
        seconds: 0
      };
      var sign = (0, _index.default)(dateLeft, dateRight);
      duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));
      var remainingMonths = (0, _index11.default)(dateLeft, {
        years: sign * duration.years
      });
      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));
      var remainingDays = (0, _index11.default)(remainingMonths, {
        months: sign * duration.months
      });
      duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));
      var remainingHours = (0, _index11.default)(remainingDays, {
        days: sign * duration.days
      });
      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));
      var remainingMinutes = (0, _index11.default)(remainingHours, {
        hours: sign * duration.hours
      });
      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));
      var remainingSeconds = (0, _index11.default)(remainingMinutes, {
        minutes: sign * duration.minutes
      });
      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));
      return duration;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/intlFormat/index.js
var require_intlFormat = __commonJS({
  "node_modules/date-fns/intlFormat/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = intlFormat;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intlFormat(date, formatOrLocale, localeOptions) {
      var _localeOptions;
      (0, _index.default)(1, arguments);
      var formatOptions;
      if (isFormatOptions(formatOrLocale)) {
        formatOptions = formatOrLocale;
      } else {
        localeOptions = formatOrLocale;
      }
      return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);
    }
    function isFormatOptions(opts) {
      return opts !== void 0 && !("locale" in opts);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isAfter/index.js
var require_isAfter = __commonJS({
  "node_modules/date-fns/isAfter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isAfter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isAfter(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() > dateToCompare.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isBefore/index.js
var require_isBefore = __commonJS({
  "node_modules/date-fns/isBefore/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isBefore;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isBefore(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() < dateToCompare.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isDate/index.js
var require_isDate = __commonJS({
  "node_modules/date-fns/isDate/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isDate(value) {
      (0, _index.default)(1, arguments);
      return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isEqual/index.js
var require_isEqual = __commonJS({
  "node_modules/date-fns/isEqual/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isEqual;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isEqual(dirtyLeftDate, dirtyRightDate) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyLeftDate);
      var dateRight = (0, _index.default)(dirtyRightDate);
      return dateLeft.getTime() === dateRight.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isExists/index.js
var require_isExists = __commonJS({
  "node_modules/date-fns/isExists/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isExists;
    function isExists(year, month, day) {
      if (arguments.length < 3) {
        throw new TypeError("3 argument required, but only " + arguments.length + " present");
      }
      var date = new Date(year, month, day);
      return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFirstDayOfMonth/index.js
var require_isFirstDayOfMonth = __commonJS({
  "node_modules/date-fns/isFirstDayOfMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isFirstDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFirstDayOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDate() === 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFriday/index.js
var require_isFriday = __commonJS({
  "node_modules/date-fns/isFriday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isFriday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFriday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 5;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFuture/index.js
var require_isFuture = __commonJS({
  "node_modules/date-fns/isFuture/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isFuture;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFuture(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getTime() > Date.now();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/setUTCDay/index.js
var require_setUTCDay = __commonJS({
  "node_modules/date-fns/_lib/setUTCDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setUTCDay;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
      (0, _index3.default)(2, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index2.default)(dirtyDate);
      var day = (0, _index.default)(dirtyDay);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/setUTCISODay/index.js
var require_setUTCISODay = __commonJS({
  "node_modules/date-fns/_lib/setUTCISODay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setUTCISODay;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISODay(dirtyDate, dirtyDay) {
      (0, _index3.default)(2, arguments);
      var day = (0, _index.default)(dirtyDay);
      if (day % 7 === 0) {
        day = day - 7;
      }
      var weekStartsOn = 1;
      var date = (0, _index2.default)(dirtyDate);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/setUTCISOWeek/index.js
var require_setUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setUTCISOWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getUTCISOWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeek = (0, _index.default)(dirtyISOWeek);
      var diff = (0, _index3.default)(date) - isoWeek;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/setUTCWeek/index.js
var require_setUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setUTCWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getUTCWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCWeek(dirtyDate, dirtyWeek, options3) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var week = (0, _index.default)(dirtyWeek);
      var diff = (0, _index3.default)(date, options3) - week;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/index.js
var require_parsers = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_getUTCWeekYear());
    var _index2 = _interopRequireDefault(require_setUTCDay());
    var _index3 = _interopRequireDefault(require_setUTCISODay());
    var _index4 = _interopRequireDefault(require_setUTCISOWeek());
    var _index5 = _interopRequireDefault(require_setUTCWeek());
    var _index6 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index7 = _interopRequireDefault(require_startOfUTCWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    var MILLISECONDS_IN_MINUTE = 6e4;
    var MILLISECONDS_IN_SECOND = 1e3;
    var numericPatterns = {
      month: /^(1[0-2]|0?\d)/,
      date: /^(3[0-1]|[0-2]?\d)/,
      dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
      week: /^(5[0-3]|[0-4]?\d)/,
      hour23h: /^(2[0-3]|[0-1]?\d)/,
      hour24h: /^(2[0-4]|[0-1]?\d)/,
      hour11h: /^(1[0-1]|0?\d)/,
      hour12h: /^(1[0-2]|0?\d)/,
      minute: /^[0-5]?\d/,
      second: /^[0-5]?\d/,
      singleDigit: /^\d/,
      twoDigits: /^\d{1,2}/,
      threeDigits: /^\d{1,3}/,
      fourDigits: /^\d{1,4}/,
      anyDigitsSigned: /^-?\d+/,
      singleDigitSigned: /^-?\d/,
      twoDigitsSigned: /^-?\d{1,2}/,
      threeDigitsSigned: /^-?\d{1,3}/,
      fourDigitsSigned: /^-?\d{1,4}/
    };
    var timezonePatterns = {
      basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
      basic: /^([+-])(\d{2})(\d{2})|Z/,
      basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
      extended: /^([+-])(\d{2}):(\d{2})|Z/,
      extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
    };
    function parseNumericPattern(pattern, string, valueCallback) {
      var matchResult = string.match(pattern);
      if (!matchResult) {
        return null;
      }
      var value = parseInt(matchResult[0], 10);
      return {
        value: valueCallback ? valueCallback(value) : value,
        rest: string.slice(matchResult[0].length)
      };
    }
    function parseTimezonePattern(pattern, string) {
      var matchResult = string.match(pattern);
      if (!matchResult) {
        return null;
      }
      if (matchResult[0] === "Z") {
        return {
          value: 0,
          rest: string.slice(1)
        };
      }
      var sign = matchResult[1] === "+" ? 1 : -1;
      var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
      var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
      var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
      return {
        value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
        rest: string.slice(matchResult[0].length)
      };
    }
    function parseAnyDigitsSigned(string, valueCallback) {
      return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
    }
    function parseNDigits(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);
        case 2:
          return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);
        case 3:
          return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);
        case 4:
          return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);
        default:
          return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), string, valueCallback);
      }
    }
    function parseNDigitsSigned(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);
        case 2:
          return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);
        case 3:
          return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);
        case 4:
          return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);
        default:
          return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), string, valueCallback);
      }
    }
    function dayPeriodEnumToHours(enumValue) {
      switch (enumValue) {
        case "morning":
          return 4;
        case "evening":
          return 17;
        case "pm":
        case "noon":
        case "afternoon":
          return 12;
        case "am":
        case "midnight":
        case "night":
        default:
          return 0;
      }
    }
    function normalizeTwoDigitYear(twoDigitYear, currentYear) {
      var isCommonEra = currentYear > 0;
      var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
      var result;
      if (absCurrentYear <= 50) {
        result = twoDigitYear || 100;
      } else {
        var rangeEnd = absCurrentYear + 50;
        var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
        var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
        result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
      }
      return isCommonEra ? result : 1 - result;
    }
    var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    var parsers = {
      G: {
        priority: 140,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "G":
            case "GG":
            case "GGG":
              return match.era(string, {
                width: "abbreviated"
              }) || match.era(string, {
                width: "narrow"
              });
            case "GGGGG":
              return match.era(string, {
                width: "narrow"
              });
            case "GGGG":
            default:
              return match.era(string, {
                width: "wide"
              }) || match.era(string, {
                width: "abbreviated"
              }) || match.era(string, {
                width: "narrow"
              });
          }
        },
        set: function(date, flags, value, _options) {
          flags.era = value;
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["R", "u", "t", "T"]
      },
      y: {
        priority: 130,
        parse: function(string, token, match, _options) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "yy"
            };
          };
          switch (token) {
            case "y":
              return parseNDigits(4, string, valueCallback);
            case "yo":
              return match.ordinalNumber(string, {
                unit: "year",
                valueCallback
              });
            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, _options) {
          var currentYear = date.getUTCFullYear();
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]
      },
      Y: {
        priority: 130,
        parse: function(string, token, match, _options) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "YY"
            };
          };
          switch (token) {
            case "Y":
              return parseNDigits(4, string, valueCallback);
            case "Yo":
              return match.ordinalNumber(string, {
                unit: "year",
                valueCallback
              });
            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, options3) {
          var currentYear = (0, _index.default)(date, options3);
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, options3.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return (0, _index7.default)(date, options3);
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, options3.firstWeekContainsDate);
          date.setUTCHours(0, 0, 0, 0);
          return (0, _index7.default)(date, options3);
        },
        incompatibleTokens: ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]
      },
      R: {
        priority: 130,
        parse: function(string, token, _match, _options) {
          if (token === "R") {
            return parseNDigitsSigned(4, string);
          }
          return parseNDigitsSigned(token.length, string);
        },
        set: function(_date, _flags, value, _options) {
          var firstWeekOfYear = new Date(0);
          firstWeekOfYear.setUTCFullYear(value, 0, 4);
          firstWeekOfYear.setUTCHours(0, 0, 0, 0);
          return (0, _index6.default)(firstWeekOfYear);
        },
        incompatibleTokens: ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
      },
      u: {
        priority: 130,
        parse: function(string, token, _match, _options) {
          if (token === "u") {
            return parseNDigitsSigned(4, string);
          }
          return parseNDigitsSigned(token.length, string);
        },
        set: function(date, _flags, value, _options) {
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]
      },
      Q: {
        priority: 120,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "Q":
            case "QQ":
              return parseNDigits(token.length, string);
            case "Qo":
              return match.ordinalNumber(string, {
                unit: "quarter"
              });
            case "QQQ":
              return match.quarter(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQQ":
              return match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQ":
            default:
              return match.quarter(string, {
                width: "wide",
                context: "formatting"
              }) || match.quarter(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
      },
      q: {
        priority: 120,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "q":
            case "qq":
              return parseNDigits(token.length, string);
            case "qo":
              return match.ordinalNumber(string, {
                unit: "quarter"
              });
            case "qqq":
              return match.quarter(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqqq":
              return match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqq":
            default:
              return match.quarter(string, {
                width: "wide",
                context: "standalone"
              }) || match.quarter(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
      },
      M: {
        priority: 110,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "M":
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            case "MM":
              return parseNDigits(2, string, valueCallback);
            case "Mo":
              return match.ordinalNumber(string, {
                unit: "month",
                valueCallback
              });
            case "MMM":
              return match.month(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(string, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMMM":
              return match.month(string, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMM":
            default:
              return match.month(string, {
                width: "wide",
                context: "formatting"
              }) || match.month(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      L: {
        priority: 110,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "L":
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            case "LL":
              return parseNDigits(2, string, valueCallback);
            case "Lo":
              return match.ordinalNumber(string, {
                unit: "month",
                valueCallback
              });
            case "LLL":
              return match.month(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(string, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLLL":
              return match.month(string, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLL":
            default:
              return match.month(string, {
                width: "wide",
                context: "standalone"
              }) || match.month(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      w: {
        priority: 100,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "w":
              return parseNumericPattern(numericPatterns.week, string);
            case "wo":
              return match.ordinalNumber(string, {
                unit: "week"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options3) {
          return (0, _index7.default)((0, _index5.default)(date, value, options3), options3);
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]
      },
      I: {
        priority: 100,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "I":
              return parseNumericPattern(numericPatterns.week, string);
            case "Io":
              return match.ordinalNumber(string, {
                unit: "week"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options3) {
          return (0, _index6.default)((0, _index4.default)(date, value, options3), options3);
        },
        incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
      },
      d: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "d":
              return parseNumericPattern(numericPatterns.date, string);
            case "do":
              return match.ordinalNumber(string, {
                unit: "date"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);
          var month = date.getUTCMonth();
          if (isLeapYear) {
            return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
          } else {
            return value >= 1 && value <= DAYS_IN_MONTH[month];
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCDate(value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      D: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "D":
            case "DD":
              return parseNumericPattern(numericPatterns.dayOfYear, string);
            case "Do":
              return match.ordinalNumber(string, {
                unit: "date"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);
          if (isLeapYear) {
            return value >= 1 && value <= 366;
          } else {
            return value >= 1 && value <= 365;
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(0, value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]
      },
      E: {
        priority: 90,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "E":
            case "EE":
            case "EEE":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEE":
              return match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEEE":
              return match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEE":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting"
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options3) {
          date = (0, _index2.default)(date, value, options3);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["D", "i", "e", "c", "t", "T"]
      },
      e: {
        priority: 90,
        parse: function(string, token, match, options3) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options3.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "e":
            case "ee":
              return parseNDigits(token.length, string, valueCallback);
            case "eo":
              return match.ordinalNumber(string, {
                unit: "day",
                valueCallback
              });
            case "eee":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeee":
              return match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeeee":
              return match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeee":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting"
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options3) {
          date = (0, _index2.default)(date, value, options3);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]
      },
      c: {
        priority: 90,
        parse: function(string, token, match, options3) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options3.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "c":
            case "cc":
              return parseNDigits(token.length, string, valueCallback);
            case "co":
              return match.ordinalNumber(string, {
                unit: "day",
                valueCallback
              });
            case "ccc":
              return match.day(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "ccccc":
              return match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "cccccc":
              return match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "cccc":
            default:
              return match.day(string, {
                width: "wide",
                context: "standalone"
              }) || match.day(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options3) {
          date = (0, _index2.default)(date, value, options3);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]
      },
      i: {
        priority: 90,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            if (value === 0) {
              return 7;
            }
            return value;
          };
          switch (token) {
            case "i":
            case "ii":
              return parseNDigits(token.length, string);
            case "io":
              return match.ordinalNumber(string, {
                unit: "day"
              });
            case "iii":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiiii":
              return match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiiiii":
              return match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiii":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 7;
        },
        set: function(date, _flags, value, options3) {
          date = (0, _index3.default)(date, value, options3);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]
      },
      a: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "a":
            case "aa":
            case "aaa":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaaa":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaa":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["b", "B", "H", "K", "k", "t", "T"]
      },
      b: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "b":
            case "bb":
            case "bbb":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbbb":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbb":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "B", "H", "K", "k", "t", "T"]
      },
      B: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "B":
            case "BB":
            case "BBB":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBBB":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBB":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "t", "T"]
      },
      h: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "h":
              return parseNumericPattern(numericPatterns.hour12h, string);
            case "ho":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 12;
        },
        set: function(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;
          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else if (!isPM && value === 12) {
            date.setUTCHours(0, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }
          return date;
        },
        incompatibleTokens: ["H", "K", "k", "t", "T"]
      },
      H: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "H":
              return parseNumericPattern(numericPatterns.hour23h, string);
            case "Ho":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 23;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(value, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "K", "k", "t", "T"]
      },
      K: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "K":
              return parseNumericPattern(numericPatterns.hour11h, string);
            case "Ko":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;
          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "H", "k", "t", "T"]
      },
      k: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "k":
              return parseNumericPattern(numericPatterns.hour24h, string);
            case "ko":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 24;
        },
        set: function(date, _flags, value, _options) {
          var hours = value <= 24 ? value % 24 : value;
          date.setUTCHours(hours, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "H", "K", "t", "T"]
      },
      m: {
        priority: 60,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "m":
              return parseNumericPattern(numericPatterns.minute, string);
            case "mo":
              return match.ordinalNumber(string, {
                unit: "minute"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMinutes(value, 0, 0);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      s: {
        priority: 50,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "s":
              return parseNumericPattern(numericPatterns.second, string);
            case "so":
              return match.ordinalNumber(string, {
                unit: "second"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCSeconds(value, 0);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      S: {
        priority: 30,
        parse: function(string, token, _match, _options) {
          var valueCallback = function(value) {
            return Math.floor(value * Math.pow(10, -token.length + 3));
          };
          return parseNDigits(token.length, string, valueCallback);
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMilliseconds(value);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      X: {
        priority: 10,
        parse: function(string, token, _match, _options) {
          switch (token) {
            case "X":
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
            case "XX":
              return parseTimezonePattern(timezonePatterns.basic, string);
            case "XXXX":
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
            case "XXXXX":
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
            case "XXX":
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }
          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ["t", "T", "x"]
      },
      x: {
        priority: 10,
        parse: function(string, token, _match, _options) {
          switch (token) {
            case "x":
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
            case "xx":
              return parseTimezonePattern(timezonePatterns.basic, string);
            case "xxxx":
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
            case "xxxxx":
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
            case "xxx":
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }
          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ["t", "T", "X"]
      },
      t: {
        priority: 40,
        parse: function(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
          return [new Date(value * 1e3), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: "*"
      },
      T: {
        priority: 20,
        parse: function(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
          return [new Date(value), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: "*"
      }
    };
    var _default = parsers;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/index.js
var require_parse2 = __commonJS({
  "node_modules/date-fns/parse/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = parse2;
    var _index = _interopRequireDefault(require_en_US());
    var _index2 = _interopRequireDefault(require_subMilliseconds());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_assign());
    var _index5 = _interopRequireDefault(require_longFormatters());
    var _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index7 = require_protectedTokens();
    var _index8 = _interopRequireDefault(require_toInteger());
    var _index9 = _interopRequireDefault(require_parsers());
    var _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var TIMEZONE_UNIT_PRIORITY = 10;
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var notWhitespaceRegExp = /\S/;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function parse2(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
      (0, _index10.default)(3, arguments);
      var dateString = String(dirtyDateString);
      var formatString = String(dirtyFormatString);
      var options3 = dirtyOptions || {};
      var locale = options3.locale || _index.default;
      if (!locale.match) {
        throw new RangeError("locale must contain match property");
      }
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index8.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index8.default)(options3.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index8.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index8.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      if (formatString === "") {
        if (dateString === "") {
          return (0, _index3.default)(dirtyReferenceDate);
        } else {
          return new Date(NaN);
        }
      }
      var subFnOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale
      };
      var setters = [{
        priority: TIMEZONE_UNIT_PRIORITY,
        subPriority: -1,
        set: dateToSystemTimezone,
        index: 0
      }];
      var i;
      var tokens = formatString.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter2 = substring[0];
        if (firstCharacter2 === "p" || firstCharacter2 === "P") {
          var longFormatter = _index5.default[firstCharacter2];
          return longFormatter(substring, locale.formatLong, subFnOptions);
        }
        return substring;
      }).join("").match(formattingTokensRegExp);
      var usedTokens = [];
      for (i = 0; i < tokens.length; i++) {
        var token = tokens[i];
        if (!options3.useAdditionalWeekYearTokens && (0, _index7.isProtectedWeekYearToken)(token)) {
          (0, _index7.throwProtectedError)(token, formatString, dirtyDateString);
        }
        if (!options3.useAdditionalDayOfYearTokens && (0, _index7.isProtectedDayOfYearToken)(token)) {
          (0, _index7.throwProtectedError)(token, formatString, dirtyDateString);
        }
        var firstCharacter = token[0];
        var parser = _index9.default[firstCharacter];
        if (parser) {
          var incompatibleTokens = parser.incompatibleTokens;
          if (Array.isArray(incompatibleTokens)) {
            var incompatibleToken = void 0;
            for (var _i = 0; _i < usedTokens.length; _i++) {
              var usedToken = usedTokens[_i].token;
              if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
                incompatibleToken = usedTokens[_i];
                break;
              }
            }
            if (incompatibleToken) {
              throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
            }
          } else if (parser.incompatibleTokens === "*" && usedTokens.length) {
            throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
          }
          usedTokens.push({
            token: firstCharacter,
            fullToken: token
          });
          var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);
          if (!parseResult) {
            return new Date(NaN);
          }
          setters.push({
            priority: parser.priority,
            subPriority: parser.subPriority || 0,
            set: parser.set,
            validate: parser.validate,
            value: parseResult.value,
            index: setters.length
          });
          dateString = parseResult.rest;
        } else {
          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
            throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
          }
          if (token === "''") {
            token = "'";
          } else if (firstCharacter === "'") {
            token = cleanEscapedString(token);
          }
          if (dateString.indexOf(token) === 0) {
            dateString = dateString.slice(token.length);
          } else {
            return new Date(NaN);
          }
        }
      }
      if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
        return new Date(NaN);
      }
      var uniquePrioritySetters = setters.map(function(setter2) {
        return setter2.priority;
      }).sort(function(a, b) {
        return b - a;
      }).filter(function(priority, index2, array) {
        return array.indexOf(priority) === index2;
      }).map(function(priority) {
        return setters.filter(function(setter2) {
          return setter2.priority === priority;
        }).sort(function(a, b) {
          return b.subPriority - a.subPriority;
        });
      }).map(function(setterArray) {
        return setterArray[0];
      });
      var date = (0, _index3.default)(dirtyReferenceDate);
      if (isNaN(date)) {
        return new Date(NaN);
      }
      var utcDate = (0, _index2.default)(date, (0, _index6.default)(date));
      var flags = {};
      for (i = 0; i < uniquePrioritySetters.length; i++) {
        var setter = uniquePrioritySetters[i];
        if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
          return new Date(NaN);
        }
        var result = setter.set(utcDate, flags, setter.value, subFnOptions);
        if (result[0]) {
          utcDate = result[0];
          (0, _index4.default)(flags, result[1]);
        } else {
          utcDate = result;
        }
      }
      return utcDate;
    }
    function dateToSystemTimezone(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isMatch/index.js
var require_isMatch = __commonJS({
  "node_modules/date-fns/isMatch/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isMatch;
    var _index = _interopRequireDefault(require_parse2());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMatch(dateString, formatString, options3) {
      (0, _index3.default)(2, arguments);
      return (0, _index2.default)((0, _index.default)(dateString, formatString, new Date(), options3));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isMonday/index.js
var require_isMonday = __commonJS({
  "node_modules/date-fns/isMonday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isMonday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMonday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date).getDay() === 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isPast/index.js
var require_isPast = __commonJS({
  "node_modules/date-fns/isPast/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isPast;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isPast(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getTime() < Date.now();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfHour/index.js
var require_startOfHour = __commonJS({
  "node_modules/date-fns/startOfHour/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfHour;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMinutes(0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameHour/index.js
var require_isSameHour = __commonJS({
  "node_modules/date-fns/isSameHour/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameHour;
    var _index = _interopRequireDefault(require_startOfHour());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameHour(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfHour = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfHour = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameWeek/index.js
var require_isSameWeek = __commonJS({
  "node_modules/date-fns/isSameWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, dirtyOptions);
      var dateRightStartOfWeek = (0, _index.default)(dirtyDateRight, dirtyOptions);
      return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameISOWeek/index.js
var require_isSameISOWeek = __commonJS({
  "node_modules/date-fns/isSameISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameISOWeek;
    var _index = _interopRequireDefault(require_isSameWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      return (0, _index.default)(dirtyDateLeft, dirtyDateRight, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameISOWeekYear/index.js
var require_isSameISOWeekYear = __commonJS({
  "node_modules/date-fns/isSameISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameISOWeekYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfYear = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfYear = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameMinute/index.js
var require_isSameMinute = __commonJS({
  "node_modules/date-fns/isSameMinute/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameMinute;
    var _index = _interopRequireDefault(require_startOfMinute());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMinute(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfMinute = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfMinute = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameMonth/index.js
var require_isSameMonth = __commonJS({
  "node_modules/date-fns/isSameMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMonth(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameQuarter/index.js
var require_isSameQuarter = __commonJS({
  "node_modules/date-fns/isSameQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameQuarter;
    var _index = _interopRequireDefault(require_startOfQuarter());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfQuarter = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfQuarter = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfSecond/index.js
var require_startOfSecond = __commonJS({
  "node_modules/date-fns/startOfSecond/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfSecond;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMilliseconds(0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameSecond/index.js
var require_isSameSecond = __commonJS({
  "node_modules/date-fns/isSameSecond/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameSecond;
    var _index = _interopRequireDefault(require_startOfSecond());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameSecond(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfSecond = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfSecond = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameYear/index.js
var require_isSameYear = __commonJS({
  "node_modules/date-fns/isSameYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isSameYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisHour/index.js
var require_isThisHour = __commonJS({
  "node_modules/date-fns/isThisHour/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisHour;
    var _index = _interopRequireDefault(require_isSameHour());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisISOWeek/index.js
var require_isThisISOWeek = __commonJS({
  "node_modules/date-fns/isThisISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisISOWeek;
    var _index = _interopRequireDefault(require_isSameISOWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisMinute/index.js
var require_isThisMinute = __commonJS({
  "node_modules/date-fns/isThisMinute/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisMinute;
    var _index = _interopRequireDefault(require_isSameMinute());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisMonth/index.js
var require_isThisMonth = __commonJS({
  "node_modules/date-fns/isThisMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisMonth;
    var _index = _interopRequireDefault(require_isSameMonth());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisQuarter/index.js
var require_isThisQuarter = __commonJS({
  "node_modules/date-fns/isThisQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisQuarter;
    var _index = _interopRequireDefault(require_isSameQuarter());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisSecond/index.js
var require_isThisSecond = __commonJS({
  "node_modules/date-fns/isThisSecond/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisSecond;
    var _index = _interopRequireDefault(require_isSameSecond());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisWeek/index.js
var require_isThisWeek = __commonJS({
  "node_modules/date-fns/isThisWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisWeek;
    var _index = _interopRequireDefault(require_isSameWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisWeek(dirtyDate, options3) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), options3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisYear/index.js
var require_isThisYear = __commonJS({
  "node_modules/date-fns/isThisYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThisYear;
    var _index = _interopRequireDefault(require_isSameYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThursday/index.js
var require_isThursday = __commonJS({
  "node_modules/date-fns/isThursday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isThursday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThursday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 4;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isToday/index.js
var require_isToday = __commonJS({
  "node_modules/date-fns/isToday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isToday;
    var _index = _interopRequireDefault(require_isSameDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isToday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isTomorrow/index.js
var require_isTomorrow = __commonJS({
  "node_modules/date-fns/isTomorrow/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isTomorrow;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_isSameDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTomorrow(dirtyDate) {
      (0, _index3.default)(1, arguments);
      return (0, _index2.default)(dirtyDate, (0, _index.default)(Date.now(), 1));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isTuesday/index.js
var require_isTuesday = __commonJS({
  "node_modules/date-fns/isTuesday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isTuesday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTuesday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 2;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWednesday/index.js
var require_isWednesday = __commonJS({
  "node_modules/date-fns/isWednesday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isWednesday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWednesday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 3;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWithinInterval/index.js
var require_isWithinInterval = __commonJS({
  "node_modules/date-fns/isWithinInterval/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isWithinInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWithinInterval(dirtyDate, interval) {
      (0, _index2.default)(2, arguments);
      var time = (0, _index.default)(dirtyDate).getTime();
      var startTime = (0, _index.default)(interval.start).getTime();
      var endTime = (0, _index.default)(interval.end).getTime();
      if (!(startTime <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      return time >= startTime && time <= endTime;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isYesterday/index.js
var require_isYesterday = __commonJS({
  "node_modules/date-fns/isYesterday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isYesterday;
    var _index = _interopRequireDefault(require_isSameDay());
    var _index2 = _interopRequireDefault(require_subDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isYesterday(dirtyDate) {
      (0, _index3.default)(1, arguments);
      return (0, _index.default)(dirtyDate, (0, _index2.default)(Date.now(), 1));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfDecade/index.js
var require_lastDayOfDecade = __commonJS({
  "node_modules/date-fns/lastDayOfDecade/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfWeek/index.js
var require_lastDayOfWeek = __commonJS({
  "node_modules/date-fns/lastDayOfWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setHours(0, 0, 0, 0);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeek/index.js
var require_lastDayOfISOWeek = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfISOWeek;
    var _index = _interopRequireDefault(require_lastDayOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeekYear/index.js
var require_lastDayOfISOWeekYear = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year + 1, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      date.setDate(date.getDate() - 1);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfQuarter/index.js
var require_lastDayOfQuarter = __commonJS({
  "node_modules/date-fns/lastDayOfQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfYear/index.js
var require_lastDayOfYear = __commonJS({
  "node_modules/date-fns/lastDayOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lastDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lightFormat/index.js
var require_lightFormat = __commonJS({
  "node_modules/date-fns/lightFormat/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = lightFormat;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_lightFormatters());
    var _index3 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index4 = _interopRequireDefault(require_isValid());
    var _index5 = _interopRequireDefault(require_subMilliseconds());
    var _index6 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function lightFormat(dirtyDate, formatStr) {
      (0, _index6.default)(2, arguments);
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index4.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var timezoneOffset = (0, _index3.default)(originalDate);
      var utcDate = (0, _index5.default)(originalDate, timezoneOffset);
      var tokens = formatStr.match(formattingTokensRegExp);
      if (!tokens)
        return "";
      var result = tokens.map(function(substring) {
        if (substring === "''") {
          return "'";
        }
        var firstCharacter = substring[0];
        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }
        var formatter = _index2.default[firstCharacter];
        if (formatter) {
          return formatter(utcDate, substring);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      var matches = input.match(escapedStringRegExp);
      if (!matches) {
        return input;
      }
      return matches[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/milliseconds/index.js
var require_milliseconds = __commonJS({
  "node_modules/date-fns/milliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = milliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var daysInYear = 365.2425;
    function milliseconds(_ref) {
      var years = _ref.years, months = _ref.months, weeks = _ref.weeks, days = _ref.days, hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
      (0, _index.default)(1, arguments);
      var totalDays = 0;
      if (years)
        totalDays += years * daysInYear;
      if (months)
        totalDays += months * (daysInYear / 12);
      if (weeks)
        totalDays += weeks * 7;
      if (days)
        totalDays += days;
      var totalSeconds = totalDays * 24 * 60 * 60;
      if (hours)
        totalSeconds += hours * 60 * 60;
      if (minutes)
        totalSeconds += minutes * 60;
      if (seconds)
        totalSeconds += seconds;
      return Math.round(totalSeconds * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToHours/index.js
var require_millisecondsToHours = __commonJS({
  "node_modules/date-fns/millisecondsToHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = millisecondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToHours(milliseconds) {
      (0, _index.default)(1, arguments);
      var hours = milliseconds / _index2.millisecondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToMinutes/index.js
var require_millisecondsToMinutes = __commonJS({
  "node_modules/date-fns/millisecondsToMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = millisecondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToMinutes(milliseconds) {
      (0, _index.default)(1, arguments);
      var minutes = milliseconds / _index2.millisecondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToSeconds/index.js
var require_millisecondsToSeconds = __commonJS({
  "node_modules/date-fns/millisecondsToSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = millisecondsToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToSeconds(milliseconds) {
      (0, _index.default)(1, arguments);
      var seconds = milliseconds / _index2.millisecondsInSecond;
      return Math.floor(seconds);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToHours/index.js
var require_minutesToHours = __commonJS({
  "node_modules/date-fns/minutesToHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = minutesToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToHours(minutes) {
      (0, _index.default)(1, arguments);
      var hours = minutes / _index2.minutesInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToMilliseconds/index.js
var require_minutesToMilliseconds = __commonJS({
  "node_modules/date-fns/minutesToMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = minutesToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToMilliseconds(minutes) {
      (0, _index.default)(1, arguments);
      return Math.floor(minutes * _index2.millisecondsInMinute);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToSeconds/index.js
var require_minutesToSeconds = __commonJS({
  "node_modules/date-fns/minutesToSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = minutesToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToSeconds(minutes) {
      (0, _index.default)(1, arguments);
      return Math.floor(minutes * _index2.secondsInMinute);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/monthsToQuarters/index.js
var require_monthsToQuarters = __commonJS({
  "node_modules/date-fns/monthsToQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = monthsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToQuarters(months) {
      (0, _index.default)(1, arguments);
      var quarters = months / _index2.monthsInQuarter;
      return Math.floor(quarters);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/monthsToYears/index.js
var require_monthsToYears = __commonJS({
  "node_modules/date-fns/monthsToYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = monthsToYears;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToYears(months) {
      (0, _index.default)(1, arguments);
      var years = months / _index2.monthsInYear;
      return Math.floor(years);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextDay/index.js
var require_nextDay = __commonJS({
  "node_modules/date-fns/nextDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextDay;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_getDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextDay(date, day) {
      (0, _index3.default)(2, arguments);
      var delta = day - (0, _index2.default)(date);
      if (delta <= 0)
        delta += 7;
      return (0, _index.default)(date, delta);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextFriday/index.js
var require_nextFriday = __commonJS({
  "node_modules/date-fns/nextFriday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextFriday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextFriday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 5);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextMonday/index.js
var require_nextMonday = __commonJS({
  "node_modules/date-fns/nextMonday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextMonday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextMonday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 1);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextSaturday/index.js
var require_nextSaturday = __commonJS({
  "node_modules/date-fns/nextSaturday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextSaturday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSaturday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 6);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextSunday/index.js
var require_nextSunday = __commonJS({
  "node_modules/date-fns/nextSunday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextSunday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSunday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 0);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextThursday/index.js
var require_nextThursday = __commonJS({
  "node_modules/date-fns/nextThursday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextThursday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextThursday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 4);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextTuesday/index.js
var require_nextTuesday = __commonJS({
  "node_modules/date-fns/nextTuesday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextTuesday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextTuesday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextWednesday/index.js
var require_nextWednesday = __commonJS({
  "node_modules/date-fns/nextWednesday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = nextWednesday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_nextDay());
    var _index3 = _interopRequireDefault(require_toDate());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextWednesday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)((0, _index3.default)(date), 3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parseISO/index.js
var require_parseISO = __commonJS({
  "node_modules/date-fns/parseISO/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = parseISO;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    var MILLISECONDS_IN_MINUTE = 6e4;
    var DEFAULT_ADDITIONAL_DIGITS = 2;
    var patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    };
    var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
    var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
    var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    function parseISO(argument, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      var options3 = dirtyOptions || {};
      var additionalDigits = options3.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : (0, _index.default)(options3.additionalDigits);
      if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
        throw new RangeError("additionalDigits must be 0, 1 or 2");
      }
      if (!(typeof argument === "string" || Object.prototype.toString.call(argument) === "[object String]")) {
        return new Date(NaN);
      }
      var dateStrings = splitDateString(argument);
      var date;
      if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
      }
      if (isNaN(date) || !date) {
        return new Date(NaN);
      }
      var timestamp = date.getTime();
      var time = 0;
      var offset;
      if (dateStrings.time) {
        time = parseTime(dateStrings.time);
        if (isNaN(time) || time === null) {
          return new Date(NaN);
        }
      }
      if (dateStrings.timezone) {
        offset = parseTimezone(dateStrings.timezone);
        if (isNaN(offset)) {
          return new Date(NaN);
        }
      } else {
        var dirtyDate = new Date(timestamp + time);
        var result = new Date(0);
        result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
        result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
        return result;
      }
      return new Date(timestamp + time + offset);
    }
    function splitDateString(dateString) {
      var dateStrings = {};
      var array = dateString.split(patterns.dateTimeDelimiter);
      var timeString;
      if (array.length > 2) {
        return dateStrings;
      }
      if (/:/.test(array[0])) {
        dateStrings.date = null;
        timeString = array[0];
      } else {
        dateStrings.date = array[0];
        timeString = array[1];
        if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
          dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
          timeString = dateString.substr(dateStrings.date.length, dateString.length);
        }
      }
      if (timeString) {
        var token = patterns.timezone.exec(timeString);
        if (token) {
          dateStrings.time = timeString.replace(token[1], "");
          dateStrings.timezone = token[1];
        } else {
          dateStrings.time = timeString;
        }
      }
      return dateStrings;
    }
    function parseYear(dateString, additionalDigits) {
      var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)");
      var captures = dateString.match(regex);
      if (!captures)
        return {
          year: null
        };
      var year = captures[1] && parseInt(captures[1]);
      var century = captures[2] && parseInt(captures[2]);
      return {
        year: century == null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
      };
    }
    function parseDate(dateString, year) {
      if (year === null)
        return null;
      var captures = dateString.match(dateRegex);
      if (!captures)
        return null;
      var isWeekDate = !!captures[4];
      var dayOfYear = parseDateUnit(captures[1]);
      var month = parseDateUnit(captures[2]) - 1;
      var day = parseDateUnit(captures[3]);
      var week = parseDateUnit(captures[4]);
      var dayOfWeek = parseDateUnit(captures[5]) - 1;
      if (isWeekDate) {
        if (!validateWeekDate(year, week, dayOfWeek)) {
          return new Date(NaN);
        }
        return dayOfISOWeekYear(year, week, dayOfWeek);
      } else {
        var date = new Date(0);
        if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
          return new Date(NaN);
        }
        date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
        return date;
      }
    }
    function parseDateUnit(value) {
      return value ? parseInt(value) : 1;
    }
    function parseTime(timeString) {
      var captures = timeString.match(timeRegex);
      if (!captures)
        return null;
      var hours = parseTimeUnit(captures[1]);
      var minutes = parseTimeUnit(captures[2]);
      var seconds = parseTimeUnit(captures[3]);
      if (!validateTime(hours, minutes, seconds)) {
        return NaN;
      }
      return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1e3;
    }
    function parseTimeUnit(value) {
      return value && parseFloat(value.replace(",", ".")) || 0;
    }
    function parseTimezone(timezoneString) {
      if (timezoneString === "Z")
        return 0;
      var captures = timezoneString.match(timezoneRegex);
      if (!captures)
        return 0;
      var sign = captures[1] === "+" ? -1 : 1;
      var hours = parseInt(captures[2]);
      var minutes = captures[3] && parseInt(captures[3]) || 0;
      if (!validateTimezone(hours, minutes)) {
        return NaN;
      }
      return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
    }
    function dayOfISOWeekYear(isoWeekYear, week, day) {
      var date = new Date(0);
      date.setUTCFullYear(isoWeekYear, 0, 4);
      var fourthOfJanuaryDay = date.getUTCDay() || 7;
      var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100;
    }
    function validateDate(year, month, date) {
      return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
    }
    function validateDayOfYearDate(year, dayOfYear) {
      return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
    }
    function validateWeekDate(_year, week, day) {
      return week >= 1 && week <= 53 && day >= 0 && day <= 6;
    }
    function validateTime(hours, minutes, seconds) {
      if (hours === 24) {
        return minutes === 0 && seconds === 0;
      }
      return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
    }
    function validateTimezone(_hours, minutes) {
      return minutes >= 0 && minutes <= 59;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parseJSON/index.js
var require_parseJSON = __commonJS({
  "node_modules/date-fns/parseJSON/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = parseJSON;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function parseJSON(argument) {
      (0, _index2.default)(1, arguments);
      if (typeof argument === "string") {
        var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);
        if (parts) {
          return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == "-" ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == "-" ? -1 : 1), +parts[6], +((parts[7] || "0") + "00").substring(0, 3)));
        }
        return new Date(NaN);
      }
      return (0, _index.default)(argument);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/quartersToMonths/index.js
var require_quartersToMonths = __commonJS({
  "node_modules/date-fns/quartersToMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = quartersToMonths;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToMonths(quarters) {
      (0, _index.default)(1, arguments);
      return Math.floor(quarters * _index2.monthsInQuarter);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/quartersToYears/index.js
var require_quartersToYears = __commonJS({
  "node_modules/date-fns/quartersToYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = quartersToYears;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToYears(quarters) {
      (0, _index.default)(1, arguments);
      var years = quarters / _index2.quartersInYear;
      return Math.floor(years);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/roundToNearestMinutes/index.js
var require_roundToNearestMinutes = __commonJS({
  "node_modules/date-fns/roundToNearestMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = roundToNearestMinutes;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function roundToNearestMinutes(dirtyDate, options3) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only none provided present");
      }
      var nearestTo = options3 && "nearestTo" in options3 ? (0, _index2.default)(options3.nearestTo) : 1;
      if (nearestTo < 1 || nearestTo > 30) {
        throw new RangeError("`options.nearestTo` must be between 1 and 30");
      }
      var date = (0, _index.default)(dirtyDate);
      var seconds = date.getSeconds();
      var minutes = date.getMinutes() + seconds / 60;
      var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
      var remainderMinutes = minutes % nearestTo;
      var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToHours/index.js
var require_secondsToHours = __commonJS({
  "node_modules/date-fns/secondsToHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = secondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToHours(seconds) {
      (0, _index.default)(1, arguments);
      var hours = seconds / _index2.secondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToMilliseconds/index.js
var require_secondsToMilliseconds = __commonJS({
  "node_modules/date-fns/secondsToMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = secondsToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMilliseconds(seconds) {
      (0, _index.default)(1, arguments);
      return seconds * _index2.millisecondsInSecond;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToMinutes/index.js
var require_secondsToMinutes = __commonJS({
  "node_modules/date-fns/secondsToMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = secondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMinutes(seconds) {
      (0, _index.default)(1, arguments);
      var minutes = seconds / _index2.secondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMonth/index.js
var require_setMonth = __commonJS({
  "node_modules/date-fns/setMonth/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setMonth;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getDaysInMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMonth(dirtyDate, dirtyMonth) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var month = (0, _index.default)(dirtyMonth);
      var year = date.getFullYear();
      var day = date.getDate();
      var dateWithDesiredMonth = new Date(0);
      dateWithDesiredMonth.setFullYear(year, month, 15);
      dateWithDesiredMonth.setHours(0, 0, 0, 0);
      var daysInMonth = (0, _index3.default)(dateWithDesiredMonth);
      date.setMonth(month, Math.min(day, daysInMonth));
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/set/index.js
var require_set2 = __commonJS({
  "node_modules/date-fns/set/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = set;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_setMonth());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function set(dirtyDate, values) {
      (0, _index4.default)(2, arguments);
      if (typeof values !== "object" || values === null) {
        throw new RangeError("values parameter must be an object");
      }
      var date = (0, _index.default)(dirtyDate);
      if (isNaN(date.getTime())) {
        return new Date(NaN);
      }
      if (values.year != null) {
        date.setFullYear(values.year);
      }
      if (values.month != null) {
        date = (0, _index2.default)(date, values.month);
      }
      if (values.date != null) {
        date.setDate((0, _index3.default)(values.date));
      }
      if (values.hours != null) {
        date.setHours((0, _index3.default)(values.hours));
      }
      if (values.minutes != null) {
        date.setMinutes((0, _index3.default)(values.minutes));
      }
      if (values.seconds != null) {
        date.setSeconds((0, _index3.default)(values.seconds));
      }
      if (values.milliseconds != null) {
        date.setMilliseconds((0, _index3.default)(values.milliseconds));
      }
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDate/index.js
var require_setDate = __commonJS({
  "node_modules/date-fns/setDate/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setDate;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDate(dirtyDate, dirtyDayOfMonth) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var dayOfMonth = (0, _index.default)(dirtyDayOfMonth);
      date.setDate(dayOfMonth);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDay/index.js
var require_setDay = __commonJS({
  "node_modules/date-fns/setDay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setDay;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDay(dirtyDate, dirtyDay, dirtyOptions) {
      (0, _index4.default)(2, arguments);
      var options3 = dirtyOptions || {};
      var locale = options3.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
      var weekStartsOn = options3.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options3.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index2.default)(dirtyDate);
      var day = (0, _index3.default)(dirtyDay);
      var currentDay = date.getDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var delta = 7 - weekStartsOn;
      var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
      return (0, _index.default)(date, diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDayOfYear/index.js
var require_setDayOfYear = __commonJS({
  "node_modules/date-fns/setDayOfYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setDayOfYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDayOfYear(dirtyDate, dirtyDayOfYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var dayOfYear = (0, _index.default)(dirtyDayOfYear);
      date.setMonth(0);
      date.setDate(dayOfYear);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setHours/index.js
var require_setHours = __commonJS({
  "node_modules/date-fns/setHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setHours(dirtyDate, dirtyHours) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var hours = (0, _index.default)(dirtyHours);
      date.setHours(hours);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISODay/index.js
var require_setISODay = __commonJS({
  "node_modules/date-fns/setISODay/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setISODay;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_addDays());
    var _index4 = _interopRequireDefault(require_getISODay());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISODay(dirtyDate, dirtyDay) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var day = (0, _index.default)(dirtyDay);
      var currentDay = (0, _index4.default)(date);
      var diff = day - currentDay;
      return (0, _index3.default)(date, diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISOWeek/index.js
var require_setISOWeek = __commonJS({
  "node_modules/date-fns/setISOWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setISOWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getISOWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeek = (0, _index.default)(dirtyISOWeek);
      var diff = (0, _index3.default)(date) - isoWeek;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMilliseconds/index.js
var require_setMilliseconds = __commonJS({
  "node_modules/date-fns/setMilliseconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMilliseconds(dirtyDate, dirtyMilliseconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var milliseconds = (0, _index.default)(dirtyMilliseconds);
      date.setMilliseconds(milliseconds);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMinutes/index.js
var require_setMinutes = __commonJS({
  "node_modules/date-fns/setMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMinutes(dirtyDate, dirtyMinutes) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var minutes = (0, _index.default)(dirtyMinutes);
      date.setMinutes(minutes);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setQuarter/index.js
var require_setQuarter = __commonJS({
  "node_modules/date-fns/setQuarter/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setQuarter;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_setMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setQuarter(dirtyDate, dirtyQuarter) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var quarter = (0, _index.default)(dirtyQuarter);
      var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
      var diff = quarter - oldQuarter;
      return (0, _index3.default)(date, date.getMonth() + diff * 3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setSeconds/index.js
var require_setSeconds = __commonJS({
  "node_modules/date-fns/setSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setSeconds(dirtyDate, dirtySeconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var seconds = (0, _index.default)(dirtySeconds);
      date.setSeconds(seconds);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setWeek/index.js
var require_setWeek = __commonJS({
  "node_modules/date-fns/setWeek/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setWeek;
    var _index = _interopRequireDefault(require_getWeek());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeek(dirtyDate, dirtyWeek, options3) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var week = (0, _index3.default)(dirtyWeek);
      var diff = (0, _index.default)(date, options3) - week;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setWeekYear/index.js
var require_setWeekYear = __commonJS({
  "node_modules/date-fns/setWeekYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setWeekYear;
    var _index = _interopRequireDefault(require_differenceInCalendarDays());
    var _index2 = _interopRequireDefault(require_startOfWeekYear());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeekYear(dirtyDate, dirtyWeekYear) {
      var options3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index5.default)(2, arguments);
      var locale = options3.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options3.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options3.firstWeekContainsDate);
      var date = (0, _index3.default)(dirtyDate);
      var weekYear = (0, _index4.default)(dirtyWeekYear);
      var diff = (0, _index.default)(date, (0, _index2.default)(date, options3));
      var firstWeek = new Date(0);
      firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      date = (0, _index2.default)(firstWeek, options3);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setYear/index.js
var require_setYear = __commonJS({
  "node_modules/date-fns/setYear/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = setYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setYear(dirtyDate, dirtyYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var year = (0, _index.default)(dirtyYear);
      if (isNaN(date.getTime())) {
        return new Date(NaN);
      }
      date.setFullYear(year);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfDecade/index.js
var require_startOfDecade = __commonJS({
  "node_modules/date-fns/startOfDecade/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      date.setFullYear(decade, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfToday/index.js
var require_startOfToday = __commonJS({
  "node_modules/date-fns/startOfToday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfToday;
    var _index = _interopRequireDefault(require_startOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfTomorrow/index.js
var require_startOfTomorrow = __commonJS({
  "node_modules/date-fns/startOfTomorrow/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfTomorrow;
    function startOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfYesterday/index.js
var require_startOfYesterday = __commonJS({
  "node_modules/date-fns/startOfYesterday/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfYesterday;
    function startOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subBusinessDays/index.js
var require_subBusinessDays = __commonJS({
  "node_modules/date-fns/subBusinessDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subBusinessDays;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addBusinessDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subHours/index.js
var require_subHours = __commonJS({
  "node_modules/date-fns/subHours/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addHours());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subHours(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMinutes/index.js
var require_subMinutes = __commonJS({
  "node_modules/date-fns/subMinutes/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMinutes());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMinutes(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subQuarters/index.js
var require_subQuarters = __commonJS({
  "node_modules/date-fns/subQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subQuarters;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addQuarters());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subSeconds/index.js
var require_subSeconds = __commonJS({
  "node_modules/date-fns/subSeconds/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addSeconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subWeeks/index.js
var require_subWeeks = __commonJS({
  "node_modules/date-fns/subWeeks/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subWeeks;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addWeeks());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subYears/index.js
var require_subYears = __commonJS({
  "node_modules/date-fns/subYears/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addYears());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/weeksToDays/index.js
var require_weeksToDays = __commonJS({
  "node_modules/date-fns/weeksToDays/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = weeksToDays;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function weeksToDays(weeks) {
      (0, _index.default)(1, arguments);
      return Math.floor(weeks * _index2.daysInWeek);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/yearsToMonths/index.js
var require_yearsToMonths = __commonJS({
  "node_modules/date-fns/yearsToMonths/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = yearsToMonths;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToMonths(years) {
      (0, _index.default)(1, arguments);
      return Math.floor(years * _index2.monthsInYear);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/yearsToQuarters/index.js
var require_yearsToQuarters = __commonJS({
  "node_modules/date-fns/yearsToQuarters/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = yearsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToQuarters(years) {
      (0, _index.default)(1, arguments);
      return Math.floor(years * _index2.quartersInYear);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/index.js
var require_date_fns = __commonJS({
  "node_modules/date-fns/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var _exportNames = {
      add: true,
      addBusinessDays: true,
      addDays: true,
      addHours: true,
      addISOWeekYears: true,
      addMilliseconds: true,
      addMinutes: true,
      addMonths: true,
      addQuarters: true,
      addSeconds: true,
      addWeeks: true,
      addYears: true,
      areIntervalsOverlapping: true,
      clamp: true,
      closestIndexTo: true,
      closestTo: true,
      compareAsc: true,
      compareDesc: true,
      daysToWeeks: true,
      differenceInBusinessDays: true,
      differenceInCalendarDays: true,
      differenceInCalendarISOWeekYears: true,
      differenceInCalendarISOWeeks: true,
      differenceInCalendarMonths: true,
      differenceInCalendarQuarters: true,
      differenceInCalendarWeeks: true,
      differenceInCalendarYears: true,
      differenceInDays: true,
      differenceInHours: true,
      differenceInISOWeekYears: true,
      differenceInMilliseconds: true,
      differenceInMinutes: true,
      differenceInMonths: true,
      differenceInQuarters: true,
      differenceInSeconds: true,
      differenceInWeeks: true,
      differenceInYears: true,
      eachDayOfInterval: true,
      eachHourOfInterval: true,
      eachMinuteOfInterval: true,
      eachMonthOfInterval: true,
      eachQuarterOfInterval: true,
      eachWeekOfInterval: true,
      eachWeekendOfInterval: true,
      eachWeekendOfMonth: true,
      eachWeekendOfYear: true,
      eachYearOfInterval: true,
      endOfDay: true,
      endOfDecade: true,
      endOfHour: true,
      endOfISOWeek: true,
      endOfISOWeekYear: true,
      endOfMinute: true,
      endOfMonth: true,
      endOfQuarter: true,
      endOfSecond: true,
      endOfToday: true,
      endOfTomorrow: true,
      endOfWeek: true,
      endOfYear: true,
      endOfYesterday: true,
      format: true,
      formatDistance: true,
      formatDistanceStrict: true,
      formatDistanceToNow: true,
      formatDistanceToNowStrict: true,
      formatDuration: true,
      formatISO: true,
      formatISO9075: true,
      formatISODuration: true,
      formatRFC3339: true,
      formatRFC7231: true,
      formatRelative: true,
      fromUnixTime: true,
      getDate: true,
      getDay: true,
      getDayOfYear: true,
      getDaysInMonth: true,
      getDaysInYear: true,
      getDecade: true,
      getHours: true,
      getISODay: true,
      getISOWeek: true,
      getISOWeekYear: true,
      getISOWeeksInYear: true,
      getMilliseconds: true,
      getMinutes: true,
      getMonth: true,
      getOverlappingDaysInIntervals: true,
      getQuarter: true,
      getSeconds: true,
      getTime: true,
      getUnixTime: true,
      getWeek: true,
      getWeekOfMonth: true,
      getWeekYear: true,
      getWeeksInMonth: true,
      getYear: true,
      hoursToMilliseconds: true,
      hoursToMinutes: true,
      hoursToSeconds: true,
      intervalToDuration: true,
      intlFormat: true,
      isAfter: true,
      isBefore: true,
      isDate: true,
      isEqual: true,
      isExists: true,
      isFirstDayOfMonth: true,
      isFriday: true,
      isFuture: true,
      isLastDayOfMonth: true,
      isLeapYear: true,
      isMatch: true,
      isMonday: true,
      isPast: true,
      isSameDay: true,
      isSameHour: true,
      isSameISOWeek: true,
      isSameISOWeekYear: true,
      isSameMinute: true,
      isSameMonth: true,
      isSameQuarter: true,
      isSameSecond: true,
      isSameWeek: true,
      isSameYear: true,
      isSaturday: true,
      isSunday: true,
      isThisHour: true,
      isThisISOWeek: true,
      isThisMinute: true,
      isThisMonth: true,
      isThisQuarter: true,
      isThisSecond: true,
      isThisWeek: true,
      isThisYear: true,
      isThursday: true,
      isToday: true,
      isTomorrow: true,
      isTuesday: true,
      isValid: true,
      isWednesday: true,
      isWeekend: true,
      isWithinInterval: true,
      isYesterday: true,
      lastDayOfDecade: true,
      lastDayOfISOWeek: true,
      lastDayOfISOWeekYear: true,
      lastDayOfMonth: true,
      lastDayOfQuarter: true,
      lastDayOfWeek: true,
      lastDayOfYear: true,
      lightFormat: true,
      max: true,
      milliseconds: true,
      millisecondsToHours: true,
      millisecondsToMinutes: true,
      millisecondsToSeconds: true,
      min: true,
      minutesToHours: true,
      minutesToMilliseconds: true,
      minutesToSeconds: true,
      monthsToQuarters: true,
      monthsToYears: true,
      nextDay: true,
      nextFriday: true,
      nextMonday: true,
      nextSaturday: true,
      nextSunday: true,
      nextThursday: true,
      nextTuesday: true,
      nextWednesday: true,
      parse: true,
      parseISO: true,
      parseJSON: true,
      quartersToMonths: true,
      quartersToYears: true,
      roundToNearestMinutes: true,
      secondsToHours: true,
      secondsToMilliseconds: true,
      secondsToMinutes: true,
      set: true,
      setDate: true,
      setDay: true,
      setDayOfYear: true,
      setHours: true,
      setISODay: true,
      setISOWeek: true,
      setISOWeekYear: true,
      setMilliseconds: true,
      setMinutes: true,
      setMonth: true,
      setQuarter: true,
      setSeconds: true,
      setWeek: true,
      setWeekYear: true,
      setYear: true,
      startOfDay: true,
      startOfDecade: true,
      startOfHour: true,
      startOfISOWeek: true,
      startOfISOWeekYear: true,
      startOfMinute: true,
      startOfMonth: true,
      startOfQuarter: true,
      startOfSecond: true,
      startOfToday: true,
      startOfTomorrow: true,
      startOfWeek: true,
      startOfWeekYear: true,
      startOfYear: true,
      startOfYesterday: true,
      sub: true,
      subBusinessDays: true,
      subDays: true,
      subHours: true,
      subISOWeekYears: true,
      subMilliseconds: true,
      subMinutes: true,
      subMonths: true,
      subQuarters: true,
      subSeconds: true,
      subWeeks: true,
      subYears: true,
      toDate: true,
      weeksToDays: true,
      yearsToMonths: true,
      yearsToQuarters: true
    };
    Object.defineProperty(exports2, "add", {
      enumerable: true,
      get: function() {
        return _index.default;
      }
    });
    Object.defineProperty(exports2, "addBusinessDays", {
      enumerable: true,
      get: function() {
        return _index2.default;
      }
    });
    Object.defineProperty(exports2, "addDays", {
      enumerable: true,
      get: function() {
        return _index3.default;
      }
    });
    Object.defineProperty(exports2, "addHours", {
      enumerable: true,
      get: function() {
        return _index4.default;
      }
    });
    Object.defineProperty(exports2, "addISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index5.default;
      }
    });
    Object.defineProperty(exports2, "addMilliseconds", {
      enumerable: true,
      get: function() {
        return _index6.default;
      }
    });
    Object.defineProperty(exports2, "addMinutes", {
      enumerable: true,
      get: function() {
        return _index7.default;
      }
    });
    Object.defineProperty(exports2, "addMonths", {
      enumerable: true,
      get: function() {
        return _index8.default;
      }
    });
    Object.defineProperty(exports2, "addQuarters", {
      enumerable: true,
      get: function() {
        return _index9.default;
      }
    });
    Object.defineProperty(exports2, "addSeconds", {
      enumerable: true,
      get: function() {
        return _index10.default;
      }
    });
    Object.defineProperty(exports2, "addWeeks", {
      enumerable: true,
      get: function() {
        return _index11.default;
      }
    });
    Object.defineProperty(exports2, "addYears", {
      enumerable: true,
      get: function() {
        return _index12.default;
      }
    });
    Object.defineProperty(exports2, "areIntervalsOverlapping", {
      enumerable: true,
      get: function() {
        return _index13.default;
      }
    });
    Object.defineProperty(exports2, "clamp", {
      enumerable: true,
      get: function() {
        return _index14.default;
      }
    });
    Object.defineProperty(exports2, "closestIndexTo", {
      enumerable: true,
      get: function() {
        return _index15.default;
      }
    });
    Object.defineProperty(exports2, "closestTo", {
      enumerable: true,
      get: function() {
        return _index16.default;
      }
    });
    Object.defineProperty(exports2, "compareAsc", {
      enumerable: true,
      get: function() {
        return _index17.default;
      }
    });
    Object.defineProperty(exports2, "compareDesc", {
      enumerable: true,
      get: function() {
        return _index18.default;
      }
    });
    Object.defineProperty(exports2, "daysToWeeks", {
      enumerable: true,
      get: function() {
        return _index19.default;
      }
    });
    Object.defineProperty(exports2, "differenceInBusinessDays", {
      enumerable: true,
      get: function() {
        return _index20.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarDays", {
      enumerable: true,
      get: function() {
        return _index21.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index22.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarISOWeeks", {
      enumerable: true,
      get: function() {
        return _index23.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarMonths", {
      enumerable: true,
      get: function() {
        return _index24.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarQuarters", {
      enumerable: true,
      get: function() {
        return _index25.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarWeeks", {
      enumerable: true,
      get: function() {
        return _index26.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarYears", {
      enumerable: true,
      get: function() {
        return _index27.default;
      }
    });
    Object.defineProperty(exports2, "differenceInDays", {
      enumerable: true,
      get: function() {
        return _index28.default;
      }
    });
    Object.defineProperty(exports2, "differenceInHours", {
      enumerable: true,
      get: function() {
        return _index29.default;
      }
    });
    Object.defineProperty(exports2, "differenceInISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index30.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMilliseconds", {
      enumerable: true,
      get: function() {
        return _index31.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMinutes", {
      enumerable: true,
      get: function() {
        return _index32.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMonths", {
      enumerable: true,
      get: function() {
        return _index33.default;
      }
    });
    Object.defineProperty(exports2, "differenceInQuarters", {
      enumerable: true,
      get: function() {
        return _index34.default;
      }
    });
    Object.defineProperty(exports2, "differenceInSeconds", {
      enumerable: true,
      get: function() {
        return _index35.default;
      }
    });
    Object.defineProperty(exports2, "differenceInWeeks", {
      enumerable: true,
      get: function() {
        return _index36.default;
      }
    });
    Object.defineProperty(exports2, "differenceInYears", {
      enumerable: true,
      get: function() {
        return _index37.default;
      }
    });
    Object.defineProperty(exports2, "eachDayOfInterval", {
      enumerable: true,
      get: function() {
        return _index38.default;
      }
    });
    Object.defineProperty(exports2, "eachHourOfInterval", {
      enumerable: true,
      get: function() {
        return _index39.default;
      }
    });
    Object.defineProperty(exports2, "eachMinuteOfInterval", {
      enumerable: true,
      get: function() {
        return _index40.default;
      }
    });
    Object.defineProperty(exports2, "eachMonthOfInterval", {
      enumerable: true,
      get: function() {
        return _index41.default;
      }
    });
    Object.defineProperty(exports2, "eachQuarterOfInterval", {
      enumerable: true,
      get: function() {
        return _index42.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekOfInterval", {
      enumerable: true,
      get: function() {
        return _index43.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfInterval", {
      enumerable: true,
      get: function() {
        return _index44.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfMonth", {
      enumerable: true,
      get: function() {
        return _index45.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfYear", {
      enumerable: true,
      get: function() {
        return _index46.default;
      }
    });
    Object.defineProperty(exports2, "eachYearOfInterval", {
      enumerable: true,
      get: function() {
        return _index47.default;
      }
    });
    Object.defineProperty(exports2, "endOfDay", {
      enumerable: true,
      get: function() {
        return _index48.default;
      }
    });
    Object.defineProperty(exports2, "endOfDecade", {
      enumerable: true,
      get: function() {
        return _index49.default;
      }
    });
    Object.defineProperty(exports2, "endOfHour", {
      enumerable: true,
      get: function() {
        return _index50.default;
      }
    });
    Object.defineProperty(exports2, "endOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index51.default;
      }
    });
    Object.defineProperty(exports2, "endOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index52.default;
      }
    });
    Object.defineProperty(exports2, "endOfMinute", {
      enumerable: true,
      get: function() {
        return _index53.default;
      }
    });
    Object.defineProperty(exports2, "endOfMonth", {
      enumerable: true,
      get: function() {
        return _index54.default;
      }
    });
    Object.defineProperty(exports2, "endOfQuarter", {
      enumerable: true,
      get: function() {
        return _index55.default;
      }
    });
    Object.defineProperty(exports2, "endOfSecond", {
      enumerable: true,
      get: function() {
        return _index56.default;
      }
    });
    Object.defineProperty(exports2, "endOfToday", {
      enumerable: true,
      get: function() {
        return _index57.default;
      }
    });
    Object.defineProperty(exports2, "endOfTomorrow", {
      enumerable: true,
      get: function() {
        return _index58.default;
      }
    });
    Object.defineProperty(exports2, "endOfWeek", {
      enumerable: true,
      get: function() {
        return _index59.default;
      }
    });
    Object.defineProperty(exports2, "endOfYear", {
      enumerable: true,
      get: function() {
        return _index60.default;
      }
    });
    Object.defineProperty(exports2, "endOfYesterday", {
      enumerable: true,
      get: function() {
        return _index61.default;
      }
    });
    Object.defineProperty(exports2, "format", {
      enumerable: true,
      get: function() {
        return _index62.default;
      }
    });
    Object.defineProperty(exports2, "formatDistance", {
      enumerable: true,
      get: function() {
        return _index63.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceStrict", {
      enumerable: true,
      get: function() {
        return _index64.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceToNow", {
      enumerable: true,
      get: function() {
        return _index65.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceToNowStrict", {
      enumerable: true,
      get: function() {
        return _index66.default;
      }
    });
    Object.defineProperty(exports2, "formatDuration", {
      enumerable: true,
      get: function() {
        return _index67.default;
      }
    });
    Object.defineProperty(exports2, "formatISO", {
      enumerable: true,
      get: function() {
        return _index68.default;
      }
    });
    Object.defineProperty(exports2, "formatISO9075", {
      enumerable: true,
      get: function() {
        return _index69.default;
      }
    });
    Object.defineProperty(exports2, "formatISODuration", {
      enumerable: true,
      get: function() {
        return _index70.default;
      }
    });
    Object.defineProperty(exports2, "formatRFC3339", {
      enumerable: true,
      get: function() {
        return _index71.default;
      }
    });
    Object.defineProperty(exports2, "formatRFC7231", {
      enumerable: true,
      get: function() {
        return _index72.default;
      }
    });
    Object.defineProperty(exports2, "formatRelative", {
      enumerable: true,
      get: function() {
        return _index73.default;
      }
    });
    Object.defineProperty(exports2, "fromUnixTime", {
      enumerable: true,
      get: function() {
        return _index74.default;
      }
    });
    Object.defineProperty(exports2, "getDate", {
      enumerable: true,
      get: function() {
        return _index75.default;
      }
    });
    Object.defineProperty(exports2, "getDay", {
      enumerable: true,
      get: function() {
        return _index76.default;
      }
    });
    Object.defineProperty(exports2, "getDayOfYear", {
      enumerable: true,
      get: function() {
        return _index77.default;
      }
    });
    Object.defineProperty(exports2, "getDaysInMonth", {
      enumerable: true,
      get: function() {
        return _index78.default;
      }
    });
    Object.defineProperty(exports2, "getDaysInYear", {
      enumerable: true,
      get: function() {
        return _index79.default;
      }
    });
    Object.defineProperty(exports2, "getDecade", {
      enumerable: true,
      get: function() {
        return _index80.default;
      }
    });
    Object.defineProperty(exports2, "getHours", {
      enumerable: true,
      get: function() {
        return _index81.default;
      }
    });
    Object.defineProperty(exports2, "getISODay", {
      enumerable: true,
      get: function() {
        return _index82.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeek", {
      enumerable: true,
      get: function() {
        return _index83.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index84.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeeksInYear", {
      enumerable: true,
      get: function() {
        return _index85.default;
      }
    });
    Object.defineProperty(exports2, "getMilliseconds", {
      enumerable: true,
      get: function() {
        return _index86.default;
      }
    });
    Object.defineProperty(exports2, "getMinutes", {
      enumerable: true,
      get: function() {
        return _index87.default;
      }
    });
    Object.defineProperty(exports2, "getMonth", {
      enumerable: true,
      get: function() {
        return _index88.default;
      }
    });
    Object.defineProperty(exports2, "getOverlappingDaysInIntervals", {
      enumerable: true,
      get: function() {
        return _index89.default;
      }
    });
    Object.defineProperty(exports2, "getQuarter", {
      enumerable: true,
      get: function() {
        return _index90.default;
      }
    });
    Object.defineProperty(exports2, "getSeconds", {
      enumerable: true,
      get: function() {
        return _index91.default;
      }
    });
    Object.defineProperty(exports2, "getTime", {
      enumerable: true,
      get: function() {
        return _index92.default;
      }
    });
    Object.defineProperty(exports2, "getUnixTime", {
      enumerable: true,
      get: function() {
        return _index93.default;
      }
    });
    Object.defineProperty(exports2, "getWeek", {
      enumerable: true,
      get: function() {
        return _index94.default;
      }
    });
    Object.defineProperty(exports2, "getWeekOfMonth", {
      enumerable: true,
      get: function() {
        return _index95.default;
      }
    });
    Object.defineProperty(exports2, "getWeekYear", {
      enumerable: true,
      get: function() {
        return _index96.default;
      }
    });
    Object.defineProperty(exports2, "getWeeksInMonth", {
      enumerable: true,
      get: function() {
        return _index97.default;
      }
    });
    Object.defineProperty(exports2, "getYear", {
      enumerable: true,
      get: function() {
        return _index98.default;
      }
    });
    Object.defineProperty(exports2, "hoursToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index99.default;
      }
    });
    Object.defineProperty(exports2, "hoursToMinutes", {
      enumerable: true,
      get: function() {
        return _index100.default;
      }
    });
    Object.defineProperty(exports2, "hoursToSeconds", {
      enumerable: true,
      get: function() {
        return _index101.default;
      }
    });
    Object.defineProperty(exports2, "intervalToDuration", {
      enumerable: true,
      get: function() {
        return _index102.default;
      }
    });
    Object.defineProperty(exports2, "intlFormat", {
      enumerable: true,
      get: function() {
        return _index103.default;
      }
    });
    Object.defineProperty(exports2, "isAfter", {
      enumerable: true,
      get: function() {
        return _index104.default;
      }
    });
    Object.defineProperty(exports2, "isBefore", {
      enumerable: true,
      get: function() {
        return _index105.default;
      }
    });
    Object.defineProperty(exports2, "isDate", {
      enumerable: true,
      get: function() {
        return _index106.default;
      }
    });
    Object.defineProperty(exports2, "isEqual", {
      enumerable: true,
      get: function() {
        return _index107.default;
      }
    });
    Object.defineProperty(exports2, "isExists", {
      enumerable: true,
      get: function() {
        return _index108.default;
      }
    });
    Object.defineProperty(exports2, "isFirstDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index109.default;
      }
    });
    Object.defineProperty(exports2, "isFriday", {
      enumerable: true,
      get: function() {
        return _index110.default;
      }
    });
    Object.defineProperty(exports2, "isFuture", {
      enumerable: true,
      get: function() {
        return _index111.default;
      }
    });
    Object.defineProperty(exports2, "isLastDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index112.default;
      }
    });
    Object.defineProperty(exports2, "isLeapYear", {
      enumerable: true,
      get: function() {
        return _index113.default;
      }
    });
    Object.defineProperty(exports2, "isMatch", {
      enumerable: true,
      get: function() {
        return _index114.default;
      }
    });
    Object.defineProperty(exports2, "isMonday", {
      enumerable: true,
      get: function() {
        return _index115.default;
      }
    });
    Object.defineProperty(exports2, "isPast", {
      enumerable: true,
      get: function() {
        return _index116.default;
      }
    });
    Object.defineProperty(exports2, "isSameDay", {
      enumerable: true,
      get: function() {
        return _index117.default;
      }
    });
    Object.defineProperty(exports2, "isSameHour", {
      enumerable: true,
      get: function() {
        return _index118.default;
      }
    });
    Object.defineProperty(exports2, "isSameISOWeek", {
      enumerable: true,
      get: function() {
        return _index119.default;
      }
    });
    Object.defineProperty(exports2, "isSameISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index120.default;
      }
    });
    Object.defineProperty(exports2, "isSameMinute", {
      enumerable: true,
      get: function() {
        return _index121.default;
      }
    });
    Object.defineProperty(exports2, "isSameMonth", {
      enumerable: true,
      get: function() {
        return _index122.default;
      }
    });
    Object.defineProperty(exports2, "isSameQuarter", {
      enumerable: true,
      get: function() {
        return _index123.default;
      }
    });
    Object.defineProperty(exports2, "isSameSecond", {
      enumerable: true,
      get: function() {
        return _index124.default;
      }
    });
    Object.defineProperty(exports2, "isSameWeek", {
      enumerable: true,
      get: function() {
        return _index125.default;
      }
    });
    Object.defineProperty(exports2, "isSameYear", {
      enumerable: true,
      get: function() {
        return _index126.default;
      }
    });
    Object.defineProperty(exports2, "isSaturday", {
      enumerable: true,
      get: function() {
        return _index127.default;
      }
    });
    Object.defineProperty(exports2, "isSunday", {
      enumerable: true,
      get: function() {
        return _index128.default;
      }
    });
    Object.defineProperty(exports2, "isThisHour", {
      enumerable: true,
      get: function() {
        return _index129.default;
      }
    });
    Object.defineProperty(exports2, "isThisISOWeek", {
      enumerable: true,
      get: function() {
        return _index130.default;
      }
    });
    Object.defineProperty(exports2, "isThisMinute", {
      enumerable: true,
      get: function() {
        return _index131.default;
      }
    });
    Object.defineProperty(exports2, "isThisMonth", {
      enumerable: true,
      get: function() {
        return _index132.default;
      }
    });
    Object.defineProperty(exports2, "isThisQuarter", {
      enumerable: true,
      get: function() {
        return _index133.default;
      }
    });
    Object.defineProperty(exports2, "isThisSecond", {
      enumerable: true,
      get: function() {
        return _index134.default;
      }
    });
    Object.defineProperty(exports2, "isThisWeek", {
      enumerable: true,
      get: function() {
        return _index135.default;
      }
    });
    Object.defineProperty(exports2, "isThisYear", {
      enumerable: true,
      get: function() {
        return _index136.default;
      }
    });
    Object.defineProperty(exports2, "isThursday", {
      enumerable: true,
      get: function() {
        return _index137.default;
      }
    });
    Object.defineProperty(exports2, "isToday", {
      enumerable: true,
      get: function() {
        return _index138.default;
      }
    });
    Object.defineProperty(exports2, "isTomorrow", {
      enumerable: true,
      get: function() {
        return _index139.default;
      }
    });
    Object.defineProperty(exports2, "isTuesday", {
      enumerable: true,
      get: function() {
        return _index140.default;
      }
    });
    Object.defineProperty(exports2, "isValid", {
      enumerable: true,
      get: function() {
        return _index141.default;
      }
    });
    Object.defineProperty(exports2, "isWednesday", {
      enumerable: true,
      get: function() {
        return _index142.default;
      }
    });
    Object.defineProperty(exports2, "isWeekend", {
      enumerable: true,
      get: function() {
        return _index143.default;
      }
    });
    Object.defineProperty(exports2, "isWithinInterval", {
      enumerable: true,
      get: function() {
        return _index144.default;
      }
    });
    Object.defineProperty(exports2, "isYesterday", {
      enumerable: true,
      get: function() {
        return _index145.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfDecade", {
      enumerable: true,
      get: function() {
        return _index146.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index147.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index148.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index149.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfQuarter", {
      enumerable: true,
      get: function() {
        return _index150.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfWeek", {
      enumerable: true,
      get: function() {
        return _index151.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfYear", {
      enumerable: true,
      get: function() {
        return _index152.default;
      }
    });
    Object.defineProperty(exports2, "lightFormat", {
      enumerable: true,
      get: function() {
        return _index153.default;
      }
    });
    Object.defineProperty(exports2, "max", {
      enumerable: true,
      get: function() {
        return _index154.default;
      }
    });
    Object.defineProperty(exports2, "milliseconds", {
      enumerable: true,
      get: function() {
        return _index155.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToHours", {
      enumerable: true,
      get: function() {
        return _index156.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToMinutes", {
      enumerable: true,
      get: function() {
        return _index157.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToSeconds", {
      enumerable: true,
      get: function() {
        return _index158.default;
      }
    });
    Object.defineProperty(exports2, "min", {
      enumerable: true,
      get: function() {
        return _index159.default;
      }
    });
    Object.defineProperty(exports2, "minutesToHours", {
      enumerable: true,
      get: function() {
        return _index160.default;
      }
    });
    Object.defineProperty(exports2, "minutesToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index161.default;
      }
    });
    Object.defineProperty(exports2, "minutesToSeconds", {
      enumerable: true,
      get: function() {
        return _index162.default;
      }
    });
    Object.defineProperty(exports2, "monthsToQuarters", {
      enumerable: true,
      get: function() {
        return _index163.default;
      }
    });
    Object.defineProperty(exports2, "monthsToYears", {
      enumerable: true,
      get: function() {
        return _index164.default;
      }
    });
    Object.defineProperty(exports2, "nextDay", {
      enumerable: true,
      get: function() {
        return _index165.default;
      }
    });
    Object.defineProperty(exports2, "nextFriday", {
      enumerable: true,
      get: function() {
        return _index166.default;
      }
    });
    Object.defineProperty(exports2, "nextMonday", {
      enumerable: true,
      get: function() {
        return _index167.default;
      }
    });
    Object.defineProperty(exports2, "nextSaturday", {
      enumerable: true,
      get: function() {
        return _index168.default;
      }
    });
    Object.defineProperty(exports2, "nextSunday", {
      enumerable: true,
      get: function() {
        return _index169.default;
      }
    });
    Object.defineProperty(exports2, "nextThursday", {
      enumerable: true,
      get: function() {
        return _index170.default;
      }
    });
    Object.defineProperty(exports2, "nextTuesday", {
      enumerable: true,
      get: function() {
        return _index171.default;
      }
    });
    Object.defineProperty(exports2, "nextWednesday", {
      enumerable: true,
      get: function() {
        return _index172.default;
      }
    });
    Object.defineProperty(exports2, "parse", {
      enumerable: true,
      get: function() {
        return _index173.default;
      }
    });
    Object.defineProperty(exports2, "parseISO", {
      enumerable: true,
      get: function() {
        return _index174.default;
      }
    });
    Object.defineProperty(exports2, "parseJSON", {
      enumerable: true,
      get: function() {
        return _index175.default;
      }
    });
    Object.defineProperty(exports2, "quartersToMonths", {
      enumerable: true,
      get: function() {
        return _index176.default;
      }
    });
    Object.defineProperty(exports2, "quartersToYears", {
      enumerable: true,
      get: function() {
        return _index177.default;
      }
    });
    Object.defineProperty(exports2, "roundToNearestMinutes", {
      enumerable: true,
      get: function() {
        return _index178.default;
      }
    });
    Object.defineProperty(exports2, "secondsToHours", {
      enumerable: true,
      get: function() {
        return _index179.default;
      }
    });
    Object.defineProperty(exports2, "secondsToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index180.default;
      }
    });
    Object.defineProperty(exports2, "secondsToMinutes", {
      enumerable: true,
      get: function() {
        return _index181.default;
      }
    });
    Object.defineProperty(exports2, "set", {
      enumerable: true,
      get: function() {
        return _index182.default;
      }
    });
    Object.defineProperty(exports2, "setDate", {
      enumerable: true,
      get: function() {
        return _index183.default;
      }
    });
    Object.defineProperty(exports2, "setDay", {
      enumerable: true,
      get: function() {
        return _index184.default;
      }
    });
    Object.defineProperty(exports2, "setDayOfYear", {
      enumerable: true,
      get: function() {
        return _index185.default;
      }
    });
    Object.defineProperty(exports2, "setHours", {
      enumerable: true,
      get: function() {
        return _index186.default;
      }
    });
    Object.defineProperty(exports2, "setISODay", {
      enumerable: true,
      get: function() {
        return _index187.default;
      }
    });
    Object.defineProperty(exports2, "setISOWeek", {
      enumerable: true,
      get: function() {
        return _index188.default;
      }
    });
    Object.defineProperty(exports2, "setISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index189.default;
      }
    });
    Object.defineProperty(exports2, "setMilliseconds", {
      enumerable: true,
      get: function() {
        return _index190.default;
      }
    });
    Object.defineProperty(exports2, "setMinutes", {
      enumerable: true,
      get: function() {
        return _index191.default;
      }
    });
    Object.defineProperty(exports2, "setMonth", {
      enumerable: true,
      get: function() {
        return _index192.default;
      }
    });
    Object.defineProperty(exports2, "setQuarter", {
      enumerable: true,
      get: function() {
        return _index193.default;
      }
    });
    Object.defineProperty(exports2, "setSeconds", {
      enumerable: true,
      get: function() {
        return _index194.default;
      }
    });
    Object.defineProperty(exports2, "setWeek", {
      enumerable: true,
      get: function() {
        return _index195.default;
      }
    });
    Object.defineProperty(exports2, "setWeekYear", {
      enumerable: true,
      get: function() {
        return _index196.default;
      }
    });
    Object.defineProperty(exports2, "setYear", {
      enumerable: true,
      get: function() {
        return _index197.default;
      }
    });
    Object.defineProperty(exports2, "startOfDay", {
      enumerable: true,
      get: function() {
        return _index198.default;
      }
    });
    Object.defineProperty(exports2, "startOfDecade", {
      enumerable: true,
      get: function() {
        return _index199.default;
      }
    });
    Object.defineProperty(exports2, "startOfHour", {
      enumerable: true,
      get: function() {
        return _index200.default;
      }
    });
    Object.defineProperty(exports2, "startOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index201.default;
      }
    });
    Object.defineProperty(exports2, "startOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index202.default;
      }
    });
    Object.defineProperty(exports2, "startOfMinute", {
      enumerable: true,
      get: function() {
        return _index203.default;
      }
    });
    Object.defineProperty(exports2, "startOfMonth", {
      enumerable: true,
      get: function() {
        return _index204.default;
      }
    });
    Object.defineProperty(exports2, "startOfQuarter", {
      enumerable: true,
      get: function() {
        return _index205.default;
      }
    });
    Object.defineProperty(exports2, "startOfSecond", {
      enumerable: true,
      get: function() {
        return _index206.default;
      }
    });
    Object.defineProperty(exports2, "startOfToday", {
      enumerable: true,
      get: function() {
        return _index207.default;
      }
    });
    Object.defineProperty(exports2, "startOfTomorrow", {
      enumerable: true,
      get: function() {
        return _index208.default;
      }
    });
    Object.defineProperty(exports2, "startOfWeek", {
      enumerable: true,
      get: function() {
        return _index209.default;
      }
    });
    Object.defineProperty(exports2, "startOfWeekYear", {
      enumerable: true,
      get: function() {
        return _index210.default;
      }
    });
    Object.defineProperty(exports2, "startOfYear", {
      enumerable: true,
      get: function() {
        return _index211.default;
      }
    });
    Object.defineProperty(exports2, "startOfYesterday", {
      enumerable: true,
      get: function() {
        return _index212.default;
      }
    });
    Object.defineProperty(exports2, "sub", {
      enumerable: true,
      get: function() {
        return _index213.default;
      }
    });
    Object.defineProperty(exports2, "subBusinessDays", {
      enumerable: true,
      get: function() {
        return _index214.default;
      }
    });
    Object.defineProperty(exports2, "subDays", {
      enumerable: true,
      get: function() {
        return _index215.default;
      }
    });
    Object.defineProperty(exports2, "subHours", {
      enumerable: true,
      get: function() {
        return _index216.default;
      }
    });
    Object.defineProperty(exports2, "subISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index217.default;
      }
    });
    Object.defineProperty(exports2, "subMilliseconds", {
      enumerable: true,
      get: function() {
        return _index218.default;
      }
    });
    Object.defineProperty(exports2, "subMinutes", {
      enumerable: true,
      get: function() {
        return _index219.default;
      }
    });
    Object.defineProperty(exports2, "subMonths", {
      enumerable: true,
      get: function() {
        return _index220.default;
      }
    });
    Object.defineProperty(exports2, "subQuarters", {
      enumerable: true,
      get: function() {
        return _index221.default;
      }
    });
    Object.defineProperty(exports2, "subSeconds", {
      enumerable: true,
      get: function() {
        return _index222.default;
      }
    });
    Object.defineProperty(exports2, "subWeeks", {
      enumerable: true,
      get: function() {
        return _index223.default;
      }
    });
    Object.defineProperty(exports2, "subYears", {
      enumerable: true,
      get: function() {
        return _index224.default;
      }
    });
    Object.defineProperty(exports2, "toDate", {
      enumerable: true,
      get: function() {
        return _index225.default;
      }
    });
    Object.defineProperty(exports2, "weeksToDays", {
      enumerable: true,
      get: function() {
        return _index226.default;
      }
    });
    Object.defineProperty(exports2, "yearsToMonths", {
      enumerable: true,
      get: function() {
        return _index227.default;
      }
    });
    Object.defineProperty(exports2, "yearsToQuarters", {
      enumerable: true,
      get: function() {
        return _index228.default;
      }
    });
    var _index = _interopRequireDefault(require_add());
    var _index2 = _interopRequireDefault(require_addBusinessDays());
    var _index3 = _interopRequireDefault(require_addDays());
    var _index4 = _interopRequireDefault(require_addHours());
    var _index5 = _interopRequireDefault(require_addISOWeekYears());
    var _index6 = _interopRequireDefault(require_addMilliseconds());
    var _index7 = _interopRequireDefault(require_addMinutes());
    var _index8 = _interopRequireDefault(require_addMonths());
    var _index9 = _interopRequireDefault(require_addQuarters());
    var _index10 = _interopRequireDefault(require_addSeconds());
    var _index11 = _interopRequireDefault(require_addWeeks());
    var _index12 = _interopRequireDefault(require_addYears());
    var _index13 = _interopRequireDefault(require_areIntervalsOverlapping());
    var _index14 = _interopRequireDefault(require_clamp());
    var _index15 = _interopRequireDefault(require_closestIndexTo());
    var _index16 = _interopRequireDefault(require_closestTo());
    var _index17 = _interopRequireDefault(require_compareAsc());
    var _index18 = _interopRequireDefault(require_compareDesc());
    var _index19 = _interopRequireDefault(require_daysToWeeks());
    var _index20 = _interopRequireDefault(require_differenceInBusinessDays());
    var _index21 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index22 = _interopRequireDefault(require_differenceInCalendarISOWeekYears());
    var _index23 = _interopRequireDefault(require_differenceInCalendarISOWeeks());
    var _index24 = _interopRequireDefault(require_differenceInCalendarMonths());
    var _index25 = _interopRequireDefault(require_differenceInCalendarQuarters());
    var _index26 = _interopRequireDefault(require_differenceInCalendarWeeks());
    var _index27 = _interopRequireDefault(require_differenceInCalendarYears());
    var _index28 = _interopRequireDefault(require_differenceInDays());
    var _index29 = _interopRequireDefault(require_differenceInHours());
    var _index30 = _interopRequireDefault(require_differenceInISOWeekYears());
    var _index31 = _interopRequireDefault(require_differenceInMilliseconds());
    var _index32 = _interopRequireDefault(require_differenceInMinutes());
    var _index33 = _interopRequireDefault(require_differenceInMonths());
    var _index34 = _interopRequireDefault(require_differenceInQuarters());
    var _index35 = _interopRequireDefault(require_differenceInSeconds());
    var _index36 = _interopRequireDefault(require_differenceInWeeks());
    var _index37 = _interopRequireDefault(require_differenceInYears());
    var _index38 = _interopRequireDefault(require_eachDayOfInterval());
    var _index39 = _interopRequireDefault(require_eachHourOfInterval());
    var _index40 = _interopRequireDefault(require_eachMinuteOfInterval());
    var _index41 = _interopRequireDefault(require_eachMonthOfInterval());
    var _index42 = _interopRequireDefault(require_eachQuarterOfInterval());
    var _index43 = _interopRequireDefault(require_eachWeekOfInterval());
    var _index44 = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index45 = _interopRequireDefault(require_eachWeekendOfMonth());
    var _index46 = _interopRequireDefault(require_eachWeekendOfYear());
    var _index47 = _interopRequireDefault(require_eachYearOfInterval());
    var _index48 = _interopRequireDefault(require_endOfDay());
    var _index49 = _interopRequireDefault(require_endOfDecade());
    var _index50 = _interopRequireDefault(require_endOfHour());
    var _index51 = _interopRequireDefault(require_endOfISOWeek());
    var _index52 = _interopRequireDefault(require_endOfISOWeekYear());
    var _index53 = _interopRequireDefault(require_endOfMinute());
    var _index54 = _interopRequireDefault(require_endOfMonth());
    var _index55 = _interopRequireDefault(require_endOfQuarter());
    var _index56 = _interopRequireDefault(require_endOfSecond());
    var _index57 = _interopRequireDefault(require_endOfToday());
    var _index58 = _interopRequireDefault(require_endOfTomorrow());
    var _index59 = _interopRequireDefault(require_endOfWeek());
    var _index60 = _interopRequireDefault(require_endOfYear());
    var _index61 = _interopRequireDefault(require_endOfYesterday());
    var _index62 = _interopRequireDefault(require_format());
    var _index63 = _interopRequireDefault(require_formatDistance2());
    var _index64 = _interopRequireDefault(require_formatDistanceStrict());
    var _index65 = _interopRequireDefault(require_formatDistanceToNow());
    var _index66 = _interopRequireDefault(require_formatDistanceToNowStrict());
    var _index67 = _interopRequireDefault(require_formatDuration());
    var _index68 = _interopRequireDefault(require_formatISO());
    var _index69 = _interopRequireDefault(require_formatISO9075());
    var _index70 = _interopRequireDefault(require_formatISODuration());
    var _index71 = _interopRequireDefault(require_formatRFC3339());
    var _index72 = _interopRequireDefault(require_formatRFC7231());
    var _index73 = _interopRequireDefault(require_formatRelative2());
    var _index74 = _interopRequireDefault(require_fromUnixTime());
    var _index75 = _interopRequireDefault(require_getDate());
    var _index76 = _interopRequireDefault(require_getDay());
    var _index77 = _interopRequireDefault(require_getDayOfYear());
    var _index78 = _interopRequireDefault(require_getDaysInMonth());
    var _index79 = _interopRequireDefault(require_getDaysInYear());
    var _index80 = _interopRequireDefault(require_getDecade());
    var _index81 = _interopRequireDefault(require_getHours());
    var _index82 = _interopRequireDefault(require_getISODay());
    var _index83 = _interopRequireDefault(require_getISOWeek());
    var _index84 = _interopRequireDefault(require_getISOWeekYear());
    var _index85 = _interopRequireDefault(require_getISOWeeksInYear());
    var _index86 = _interopRequireDefault(require_getMilliseconds());
    var _index87 = _interopRequireDefault(require_getMinutes());
    var _index88 = _interopRequireDefault(require_getMonth());
    var _index89 = _interopRequireDefault(require_getOverlappingDaysInIntervals());
    var _index90 = _interopRequireDefault(require_getQuarter());
    var _index91 = _interopRequireDefault(require_getSeconds());
    var _index92 = _interopRequireDefault(require_getTime());
    var _index93 = _interopRequireDefault(require_getUnixTime());
    var _index94 = _interopRequireDefault(require_getWeek());
    var _index95 = _interopRequireDefault(require_getWeekOfMonth());
    var _index96 = _interopRequireDefault(require_getWeekYear());
    var _index97 = _interopRequireDefault(require_getWeeksInMonth());
    var _index98 = _interopRequireDefault(require_getYear());
    var _index99 = _interopRequireDefault(require_hoursToMilliseconds());
    var _index100 = _interopRequireDefault(require_hoursToMinutes());
    var _index101 = _interopRequireDefault(require_hoursToSeconds());
    var _index102 = _interopRequireDefault(require_intervalToDuration());
    var _index103 = _interopRequireDefault(require_intlFormat());
    var _index104 = _interopRequireDefault(require_isAfter());
    var _index105 = _interopRequireDefault(require_isBefore());
    var _index106 = _interopRequireDefault(require_isDate());
    var _index107 = _interopRequireDefault(require_isEqual());
    var _index108 = _interopRequireDefault(require_isExists());
    var _index109 = _interopRequireDefault(require_isFirstDayOfMonth());
    var _index110 = _interopRequireDefault(require_isFriday());
    var _index111 = _interopRequireDefault(require_isFuture());
    var _index112 = _interopRequireDefault(require_isLastDayOfMonth());
    var _index113 = _interopRequireDefault(require_isLeapYear());
    var _index114 = _interopRequireDefault(require_isMatch());
    var _index115 = _interopRequireDefault(require_isMonday());
    var _index116 = _interopRequireDefault(require_isPast());
    var _index117 = _interopRequireDefault(require_isSameDay());
    var _index118 = _interopRequireDefault(require_isSameHour());
    var _index119 = _interopRequireDefault(require_isSameISOWeek());
    var _index120 = _interopRequireDefault(require_isSameISOWeekYear());
    var _index121 = _interopRequireDefault(require_isSameMinute());
    var _index122 = _interopRequireDefault(require_isSameMonth());
    var _index123 = _interopRequireDefault(require_isSameQuarter());
    var _index124 = _interopRequireDefault(require_isSameSecond());
    var _index125 = _interopRequireDefault(require_isSameWeek());
    var _index126 = _interopRequireDefault(require_isSameYear());
    var _index127 = _interopRequireDefault(require_isSaturday());
    var _index128 = _interopRequireDefault(require_isSunday());
    var _index129 = _interopRequireDefault(require_isThisHour());
    var _index130 = _interopRequireDefault(require_isThisISOWeek());
    var _index131 = _interopRequireDefault(require_isThisMinute());
    var _index132 = _interopRequireDefault(require_isThisMonth());
    var _index133 = _interopRequireDefault(require_isThisQuarter());
    var _index134 = _interopRequireDefault(require_isThisSecond());
    var _index135 = _interopRequireDefault(require_isThisWeek());
    var _index136 = _interopRequireDefault(require_isThisYear());
    var _index137 = _interopRequireDefault(require_isThursday());
    var _index138 = _interopRequireDefault(require_isToday());
    var _index139 = _interopRequireDefault(require_isTomorrow());
    var _index140 = _interopRequireDefault(require_isTuesday());
    var _index141 = _interopRequireDefault(require_isValid());
    var _index142 = _interopRequireDefault(require_isWednesday());
    var _index143 = _interopRequireDefault(require_isWeekend());
    var _index144 = _interopRequireDefault(require_isWithinInterval());
    var _index145 = _interopRequireDefault(require_isYesterday());
    var _index146 = _interopRequireDefault(require_lastDayOfDecade());
    var _index147 = _interopRequireDefault(require_lastDayOfISOWeek());
    var _index148 = _interopRequireDefault(require_lastDayOfISOWeekYear());
    var _index149 = _interopRequireDefault(require_lastDayOfMonth());
    var _index150 = _interopRequireDefault(require_lastDayOfQuarter());
    var _index151 = _interopRequireDefault(require_lastDayOfWeek());
    var _index152 = _interopRequireDefault(require_lastDayOfYear());
    var _index153 = _interopRequireDefault(require_lightFormat());
    var _index154 = _interopRequireDefault(require_max());
    var _index155 = _interopRequireDefault(require_milliseconds());
    var _index156 = _interopRequireDefault(require_millisecondsToHours());
    var _index157 = _interopRequireDefault(require_millisecondsToMinutes());
    var _index158 = _interopRequireDefault(require_millisecondsToSeconds());
    var _index159 = _interopRequireDefault(require_min());
    var _index160 = _interopRequireDefault(require_minutesToHours());
    var _index161 = _interopRequireDefault(require_minutesToMilliseconds());
    var _index162 = _interopRequireDefault(require_minutesToSeconds());
    var _index163 = _interopRequireDefault(require_monthsToQuarters());
    var _index164 = _interopRequireDefault(require_monthsToYears());
    var _index165 = _interopRequireDefault(require_nextDay());
    var _index166 = _interopRequireDefault(require_nextFriday());
    var _index167 = _interopRequireDefault(require_nextMonday());
    var _index168 = _interopRequireDefault(require_nextSaturday());
    var _index169 = _interopRequireDefault(require_nextSunday());
    var _index170 = _interopRequireDefault(require_nextThursday());
    var _index171 = _interopRequireDefault(require_nextTuesday());
    var _index172 = _interopRequireDefault(require_nextWednesday());
    var _index173 = _interopRequireDefault(require_parse2());
    var _index174 = _interopRequireDefault(require_parseISO());
    var _index175 = _interopRequireDefault(require_parseJSON());
    var _index176 = _interopRequireDefault(require_quartersToMonths());
    var _index177 = _interopRequireDefault(require_quartersToYears());
    var _index178 = _interopRequireDefault(require_roundToNearestMinutes());
    var _index179 = _interopRequireDefault(require_secondsToHours());
    var _index180 = _interopRequireDefault(require_secondsToMilliseconds());
    var _index181 = _interopRequireDefault(require_secondsToMinutes());
    var _index182 = _interopRequireDefault(require_set2());
    var _index183 = _interopRequireDefault(require_setDate());
    var _index184 = _interopRequireDefault(require_setDay());
    var _index185 = _interopRequireDefault(require_setDayOfYear());
    var _index186 = _interopRequireDefault(require_setHours());
    var _index187 = _interopRequireDefault(require_setISODay());
    var _index188 = _interopRequireDefault(require_setISOWeek());
    var _index189 = _interopRequireDefault(require_setISOWeekYear());
    var _index190 = _interopRequireDefault(require_setMilliseconds());
    var _index191 = _interopRequireDefault(require_setMinutes());
    var _index192 = _interopRequireDefault(require_setMonth());
    var _index193 = _interopRequireDefault(require_setQuarter());
    var _index194 = _interopRequireDefault(require_setSeconds());
    var _index195 = _interopRequireDefault(require_setWeek());
    var _index196 = _interopRequireDefault(require_setWeekYear());
    var _index197 = _interopRequireDefault(require_setYear());
    var _index198 = _interopRequireDefault(require_startOfDay());
    var _index199 = _interopRequireDefault(require_startOfDecade());
    var _index200 = _interopRequireDefault(require_startOfHour());
    var _index201 = _interopRequireDefault(require_startOfISOWeek());
    var _index202 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index203 = _interopRequireDefault(require_startOfMinute());
    var _index204 = _interopRequireDefault(require_startOfMonth());
    var _index205 = _interopRequireDefault(require_startOfQuarter());
    var _index206 = _interopRequireDefault(require_startOfSecond());
    var _index207 = _interopRequireDefault(require_startOfToday());
    var _index208 = _interopRequireDefault(require_startOfTomorrow());
    var _index209 = _interopRequireDefault(require_startOfWeek());
    var _index210 = _interopRequireDefault(require_startOfWeekYear());
    var _index211 = _interopRequireDefault(require_startOfYear());
    var _index212 = _interopRequireDefault(require_startOfYesterday());
    var _index213 = _interopRequireDefault(require_sub());
    var _index214 = _interopRequireDefault(require_subBusinessDays());
    var _index215 = _interopRequireDefault(require_subDays());
    var _index216 = _interopRequireDefault(require_subHours());
    var _index217 = _interopRequireDefault(require_subISOWeekYears());
    var _index218 = _interopRequireDefault(require_subMilliseconds());
    var _index219 = _interopRequireDefault(require_subMinutes());
    var _index220 = _interopRequireDefault(require_subMonths());
    var _index221 = _interopRequireDefault(require_subQuarters());
    var _index222 = _interopRequireDefault(require_subSeconds());
    var _index223 = _interopRequireDefault(require_subWeeks());
    var _index224 = _interopRequireDefault(require_subYears());
    var _index225 = _interopRequireDefault(require_toDate());
    var _index226 = _interopRequireDefault(require_weeksToDays());
    var _index227 = _interopRequireDefault(require_yearsToMonths());
    var _index228 = _interopRequireDefault(require_yearsToQuarters());
    var _index229 = require_constants();
    Object.keys(_index229).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      Object.defineProperty(exports2, key, {
        enumerable: true,
        get: function() {
          return _index229[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// .svelte-kit/netlify/entry.js
__export(exports, {
  handler: () => handler
});
init_shims();

// .svelte-kit/output/server/app.js
init_shims();
var import_fs = __toModule(require("fs"));
var import_path = __toModule(require("path"));
var import_gray_matter = __toModule(require_gray_matter());
var import_date_fns = __toModule(require_date_fns());
var __require2 = typeof require !== "undefined" ? require : (x) => {
  throw new Error('Dynamic require of "' + x + '" is not supported');
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var _map;
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function error$1(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s2) {
  return typeof s2 === "string" || s2 instanceof String;
}
function is_content_type_textual(content_type) {
  if (!content_type)
    return true;
  const [type] = content_type.split(";");
  return type === "text/plain" || type === "application/json" || type === "application/x-www-form-urlencoded" || type === "multipart/form-data";
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler2 = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler2) {
    return;
  }
  const params = route.params(match);
  const response = await handler2({ ...request, params });
  const preface = `Invalid response from route ${request.path}`;
  if (!response) {
    return;
  }
  if (typeof response !== "object") {
    return error$1(`${preface}: expected an object, got ${typeof response}`);
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type = get_single_valued_header(headers, "content-type");
  const is_type_textual = is_content_type_textual(type);
  if (!is_type_textual && !(body instanceof Uint8Array || is_string(body))) {
    return error$1(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type || type.startsWith("application/json"))) {
    headers = { ...headers, "content-type": "application/json; charset=utf-8" };
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
var unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var escaped$1 = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a, b) {
    return b[1] - a[1];
  }).forEach(function(entry, i) {
    names.set(entry[0], getName(i));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i) {
          return i in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str2 = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name, thing) {
      params_1.push(name);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i) {
            statements_1.push(name + "[" + i + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name + "." + Array.from(thing).map(function(_a) {
            var k = _a[0], v = _a[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str2);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str2;
  }
}
function getName(num) {
  var name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str2 = String(thing);
  if (typeof thing === "number")
    return str2.replace(/^(-)?0\./, "$1.");
  return str2;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped$1[c] || c;
}
function escapeUnsafeChars(str2) {
  return str2.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str2) {
  var result = '"';
  for (var i = 0; i < str2.length; i += 1) {
    var char = str2.charAt(i);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped$1) {
      result += escaped$1[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str2.charCodeAt(i + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str2[++i];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop$1() {
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
Promise.resolve();
var subscriber_queue = [];
function writable(value, start = noop$1) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop$1) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop$1;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function hash(value) {
  let hash2 = 5381;
  let i = value.length;
  if (typeof value === "string") {
    while (i)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i);
  } else {
    while (i)
      hash2 = hash2 * 33 ^ value[--i];
  }
  return (hash2 >>> 0).toString(36);
}
var s$1 = JSON.stringify;
async function render_response({
  branch,
  options: options22,
  $session,
  page_config,
  status,
  error: error2,
  page
}) {
  const css2 = new Set(options22.entry.css);
  const js = new Set(options22.entry.js);
  const styles = new Set();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options22.get_stack(error2);
  }
  if (page_config.ssr) {
    branch.forEach(({ node, loaded, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url) => css2.add(url));
      if (node.js)
        node.js.forEach((url) => js.add(url));
      if (node.styles)
        node.styles.forEach((content) => styles.add(content));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded.maxage;
    });
    const session = writable($session);
    const props = {
      stores: {
        page: writable(null),
        navigating: writable(null),
        session
      },
      page,
      components: branch.map(({ node }) => node.module.default)
    };
    for (let i = 0; i < branch.length; i += 1) {
      props[`props_${i}`] = await branch[i].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options22.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  const include_js = page_config.router || page_config.hydrate;
  if (!include_js)
    js.clear();
  const links = options22.amp ? styles.size > 0 || rendered.css.code.length > 0 ? `<style amp-custom>${Array.from(styles).concat(rendered.css.code).join("\n")}</style>` : "" : [
    ...Array.from(js).map((dep) => `<link rel="modulepreload" href="${dep}">`),
    ...Array.from(css2).map((dep) => `<link rel="stylesheet" href="${dep}">`)
  ].join("\n		");
  let init2 = "";
  if (options22.amp) {
    init2 = `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>`;
  } else if (include_js) {
    init2 = `<script type="module">
			import { start } from ${s$1(options22.entry.file)};
			start({
				target: ${options22.target ? `document.querySelector(${s$1(options22.target)})` : "document.body"},
				paths: ${s$1(options22.paths)},
				session: ${try_serialize($session, (error3) => {
      throw new Error(`Failed to serialize session data: ${error3.message}`);
    })},
				host: ${page && page.host ? s$1(page.host) : "location.host"},
				route: ${!!page_config.router},
				spa: ${!page_config.ssr},
				trailing_slash: ${s$1(options22.trailing_slash)},
				hydrate: ${page_config.ssr && page_config.hydrate ? `{
					status: ${status},
					error: ${serialize_error(error2)},
					nodes: [
						${(branch || []).map(({ node }) => `import(${s$1(node.entry)})`).join(",\n						")}
					],
					page: {
						host: ${page && page.host ? s$1(page.host) : "location.host"}, // TODO this is redundant
						path: ${s$1(page && page.path)},
						query: new URLSearchParams(${page ? s$1(page.query.toString()) : ""}),
						params: ${page && s$1(page.params)}
					}
				}` : "null"}
			});
		<\/script>`;
  }
  if (options22.service_worker) {
    init2 += `<script>
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('${options22.service_worker}');
			}
		<\/script>`;
  }
  const head = [
    rendered.head,
    styles.size && !options22.amp ? `<style data-svelte>${Array.from(styles).join("\n")}</style>` : "",
    links,
    init2
  ].join("\n\n		");
  const body = options22.amp ? rendered.html : `${rendered.html}

			${serialized_data.map(({ url, body: body2, json }) => {
    let attributes = `type="application/json" data-type="svelte-data" data-url="${url}"`;
    if (body2)
      attributes += ` data-body="${hash(body2)}"`;
    return `<script ${attributes}>${json}<\/script>`;
  }).join("\n\n	")}
		`;
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options22.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  return {
    status,
    headers,
    body: options22.template({ head, body })
  };
}
function try_serialize(data, fail) {
  try {
    return devalue(data);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name, message, stack } = error2;
    serialized = try_serialize({ ...error2, name, message, stack });
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize(loaded) {
  const has_error_status = loaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;
  if (loaded.error || has_error_status) {
    const status = loaded.status;
    if (!loaded.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded.error === "string" ? new Error(loaded.error) : loaded.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded.redirect) {
    if (!loaded.status || Math.floor(loaded.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  return loaded;
}
var s = JSON.stringify;
async function load_node({
  request,
  options: options22,
  state,
  route,
  page,
  node,
  $session,
  context,
  prerender_enabled,
  is_leaf,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded;
  const page_proxy = new Proxy(page, {
    get: (target, prop, receiver) => {
      if (prop === "query" && prerender_enabled) {
        throw new Error("Cannot access query on a page with prerendering enabled");
      }
      return Reflect.get(target, prop, receiver);
    }
  });
  if (module2.load) {
    const load_input = {
      page: page_proxy,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let url;
        if (typeof resource === "string") {
          url = resource;
        } else {
          url = resource.url;
          opts = {
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity,
            ...opts
          };
        }
        const resolved = resolve(request.path, url.split("?")[0]);
        let response;
        const filename = resolved.replace(options22.paths.assets, "").slice(1);
        const filename_html = `${filename}/index.html`;
        const asset = options22.manifest.assets.find((d) => d.file === filename || d.file === filename_html);
        if (asset) {
          response = options22.read ? new Response(options22.read(asset.file), {
            headers: asset.type ? { "content-type": asset.type } : {}
          }) : await fetch(`http://${page.host}/${asset.file}`, opts);
        } else if (resolved.startsWith("/") && !resolved.startsWith("//")) {
          const relative = resolved;
          const headers = {
            ...opts.headers
          };
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            headers.cookie = request.headers.cookie;
            if (!headers.authorization) {
              headers.authorization = request.headers.authorization;
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const search = url.includes("?") ? url.slice(url.indexOf("?") + 1) : "";
          const rendered = await respond({
            host: request.host,
            method: opts.method || "GET",
            headers,
            path: relative,
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body),
            query: new URLSearchParams(search)
          }, options22, {
            fetched: url,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${url}) in server-side fetch`);
          }
          if (typeof request.host !== "undefined") {
            const { hostname: fetch_hostname } = new URL(url);
            const [server_hostname] = request.host.split(":");
            if (`.${fetch_hostname}`.endsWith(`.${server_hostname}`) && opts.credentials !== "omit") {
              uses_credentials = true;
              opts.headers = {
                ...opts.headers,
                cookie: request.headers.cookie
              };
            }
          }
          const external_request = new Request(url, opts);
          response = await options22.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s(response2.statusText)},"headers":${s(headers)},"body":${escape$1(body)}}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      context: { ...context }
    };
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded = await module2.load.call(null, load_input);
  } else {
    loaded = {};
  }
  if (!loaded && is_leaf && !is_error)
    return;
  if (!loaded) {
    throw new Error(`${node.entry} - load must return a value except for page fall through`);
  }
  return {
    node,
    loaded: normalize(loaded),
    context: loaded.context || context,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
var escaped$2 = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
function escape$1(str2) {
  let result = '"';
  for (let i = 0; i < str2.length; i += 1) {
    const char = str2.charAt(i);
    const code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped$2) {
      result += escaped$2[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str2.charCodeAt(i + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str2[++i];
      } else {
        result += `\\u${code.toString(16).toUpperCase()}`;
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
var absolute = /^([a-z]+:)?\/?\//;
function resolve(base2, path2) {
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path2);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path2.slice(path_match[0].length).split("/") : path2.split("/");
  baseparts.pop();
  for (let i = 0; i < pathparts.length; i += 1) {
    const part = pathparts[i];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
async function respond_with_error({ request, options: options22, state, $session, status, error: error2 }) {
  const default_layout = await options22.load_component(options22.manifest.layout);
  const default_error = await options22.load_component(options22.manifest.error);
  const page = {
    host: request.host,
    path: request.path,
    query: request.query,
    params: {}
  };
  const loaded = await load_node({
    request,
    options: options22,
    state,
    route: null,
    page,
    node: default_layout,
    $session,
    context: {},
    prerender_enabled: is_prerender_enabled(options22, default_error, state),
    is_leaf: false,
    is_error: false
  });
  const branch = [
    loaded,
    await load_node({
      request,
      options: options22,
      state,
      route: null,
      page,
      node: default_error,
      $session,
      context: loaded ? loaded.context : {},
      prerender_enabled: is_prerender_enabled(options22, default_error, state),
      is_leaf: false,
      is_error: true,
      status,
      error: error2
    })
  ];
  try {
    return await render_response({
      options: options22,
      $session,
      page_config: {
        hydrate: options22.hydrate,
        router: options22.router,
        ssr: options22.ssr
      },
      status,
      error: error2,
      branch,
      page
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options22.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
function is_prerender_enabled(options22, node, state) {
  return options22.prerender && (!!node.module.prerender || !!state.prerender && state.prerender.all);
}
async function respond$1(opts) {
  const { request, options: options22, state, $session, route } = opts;
  let nodes;
  try {
    nodes = await Promise.all(route.a.map((id2) => id2 ? options22.load_component(id2) : void 0));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options22.handle_error(error3, request);
    return await respond_with_error({
      request,
      options: options22,
      state,
      $session,
      status: 500,
      error: error3
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options22);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {},
      body: ""
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  ssr:
    if (page_config.ssr) {
      let context = {};
      for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        let loaded;
        if (node) {
          try {
            loaded = await load_node({
              ...opts,
              node,
              context,
              prerender_enabled: is_prerender_enabled(options22, node, state),
              is_leaf: i === nodes.length - 1,
              is_error: false
            });
            if (!loaded)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded.set_cookie_headers);
            if (loaded.loaded.redirect) {
              return with_cookies({
                status: loaded.loaded.status,
                headers: {
                  location: encodeURI(loaded.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded.loaded.error) {
              ({ status, error: error2 } = loaded.loaded);
            }
          } catch (err) {
            const e = coalesce_to_error(err);
            options22.handle_error(e, request);
            status = 500;
            error2 = e;
          }
          if (loaded && !error2) {
            branch.push(loaded);
          }
          if (error2) {
            while (i--) {
              if (route.b[i]) {
                const error_node = await options22.load_component(route.b[i]);
                let node_loaded;
                let j = i;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node({
                    ...opts,
                    node: error_node,
                    context: node_loaded.context,
                    prerender_enabled: is_prerender_enabled(options22, error_node, state),
                    is_leaf: false,
                    is_error: true,
                    status,
                    error: error2
                  });
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options22);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  break ssr;
                } catch (err) {
                  const e = coalesce_to_error(err);
                  options22.handle_error(e, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options: options22,
              state,
              $session,
              status,
              error: error2
            }), set_cookie_headers);
          }
        }
        if (loaded && loaded.loaded.context) {
          context = {
            ...context,
            ...loaded.loaded.context
          };
        }
      }
    }
  try {
    return with_cookies(await render_response({
      ...opts,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    }), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options22.handle_error(error3, request);
    return with_cookies(await respond_with_error({
      ...opts,
      status: 500,
      error: error3
    }), set_cookie_headers);
  }
}
function get_page_config(leaf, options22) {
  return {
    ssr: "ssr" in leaf ? !!leaf.ssr : options22.ssr,
    router: "router" in leaf ? !!leaf.router : options22.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options22.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options22, state) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.path}`
    };
  }
  const params = route.params(match);
  const page = {
    host: request.host,
    path: request.path,
    query: request.query,
    params
  };
  const $session = await options22.hooks.getSession(request);
  const response = await respond$1({
    request,
    options: options22,
    state,
    $session,
    route,
    page
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map = new Map();
  return {
    append(key, value) {
      if (map.has(key)) {
        (map.get(key) || []).push(value);
      } else {
        map.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map)
  };
}
var ReadOnlyFormData = class {
  constructor(map) {
    __privateAdd(this, _map, void 0);
    __privateSet(this, _map, map);
  }
  get(key) {
    const value = __privateGet(this, _map).get(key);
    return value && value[0];
  }
  getAll(key) {
    return __privateGet(this, _map).get(key);
  }
  has(key) {
    return __privateGet(this, _map).has(key);
  }
  *[Symbol.iterator]() {
    for (const [key, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield [key, value[i]];
      }
    }
  }
  *entries() {
    for (const [key, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield [key, value[i]];
      }
    }
  }
  *keys() {
    for (const [key] of __privateGet(this, _map))
      yield key;
  }
  *values() {
    for (const [, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield value[i];
      }
    }
  }
};
_map = new WeakMap();
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str2) => {
    const [key, value] = str2.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str2) => {
      const [raw_header, ...raw_directives] = str2.split("; ");
      let [name, value] = raw_header.split(": ");
      name = name.toLowerCase();
      headers[name] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name2, value2] = raw_directive.split("=");
        directives[name2] = JSON.parse(value2);
      });
      if (name === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data;
}
async function respond(incoming, options22, state = {}) {
  if (incoming.path !== "/" && options22.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.path.endsWith("/");
    if (has_trailing_slash && options22.trailing_slash === "never" || !has_trailing_slash && options22.trailing_slash === "always" && !(incoming.path.split("/").pop() || "").includes(".")) {
      const path2 = has_trailing_slash ? incoming.path.slice(0, -1) : incoming.path + "/";
      const q = incoming.query.toString();
      return {
        status: 301,
        headers: {
          location: options22.paths.base + path2 + (q ? `?${q}` : "")
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = {
    ...incoming,
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  };
  try {
    return await options22.hooks.handle({
      request,
      resolve: async (request2) => {
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            options: options22,
            $session: await options22.hooks.getSession(request2),
            page_config: { ssr: false, router: true, hydrate: true },
            status: 200,
            branch: []
          });
        }
        for (const route of options22.manifest.routes) {
          const match = route.pattern.exec(request2.path);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options22, state);
          if (response) {
            if (response.status === 200) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                const etag = `"${hash(response.body || "")}"`;
                if (request2.headers["if-none-match"] === etag) {
                  return {
                    status: 304,
                    headers: {},
                    body: ""
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        const $session = await options22.hooks.getSession(request2);
        return await respond_with_error({
          request: request2,
          options: options22,
          state,
          $session,
          status: 404,
          error: new Error(`Not found: ${request2.path}`)
        });
      }
    });
  } catch (err) {
    const e = coalesce_to_error(err);
    options22.handle_error(e, request);
    return {
      status: 500,
      headers: {},
      body: options22.dev ? e.stack : e.message
    };
  }
}
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
Promise.resolve();
var escaped = {
  '"': "&quot;",
  "'": "&#39;",
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;"
};
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function each(items, fn) {
  let str2 = "";
  for (let i = 0; i < items.length; i += 1) {
    str2 += fn(items[i], i);
  }
  return str2;
}
var missing_component = {
  $$render: () => ""
};
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
var on_destroy;
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(parent_component ? parent_component.$$.context : context || []),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css2) => css2.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function afterUpdate() {
}
var css = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
var Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${``}`;
});
var base = "";
var assets = "";
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
var template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en" data-theme="halloween">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<div id="svelte">' + body + "</div>\n</html>\n";
var options2 = null;
var default_settings = { paths: { "base": "", "assets": "" } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options2 = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-27902ff4.js",
      css: [assets + "/_app/assets/start-d5b4de3e.css"],
      js: [assets + "/_app/start-27902ff4.js", assets + "/_app/chunks/vendor-bbec6117.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id2) => assets + "/_app/" + entry_lookup[id2],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options2.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: true,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
var empty = () => ({});
var manifest = {
  assets: [{ "file": "favicon.png", "size": 1571, "type": "image/png" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/posts\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return posts_json;
      })
    },
    {
      type: "page",
      pattern: /^\/course\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/course.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/how-to-yank-or-copy-text-from-different-instances-of-vim\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/how-to-yank-or-copy-text-from-different-instances-of-vim.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/terselamatkan-oleh-startup-script-di-google-cloud-engine\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/terselamatkan-oleh-startup-script-di-google-cloud-engine.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/menentukan-teknologi-yang-tepat-sebelum-membuat-project\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/react-native-057-images-is-not-showing-on-generated-apk\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/react-native-057-images-is-not-showing-on-generated-apk.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/duplikasi-object-dan-array-dengan-benar-di-javascript\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/duplikasi-object-dan-array-dengan-benar-di-javascript.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/mini-workshop-speed-up-vuejs-development-with-nuxt\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/mini-workshop-speed-up-vuejs-development-with-nuxt.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/workshop-vuejs-basic-bersama-komunitas-surabayadev\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/workshop-vuejs-basic-bersama-komunitas-surabayadev.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/redirect-http-ke-https-dengan-htaccess-di-laravel\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/redirect-http-ke-https-dengan-htaccess-di-laravel.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/download-private-video-youtube-dengan-youtube-dl\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/download-private-video-youtube-dengan-youtube-dl.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/memproteksi-laravel-web-app-dari-serangan-csrf\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/memproteksi-laravel-web-app-dari-serangan-csrf.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/berkomunitaslah-dapatkan-dan-sebarkan-manfaat\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/berkomunitaslah-dapatkan-dan-sebarkan-manfaat.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-destroy-di-controller-laravel-5-part-8\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-destroy-di-controller-laravel-5-part-8.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/membuat-rbac-sendiri-backend-response-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/membuat-rbac-sendiri-backend-response-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-create-di-controller-laravel-5-part-3\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-create-di-controller-laravel-5-part-3.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-update-di-controller-laravel-5-part-7\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-update-di-controller-laravel-5-part-7.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/rest-api-dengan-nodejs-dan-typescript-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/rest-api-dengan-nodejs-dan-typescript-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/rest-api-dengan-nodejs-dan-typescript-part-3\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-3.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/menampilkan-data-polymorphic-tanpa-eloquent\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/menampilkan-data-polymorphic-tanpa-eloquent.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-index-di-controller-laravel-5-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-index-di-controller-laravel-5-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-store-di-controller-laravel-5-part-4\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-store-di-controller-laravel-5-part-4.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/membersihkan-disk-usage-pada-ubuntu-server\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/membersihkan-disk-usage-pada-ubuntu-server.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-edit-di-controller-laravel-5-part-6\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-edit-di-controller-laravel-5-part-6.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/method-show-di-controller-laravel-5-part-5\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/method-show-di-controller-laravel-5-part-5.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/cara-mudah-mengurus-atau-membuat-passport\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/cara-mudah-mengurus-atau-membuat-passport.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/react-native-state-management-dengan-remx\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/react-native-state-management-dengan-remx.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/fokus-sangat-membantu-kita-saat-ngoding\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/fokus-sangat-membantu-kita-saat-ngoding.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/install-dan-akses-remote-mariadb-di-vps\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/install-dan-akses-remote-mariadb-di-vps.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/jangan-dibuka-nanti-jadi-lemot-44440000\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/jangan-dibuka-nanti-jadi-lemot-44440000.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/memajukan-komunitas-di-webunconfid-2018\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/memajukan-komunitas-di-webunconfid-2018.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/docker-compose-postgresql-dan-pgadmin4\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/docker-compose-postgresql-dan-pgadmin4.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/dasar-controller-di-laravel-5-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/dasar-controller-di-laravel-5-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/migrasi-dari-dynamic-ke-static-blog\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/migrasi-dari-dynamic-ke-static-blog.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/programmer-adalah-pembelajar-sejati\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/programmer-adalah-pembelajar-sejati.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/tips-dan-trik-array-pada-javascript\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/tips-dan-trik-array-pada-javascript.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/membuat-rbac-sendiri-konsep-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/membuat-rbac-sendiri-konsep-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/mengenal-route-di-laravel-5-part-1\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/mengenal-route-di-laravel-5-part-1.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/mengenal-route-di-laravel-5-part-2\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/mengenal-route-di-laravel-5-part-2.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/berkenalan-lebih-dekat-dengan-pwa\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/berkenalan-lebih-dekat-dengan-pwa.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/manajemen-waktu-sebagai-developer\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/manajemen-waktu-sebagai-developer.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/menggunakan-knexjs-di-express-app\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/menggunakan-knexjs-di-express-app.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/mengenal-middleware-di-laravel-5\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/mengenal-middleware-di-laravel-5.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/jabber-xmpp-menggunakan-nodejs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/jabber-xmpp-menggunakan-nodejs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/membangun-komunitas-surabayajs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/membangun-komunitas-surabayajs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/menyematkan-data-pada-vue-slot\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/menyematkan-data-pada-vue-slot.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/pengenalan-dasar-tentang-lumen\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/pengenalan-dasar-tentang-lumen.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/groupby-array-pada-javascript\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/groupby-array-pada-javascript.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/manfaat-dari-berpikir-negatif\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/manfaat-dari-berpikir-negatif.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/how-to-setup-my-personal-vim\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/how-to-setup-my-personal-vim.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/konfigurasi-dasar-laravel-5\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/konfigurasi-dasar-laravel-5.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/struktur-folder-laravel-55\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/struktur-folder-laravel-55.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/goodbye-mobx-welcome-remx\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/goodbye-mobx-welcome-remx.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/surabayajs-meetup-perdana\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/surabayajs-meetup-perdana.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/surabayajs-meetup-ketiga\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/surabayajs-meetup-ketiga.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/berkenalan-dengan-pugjs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/berkenalan-dengan-pugjs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/berkenalan-dengan-vuejs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/berkenalan-dengan-vuejs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/manfaat-menggunakan-pwa\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/manfaat-menggunakan-pwa.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/surabayajs-meetup-kedua\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/surabayajs-meetup-kedua.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/vim-keyboard-cheatsheet\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/vim-keyboard-cheatsheet.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/momentjs-dengan-nuxtjs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/momentjs-dengan-nuxtjs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/setting-vhost-di-nginx\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/setting-vhost-di-nginx.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/auth-module-di-nuxtjs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/auth-module-di-nuxtjs.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/perubahan-jam-tidur\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/perubahan-jam-tidur.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/migrasi-ke-vim\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/migrasi-ke-vim.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/post\/spa-vs-mpa\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/post/spa-vs-mpa.md"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
var get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
  handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
  externalFetch: hooks.externalFetch || fetch
});
var module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/course.svelte": () => Promise.resolve().then(function() {
    return course;
  }),
  "src/routes/blog.svelte": () => Promise.resolve().then(function() {
    return blog;
  }),
  "src/routes/post/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx.md": () => Promise.resolve().then(function() {
    return optimasiAsetBerbasisTeksUntukPerformaWebDenganGzipNginx;
  }),
  "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1.md": () => Promise.resolve().then(function() {
    return laravelRealtimeNotificationDenganSocketioDanNuxtjsPart1;
  }),
  "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2.md": () => Promise.resolve().then(function() {
    return laravelRealtimeNotificationDenganSocketioDanNuxtjsPart2;
  }),
  "src/routes/post/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern.md": () => Promise.resolve().then(function() {
    return mengorganisirApiCallDiNuxtjsDenganRepositoryPattern;
  }),
  "src/routes/post/how-to-yank-or-copy-text-from-different-instances-of-vim.md": () => Promise.resolve().then(function() {
    return howToYankOrCopyTextFromDifferentInstancesOfVim;
  }),
  "src/routes/post/terselamatkan-oleh-startup-script-di-google-cloud-engine.md": () => Promise.resolve().then(function() {
    return terselamatkanOlehStartupScriptDiGoogleCloudEngine;
  }),
  "src/routes/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project.md": () => Promise.resolve().then(function() {
    return menentukanTeknologiYangTepatSebelumMembuatProject;
  }),
  "src/routes/post/react-native-057-images-is-not-showing-on-generated-apk.md": () => Promise.resolve().then(function() {
    return reactNative057ImagesIsNotShowingOnGeneratedApk;
  }),
  "src/routes/post/duplikasi-object-dan-array-dengan-benar-di-javascript.md": () => Promise.resolve().then(function() {
    return duplikasiObjectDanArrayDenganBenarDiJavascript;
  }),
  "src/routes/post/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3.md": () => Promise.resolve().then(function() {
    return membuatRbacSendiriMenuRenderingDiNuxtjsPart3;
  }),
  "src/routes/post/mini-workshop-speed-up-vuejs-development-with-nuxt.md": () => Promise.resolve().then(function() {
    return miniWorkshopSpeedUpVuejsDevelopmentWithNuxt;
  }),
  "src/routes/post/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx.md": () => Promise.resolve().then(function() {
    return setupHttpsSslDiNuxtjsDanLaravelDenganNginx;
  }),
  "src/routes/post/workshop-vuejs-basic-bersama-komunitas-surabayadev.md": () => Promise.resolve().then(function() {
    return workshopVuejsBasicBersamaKomunitasSurabayadev;
  }),
  "src/routes/post/redirect-http-ke-https-dengan-htaccess-di-laravel.md": () => Promise.resolve().then(function() {
    return redirectHttpKeHttpsDenganHtaccessDiLaravel;
  }),
  "src/routes/post/download-private-video-youtube-dengan-youtube-dl.md": () => Promise.resolve().then(function() {
    return downloadPrivateVideoYoutubeDenganYoutubeDl;
  }),
  "src/routes/post/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper.md": () => Promise.resolve().then(function() {
    return migrasiBlogDariVueGridsomeKeSvelteSapper;
  }),
  "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1.md": () => Promise.resolve().then(function() {
    return tddMenggunakanMochaDanChaiDiNodejsPart1;
  }),
  "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2.md": () => Promise.resolve().then(function() {
    return tddMenggunakanMochaDanChaiDiNodejsPart2;
  }),
  "src/routes/post/memproteksi-laravel-web-app-dari-serangan-csrf.md": () => Promise.resolve().then(function() {
    return memproteksiLaravelWebAppDariSeranganCsrf;
  }),
  "src/routes/post/berkomunitaslah-dapatkan-dan-sebarkan-manfaat.md": () => Promise.resolve().then(function() {
    return berkomunitaslahDapatkanDanSebarkanManfaat;
  }),
  "src/routes/post/method-destroy-di-controller-laravel-5-part-8.md": () => Promise.resolve().then(function() {
    return methodDestroyDiControllerLaravel5Part8;
  }),
  "src/routes/post/membuat-rbac-sendiri-backend-response-part-2.md": () => Promise.resolve().then(function() {
    return membuatRbacSendiriBackendResponsePart2;
  }),
  "src/routes/post/method-create-di-controller-laravel-5-part-3.md": () => Promise.resolve().then(function() {
    return methodCreateDiControllerLaravel5Part3;
  }),
  "src/routes/post/method-update-di-controller-laravel-5-part-7.md": () => Promise.resolve().then(function() {
    return methodUpdateDiControllerLaravel5Part7;
  }),
  "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-1.md": () => Promise.resolve().then(function() {
    return restApiDenganNodejsDanTypescriptPart1;
  }),
  "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-2.md": () => Promise.resolve().then(function() {
    return restApiDenganNodejsDanTypescriptPart2;
  }),
  "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-3.md": () => Promise.resolve().then(function() {
    return restApiDenganNodejsDanTypescriptPart3;
  }),
  "src/routes/post/menampilkan-data-polymorphic-tanpa-eloquent.md": () => Promise.resolve().then(function() {
    return menampilkanDataPolymorphicTanpaEloquent;
  }),
  "src/routes/post/method-index-di-controller-laravel-5-part-2.md": () => Promise.resolve().then(function() {
    return methodIndexDiControllerLaravel5Part2;
  }),
  "src/routes/post/method-store-di-controller-laravel-5-part-4.md": () => Promise.resolve().then(function() {
    return methodStoreDiControllerLaravel5Part4;
  }),
  "src/routes/post/membersihkan-disk-usage-pada-ubuntu-server.md": () => Promise.resolve().then(function() {
    return membersihkanDiskUsagePadaUbuntuServer;
  }),
  "src/routes/post/method-edit-di-controller-laravel-5-part-6.md": () => Promise.resolve().then(function() {
    return methodEditDiControllerLaravel5Part6;
  }),
  "src/routes/post/method-show-di-controller-laravel-5-part-5.md": () => Promise.resolve().then(function() {
    return methodShowDiControllerLaravel5Part5;
  }),
  "src/routes/post/cara-mudah-mengurus-atau-membuat-passport.md": () => Promise.resolve().then(function() {
    return caraMudahMengurusAtauMembuatPassport;
  }),
  "src/routes/post/react-native-state-management-dengan-remx.md": () => Promise.resolve().then(function() {
    return reactNativeStateManagementDenganRemx;
  }),
  "src/routes/post/fokus-sangat-membantu-kita-saat-ngoding.md": () => Promise.resolve().then(function() {
    return fokusSangatMembantuKitaSaatNgoding;
  }),
  "src/routes/post/install-dan-akses-remote-mariadb-di-vps.md": () => Promise.resolve().then(function() {
    return installDanAksesRemoteMariadbDiVps;
  }),
  "src/routes/post/jangan-dibuka-nanti-jadi-lemot-44440000.md": () => Promise.resolve().then(function() {
    return janganDibukaNantiJadiLemot44440000;
  }),
  "src/routes/post/memajukan-komunitas-di-webunconfid-2018.md": () => Promise.resolve().then(function() {
    return memajukanKomunitasDiWebunconfid2018;
  }),
  "src/routes/post/docker-compose-postgresql-dan-pgadmin4.md": () => Promise.resolve().then(function() {
    return dockerComposePostgresqlDanPgadmin4;
  }),
  "src/routes/post/dasar-controller-di-laravel-5-part-1.md": () => Promise.resolve().then(function() {
    return dasarControllerDiLaravel5Part1;
  }),
  "src/routes/post/migrasi-dari-dynamic-ke-static-blog.md": () => Promise.resolve().then(function() {
    return migrasiDariDynamicKeStaticBlog;
  }),
  "src/routes/post/programmer-adalah-pembelajar-sejati.md": () => Promise.resolve().then(function() {
    return programmerAdalahPembelajarSejati;
  }),
  "src/routes/post/tips-dan-trik-array-pada-javascript.md": () => Promise.resolve().then(function() {
    return tipsDanTrikArrayPadaJavascript;
  }),
  "src/routes/post/membuat-rbac-sendiri-konsep-part-1.md": () => Promise.resolve().then(function() {
    return membuatRbacSendiriKonsepPart1;
  }),
  "src/routes/post/mengenal-route-di-laravel-5-part-1.md": () => Promise.resolve().then(function() {
    return mengenalRouteDiLaravel5Part1;
  }),
  "src/routes/post/mengenal-route-di-laravel-5-part-2.md": () => Promise.resolve().then(function() {
    return mengenalRouteDiLaravel5Part2;
  }),
  "src/routes/post/berkenalan-lebih-dekat-dengan-pwa.md": () => Promise.resolve().then(function() {
    return berkenalanLebihDekatDenganPwa;
  }),
  "src/routes/post/manajemen-waktu-sebagai-developer.md": () => Promise.resolve().then(function() {
    return manajemenWaktuSebagaiDeveloper;
  }),
  "src/routes/post/menggunakan-knexjs-di-express-app.md": () => Promise.resolve().then(function() {
    return menggunakanKnexjsDiExpressApp;
  }),
  "src/routes/post/mengenal-middleware-di-laravel-5.md": () => Promise.resolve().then(function() {
    return mengenalMiddlewareDiLaravel5;
  }),
  "src/routes/post/jabber-xmpp-menggunakan-nodejs.md": () => Promise.resolve().then(function() {
    return jabberXmppMenggunakanNodejs;
  }),
  "src/routes/post/membangun-komunitas-surabayajs.md": () => Promise.resolve().then(function() {
    return membangunKomunitasSurabayajs;
  }),
  "src/routes/post/menyematkan-data-pada-vue-slot.md": () => Promise.resolve().then(function() {
    return menyematkanDataPadaVueSlot;
  }),
  "src/routes/post/pengenalan-dasar-tentang-lumen.md": () => Promise.resolve().then(function() {
    return pengenalanDasarTentangLumen;
  }),
  "src/routes/post/groupby-array-pada-javascript.md": () => Promise.resolve().then(function() {
    return groupbyArrayPadaJavascript;
  }),
  "src/routes/post/manfaat-dari-berpikir-negatif.md": () => Promise.resolve().then(function() {
    return manfaatDariBerpikirNegatif;
  }),
  "src/routes/post/how-to-setup-my-personal-vim.md": () => Promise.resolve().then(function() {
    return howToSetupMyPersonalVim;
  }),
  "src/routes/post/konfigurasi-dasar-laravel-5.md": () => Promise.resolve().then(function() {
    return konfigurasiDasarLaravel5;
  }),
  "src/routes/post/struktur-folder-laravel-55.md": () => Promise.resolve().then(function() {
    return strukturFolderLaravel55;
  }),
  "src/routes/post/goodbye-mobx-welcome-remx.md": () => Promise.resolve().then(function() {
    return goodbyeMobxWelcomeRemx;
  }),
  "src/routes/post/surabayajs-meetup-perdana.md": () => Promise.resolve().then(function() {
    return surabayajsMeetupPerdana;
  }),
  "src/routes/post/surabayajs-meetup-ketiga.md": () => Promise.resolve().then(function() {
    return surabayajsMeetupKetiga;
  }),
  "src/routes/post/berkenalan-dengan-pugjs.md": () => Promise.resolve().then(function() {
    return berkenalanDenganPugjs;
  }),
  "src/routes/post/berkenalan-dengan-vuejs.md": () => Promise.resolve().then(function() {
    return berkenalanDenganVuejs;
  }),
  "src/routes/post/manfaat-menggunakan-pwa.md": () => Promise.resolve().then(function() {
    return manfaatMenggunakanPwa;
  }),
  "src/routes/post/surabayajs-meetup-kedua.md": () => Promise.resolve().then(function() {
    return surabayajsMeetupKedua;
  }),
  "src/routes/post/vim-keyboard-cheatsheet.md": () => Promise.resolve().then(function() {
    return vimKeyboardCheatsheet;
  }),
  "src/routes/post/momentjs-dengan-nuxtjs.md": () => Promise.resolve().then(function() {
    return momentjsDenganNuxtjs;
  }),
  "src/routes/post/setting-vhost-di-nginx.md": () => Promise.resolve().then(function() {
    return settingVhostDiNginx;
  }),
  "src/routes/post/auth-module-di-nuxtjs.md": () => Promise.resolve().then(function() {
    return authModuleDiNuxtjs;
  }),
  "src/routes/post/perubahan-jam-tidur.md": () => Promise.resolve().then(function() {
    return perubahanJamTidur;
  }),
  "src/routes/post/migrasi-ke-vim.md": () => Promise.resolve().then(function() {
    return migrasiKeVim;
  }),
  "src/routes/post/spa-vs-mpa.md": () => Promise.resolve().then(function() {
    return spaVsMpa;
  })
};
var metadata_lookup = { "src/routes/__layout.svelte": { "entry": "pages/__layout.svelte-60d5a5ff.js", "css": ["assets/pages/__layout.svelte-7a82de8e.css"], "js": ["pages/__layout.svelte-60d5a5ff.js", "chunks/vendor-bbec6117.js"], "styles": [] }, ".svelte-kit/build/components/error.svelte": { "entry": "error.svelte-b6da0261.js", "css": [], "js": ["error.svelte-b6da0261.js", "chunks/vendor-bbec6117.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-eb815b25.js", "css": [], "js": ["pages/index.svelte-eb815b25.js", "chunks/vendor-bbec6117.js", "chunks/CourseList-ff5825df.js", "chunks/BlogList-71fae4ed.js"], "styles": [] }, "src/routes/course.svelte": { "entry": "pages/course.svelte-f00fc29c.js", "css": [], "js": ["pages/course.svelte-f00fc29c.js", "chunks/vendor-bbec6117.js", "chunks/CourseList-ff5825df.js"], "styles": [] }, "src/routes/blog.svelte": { "entry": "pages/blog.svelte-94e247ac.js", "css": [], "js": ["pages/blog.svelte-94e247ac.js", "chunks/vendor-bbec6117.js", "chunks/BlogList-71fae4ed.js"], "styles": [] }, "src/routes/post/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx.md": { "entry": "pages/post/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx.md-c8f0d7c9.js", "css": [], "js": ["pages/post/optimasi-aset-berbasis-teks-untuk-performa-web-dengan-gzip-nginx.md-c8f0d7c9.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1.md": { "entry": "pages/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1.md-245df8e7.js", "css": [], "js": ["pages/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1.md-245df8e7.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2.md": { "entry": "pages/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2.md-1171e386.js", "css": [], "js": ["pages/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2.md-1171e386.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern.md": { "entry": "pages/post/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern.md-ed72eeca.js", "css": [], "js": ["pages/post/mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern.md-ed72eeca.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/how-to-yank-or-copy-text-from-different-instances-of-vim.md": { "entry": "pages/post/how-to-yank-or-copy-text-from-different-instances-of-vim.md-9d2ee397.js", "css": [], "js": ["pages/post/how-to-yank-or-copy-text-from-different-instances-of-vim.md-9d2ee397.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/terselamatkan-oleh-startup-script-di-google-cloud-engine.md": { "entry": "pages/post/terselamatkan-oleh-startup-script-di-google-cloud-engine.md-ebdec31e.js", "css": [], "js": ["pages/post/terselamatkan-oleh-startup-script-di-google-cloud-engine.md-ebdec31e.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project.md": { "entry": "pages/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project.md-0a990b9a.js", "css": [], "js": ["pages/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project.md-0a990b9a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/react-native-057-images-is-not-showing-on-generated-apk.md": { "entry": "pages/post/react-native-057-images-is-not-showing-on-generated-apk.md-b6c6af8d.js", "css": [], "js": ["pages/post/react-native-057-images-is-not-showing-on-generated-apk.md-b6c6af8d.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/duplikasi-object-dan-array-dengan-benar-di-javascript.md": { "entry": "pages/post/duplikasi-object-dan-array-dengan-benar-di-javascript.md-884174d6.js", "css": [], "js": ["pages/post/duplikasi-object-dan-array-dengan-benar-di-javascript.md-884174d6.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3.md": { "entry": "pages/post/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3.md-f868dc38.js", "css": [], "js": ["pages/post/membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3.md-f868dc38.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/mini-workshop-speed-up-vuejs-development-with-nuxt.md": { "entry": "pages/post/mini-workshop-speed-up-vuejs-development-with-nuxt.md-222ba989.js", "css": [], "js": ["pages/post/mini-workshop-speed-up-vuejs-development-with-nuxt.md-222ba989.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx.md": { "entry": "pages/post/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx.md-8b46a279.js", "css": [], "js": ["pages/post/setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx.md-8b46a279.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/workshop-vuejs-basic-bersama-komunitas-surabayadev.md": { "entry": "pages/post/workshop-vuejs-basic-bersama-komunitas-surabayadev.md-f505a0dd.js", "css": [], "js": ["pages/post/workshop-vuejs-basic-bersama-komunitas-surabayadev.md-f505a0dd.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/redirect-http-ke-https-dengan-htaccess-di-laravel.md": { "entry": "pages/post/redirect-http-ke-https-dengan-htaccess-di-laravel.md-6f0f3d07.js", "css": [], "js": ["pages/post/redirect-http-ke-https-dengan-htaccess-di-laravel.md-6f0f3d07.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/download-private-video-youtube-dengan-youtube-dl.md": { "entry": "pages/post/download-private-video-youtube-dengan-youtube-dl.md-76906c15.js", "css": [], "js": ["pages/post/download-private-video-youtube-dengan-youtube-dl.md-76906c15.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper.md": { "entry": "pages/post/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper.md-4d334f5e.js", "css": [], "js": ["pages/post/migrasi-blog-dari-vue-gridsome-ke-svelte-sapper.md-4d334f5e.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1.md": { "entry": "pages/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1.md-b8492e7a.js", "css": [], "js": ["pages/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1.md-b8492e7a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2.md": { "entry": "pages/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2.md-6fea98f7.js", "css": [], "js": ["pages/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2.md-6fea98f7.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/memproteksi-laravel-web-app-dari-serangan-csrf.md": { "entry": "pages/post/memproteksi-laravel-web-app-dari-serangan-csrf.md-a3ab3649.js", "css": [], "js": ["pages/post/memproteksi-laravel-web-app-dari-serangan-csrf.md-a3ab3649.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/berkomunitaslah-dapatkan-dan-sebarkan-manfaat.md": { "entry": "pages/post/berkomunitaslah-dapatkan-dan-sebarkan-manfaat.md-d4bf384a.js", "css": [], "js": ["pages/post/berkomunitaslah-dapatkan-dan-sebarkan-manfaat.md-d4bf384a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-destroy-di-controller-laravel-5-part-8.md": { "entry": "pages/post/method-destroy-di-controller-laravel-5-part-8.md-c04c6115.js", "css": [], "js": ["pages/post/method-destroy-di-controller-laravel-5-part-8.md-c04c6115.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/membuat-rbac-sendiri-backend-response-part-2.md": { "entry": "pages/post/membuat-rbac-sendiri-backend-response-part-2.md-8fd4c141.js", "css": [], "js": ["pages/post/membuat-rbac-sendiri-backend-response-part-2.md-8fd4c141.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-create-di-controller-laravel-5-part-3.md": { "entry": "pages/post/method-create-di-controller-laravel-5-part-3.md-9fe6965f.js", "css": [], "js": ["pages/post/method-create-di-controller-laravel-5-part-3.md-9fe6965f.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-update-di-controller-laravel-5-part-7.md": { "entry": "pages/post/method-update-di-controller-laravel-5-part-7.md-d6742f53.js", "css": [], "js": ["pages/post/method-update-di-controller-laravel-5-part-7.md-d6742f53.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-1.md": { "entry": "pages/post/rest-api-dengan-nodejs-dan-typescript-part-1.md-198cd191.js", "css": [], "js": ["pages/post/rest-api-dengan-nodejs-dan-typescript-part-1.md-198cd191.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-2.md": { "entry": "pages/post/rest-api-dengan-nodejs-dan-typescript-part-2.md-01863e57.js", "css": [], "js": ["pages/post/rest-api-dengan-nodejs-dan-typescript-part-2.md-01863e57.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/rest-api-dengan-nodejs-dan-typescript-part-3.md": { "entry": "pages/post/rest-api-dengan-nodejs-dan-typescript-part-3.md-5d753482.js", "css": [], "js": ["pages/post/rest-api-dengan-nodejs-dan-typescript-part-3.md-5d753482.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/menampilkan-data-polymorphic-tanpa-eloquent.md": { "entry": "pages/post/menampilkan-data-polymorphic-tanpa-eloquent.md-c9162a1c.js", "css": [], "js": ["pages/post/menampilkan-data-polymorphic-tanpa-eloquent.md-c9162a1c.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-index-di-controller-laravel-5-part-2.md": { "entry": "pages/post/method-index-di-controller-laravel-5-part-2.md-18d0126c.js", "css": [], "js": ["pages/post/method-index-di-controller-laravel-5-part-2.md-18d0126c.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-store-di-controller-laravel-5-part-4.md": { "entry": "pages/post/method-store-di-controller-laravel-5-part-4.md-506d4329.js", "css": [], "js": ["pages/post/method-store-di-controller-laravel-5-part-4.md-506d4329.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/membersihkan-disk-usage-pada-ubuntu-server.md": { "entry": "pages/post/membersihkan-disk-usage-pada-ubuntu-server.md-10552e25.js", "css": [], "js": ["pages/post/membersihkan-disk-usage-pada-ubuntu-server.md-10552e25.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-edit-di-controller-laravel-5-part-6.md": { "entry": "pages/post/method-edit-di-controller-laravel-5-part-6.md-714c8e10.js", "css": [], "js": ["pages/post/method-edit-di-controller-laravel-5-part-6.md-714c8e10.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/method-show-di-controller-laravel-5-part-5.md": { "entry": "pages/post/method-show-di-controller-laravel-5-part-5.md-034f4727.js", "css": [], "js": ["pages/post/method-show-di-controller-laravel-5-part-5.md-034f4727.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/cara-mudah-mengurus-atau-membuat-passport.md": { "entry": "pages/post/cara-mudah-mengurus-atau-membuat-passport.md-a34cdd08.js", "css": [], "js": ["pages/post/cara-mudah-mengurus-atau-membuat-passport.md-a34cdd08.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/react-native-state-management-dengan-remx.md": { "entry": "pages/post/react-native-state-management-dengan-remx.md-0cb9707a.js", "css": [], "js": ["pages/post/react-native-state-management-dengan-remx.md-0cb9707a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/fokus-sangat-membantu-kita-saat-ngoding.md": { "entry": "pages/post/fokus-sangat-membantu-kita-saat-ngoding.md-9be27196.js", "css": [], "js": ["pages/post/fokus-sangat-membantu-kita-saat-ngoding.md-9be27196.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/install-dan-akses-remote-mariadb-di-vps.md": { "entry": "pages/post/install-dan-akses-remote-mariadb-di-vps.md-268b9e6d.js", "css": [], "js": ["pages/post/install-dan-akses-remote-mariadb-di-vps.md-268b9e6d.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/jangan-dibuka-nanti-jadi-lemot-44440000.md": { "entry": "pages/post/jangan-dibuka-nanti-jadi-lemot-44440000.md-c7552172.js", "css": [], "js": ["pages/post/jangan-dibuka-nanti-jadi-lemot-44440000.md-c7552172.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/memajukan-komunitas-di-webunconfid-2018.md": { "entry": "pages/post/memajukan-komunitas-di-webunconfid-2018.md-ae8ab661.js", "css": [], "js": ["pages/post/memajukan-komunitas-di-webunconfid-2018.md-ae8ab661.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/docker-compose-postgresql-dan-pgadmin4.md": { "entry": "pages/post/docker-compose-postgresql-dan-pgadmin4.md-23275f80.js", "css": [], "js": ["pages/post/docker-compose-postgresql-dan-pgadmin4.md-23275f80.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/dasar-controller-di-laravel-5-part-1.md": { "entry": "pages/post/dasar-controller-di-laravel-5-part-1.md-da853f62.js", "css": [], "js": ["pages/post/dasar-controller-di-laravel-5-part-1.md-da853f62.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/migrasi-dari-dynamic-ke-static-blog.md": { "entry": "pages/post/migrasi-dari-dynamic-ke-static-blog.md-6162958d.js", "css": [], "js": ["pages/post/migrasi-dari-dynamic-ke-static-blog.md-6162958d.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/programmer-adalah-pembelajar-sejati.md": { "entry": "pages/post/programmer-adalah-pembelajar-sejati.md-90598cdc.js", "css": [], "js": ["pages/post/programmer-adalah-pembelajar-sejati.md-90598cdc.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/tips-dan-trik-array-pada-javascript.md": { "entry": "pages/post/tips-dan-trik-array-pada-javascript.md-440e8976.js", "css": [], "js": ["pages/post/tips-dan-trik-array-pada-javascript.md-440e8976.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/membuat-rbac-sendiri-konsep-part-1.md": { "entry": "pages/post/membuat-rbac-sendiri-konsep-part-1.md-78b653e4.js", "css": [], "js": ["pages/post/membuat-rbac-sendiri-konsep-part-1.md-78b653e4.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/mengenal-route-di-laravel-5-part-1.md": { "entry": "pages/post/mengenal-route-di-laravel-5-part-1.md-7a4b351d.js", "css": [], "js": ["pages/post/mengenal-route-di-laravel-5-part-1.md-7a4b351d.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/mengenal-route-di-laravel-5-part-2.md": { "entry": "pages/post/mengenal-route-di-laravel-5-part-2.md-db8aad85.js", "css": [], "js": ["pages/post/mengenal-route-di-laravel-5-part-2.md-db8aad85.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/berkenalan-lebih-dekat-dengan-pwa.md": { "entry": "pages/post/berkenalan-lebih-dekat-dengan-pwa.md-9cbe80c0.js", "css": [], "js": ["pages/post/berkenalan-lebih-dekat-dengan-pwa.md-9cbe80c0.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/manajemen-waktu-sebagai-developer.md": { "entry": "pages/post/manajemen-waktu-sebagai-developer.md-420267ae.js", "css": [], "js": ["pages/post/manajemen-waktu-sebagai-developer.md-420267ae.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/menggunakan-knexjs-di-express-app.md": { "entry": "pages/post/menggunakan-knexjs-di-express-app.md-8719ee8f.js", "css": [], "js": ["pages/post/menggunakan-knexjs-di-express-app.md-8719ee8f.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/mengenal-middleware-di-laravel-5.md": { "entry": "pages/post/mengenal-middleware-di-laravel-5.md-af4a039f.js", "css": [], "js": ["pages/post/mengenal-middleware-di-laravel-5.md-af4a039f.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/jabber-xmpp-menggunakan-nodejs.md": { "entry": "pages/post/jabber-xmpp-menggunakan-nodejs.md-75dad966.js", "css": [], "js": ["pages/post/jabber-xmpp-menggunakan-nodejs.md-75dad966.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/membangun-komunitas-surabayajs.md": { "entry": "pages/post/membangun-komunitas-surabayajs.md-07a34948.js", "css": [], "js": ["pages/post/membangun-komunitas-surabayajs.md-07a34948.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/menyematkan-data-pada-vue-slot.md": { "entry": "pages/post/menyematkan-data-pada-vue-slot.md-e4db2e25.js", "css": [], "js": ["pages/post/menyematkan-data-pada-vue-slot.md-e4db2e25.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/pengenalan-dasar-tentang-lumen.md": { "entry": "pages/post/pengenalan-dasar-tentang-lumen.md-86da0a3c.js", "css": [], "js": ["pages/post/pengenalan-dasar-tentang-lumen.md-86da0a3c.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/groupby-array-pada-javascript.md": { "entry": "pages/post/groupby-array-pada-javascript.md-8f826355.js", "css": [], "js": ["pages/post/groupby-array-pada-javascript.md-8f826355.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/manfaat-dari-berpikir-negatif.md": { "entry": "pages/post/manfaat-dari-berpikir-negatif.md-31c1a6f3.js", "css": [], "js": ["pages/post/manfaat-dari-berpikir-negatif.md-31c1a6f3.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/how-to-setup-my-personal-vim.md": { "entry": "pages/post/how-to-setup-my-personal-vim.md-4eabc038.js", "css": [], "js": ["pages/post/how-to-setup-my-personal-vim.md-4eabc038.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/konfigurasi-dasar-laravel-5.md": { "entry": "pages/post/konfigurasi-dasar-laravel-5.md-17b22e99.js", "css": [], "js": ["pages/post/konfigurasi-dasar-laravel-5.md-17b22e99.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/struktur-folder-laravel-55.md": { "entry": "pages/post/struktur-folder-laravel-55.md-ee4d21c8.js", "css": [], "js": ["pages/post/struktur-folder-laravel-55.md-ee4d21c8.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/goodbye-mobx-welcome-remx.md": { "entry": "pages/post/goodbye-mobx-welcome-remx.md-87e7d362.js", "css": [], "js": ["pages/post/goodbye-mobx-welcome-remx.md-87e7d362.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/surabayajs-meetup-perdana.md": { "entry": "pages/post/surabayajs-meetup-perdana.md-5eaa90e5.js", "css": [], "js": ["pages/post/surabayajs-meetup-perdana.md-5eaa90e5.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/surabayajs-meetup-ketiga.md": { "entry": "pages/post/surabayajs-meetup-ketiga.md-a46b1725.js", "css": [], "js": ["pages/post/surabayajs-meetup-ketiga.md-a46b1725.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/berkenalan-dengan-pugjs.md": { "entry": "pages/post/berkenalan-dengan-pugjs.md-7205e368.js", "css": [], "js": ["pages/post/berkenalan-dengan-pugjs.md-7205e368.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/berkenalan-dengan-vuejs.md": { "entry": "pages/post/berkenalan-dengan-vuejs.md-7e472eb3.js", "css": [], "js": ["pages/post/berkenalan-dengan-vuejs.md-7e472eb3.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/manfaat-menggunakan-pwa.md": { "entry": "pages/post/manfaat-menggunakan-pwa.md-be7a51f0.js", "css": [], "js": ["pages/post/manfaat-menggunakan-pwa.md-be7a51f0.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/surabayajs-meetup-kedua.md": { "entry": "pages/post/surabayajs-meetup-kedua.md-51bcdef5.js", "css": [], "js": ["pages/post/surabayajs-meetup-kedua.md-51bcdef5.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/vim-keyboard-cheatsheet.md": { "entry": "pages/post/vim-keyboard-cheatsheet.md-42256d4a.js", "css": [], "js": ["pages/post/vim-keyboard-cheatsheet.md-42256d4a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/momentjs-dengan-nuxtjs.md": { "entry": "pages/post/momentjs-dengan-nuxtjs.md-6ee17af2.js", "css": [], "js": ["pages/post/momentjs-dengan-nuxtjs.md-6ee17af2.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/setting-vhost-di-nginx.md": { "entry": "pages/post/setting-vhost-di-nginx.md-89c2ce00.js", "css": [], "js": ["pages/post/setting-vhost-di-nginx.md-89c2ce00.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/auth-module-di-nuxtjs.md": { "entry": "pages/post/auth-module-di-nuxtjs.md-dcc53774.js", "css": [], "js": ["pages/post/auth-module-di-nuxtjs.md-dcc53774.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/perubahan-jam-tidur.md": { "entry": "pages/post/perubahan-jam-tidur.md-b8ec8950.js", "css": [], "js": ["pages/post/perubahan-jam-tidur.md-b8ec8950.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/migrasi-ke-vim.md": { "entry": "pages/post/migrasi-ke-vim.md-ac13b93a.js", "css": [], "js": ["pages/post/migrasi-ke-vim.md-ac13b93a.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] }, "src/routes/post/spa-vs-mpa.md": { "entry": "pages/post/spa-vs-mpa.md-474117c7.js", "css": [], "js": ["pages/post/spa-vs-mpa.md-474117c7.js", "chunks/vendor-bbec6117.js", "chunks/MarkdownLayout-ec9820e6.js"], "styles": [] } };
async function load_component(file) {
  const { entry, css: css2, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css2.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options2, { prerender });
}
async function get() {
  const cwd = process.cwd();
  const POSTS_DIR = import_path.default.join(cwd, "./src/routes/post");
  const posts = import_fs.default.readdirSync(POSTS_DIR).map((fileName) => {
    const fileMd = import_fs.default.readFileSync(import_path.default.join(POSTS_DIR, fileName), "utf8");
    const { data, content: rawContent } = (0, import_gray_matter.default)(fileMd);
    const { title, date, slug, description, tags } = data;
    let excerpt = "";
    const printDate = (0, import_date_fns.format)(new Date(date), "yyyy-MM-dd");
    const distance = (0, import_date_fns.formatDistance)(new Date(date), new Date());
    return {
      title: title || slug,
      slug,
      date: printDate,
      formatDistance: distance,
      excerpt,
      description,
      tags
    };
  });
  const sortedPosts = () => {
    return posts.sort((a, b) => {
      const dateA = new Date(a.date);
      const dateB = new Date(b.date);
      if (dateA > dateB)
        return -1;
      if (dateA < dateB)
        return 1;
      return 0;
    });
  };
  return { body: JSON.stringify(sortedPosts()) };
}
var posts_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
var Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<header class="${"text-gray-600 body-font bg-yellow-200"}"><div class="${"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center"}"><a href="${"/"}" class="${"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0"}"><span class="${"ml-3 text-2xl"}">Nusendra</span></a>
		<nav class="${"md:ml-auto flex flex-wrap items-center text-base justify-center"}"><a href="${"/"}" class="${"mr-5 hover:text-gray-900"}">Home</a>
			<a href="${"/blog"}" class="${"mr-5 hover:text-gray-900"}">Blog</a>
			<a href="${"/course"}" class="${"mr-5 hover:text-gray-900"}">Course</a>
			</nav></div></header>`;
});
var Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<footer class="${"text-gray-600 body-font bg-yellow-300"}"><div class="${"container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col"}"><a href="${"/"}" class="${"flex title-font font-medium items-center md:justify-start justify-center text-gray-900"}"><span class="${"ml-3 text-xl"}">Nusendra.com</span></a>
		<p class="${"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4"}">\xA9 2021 - build with love by
			<a href="${"https://twitter.com/nusendra_"}" class="${"text-gray-600 ml-1"}" rel="${"noopener noreferrer"}" target="${"_blank"}">@nusendra_</a></p>
		<span class="${"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start"}"><a class="${"text-gray-500"}" href="${"https://www.facebook.com/andraeinstein"}" target="${"_blank"}"><svg fill="${"currentColor"}" stroke-linecap="${"round"}" stroke-linejoin="${"round"}" stroke-width="${"2"}" class="${"w-5 h-5"}" viewBox="${"0 0 24 24"}"><path d="${"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"}"></path></svg></a>
			<a class="${"ml-3 text-gray-500"}" href="${"https://twitter.com/nusendra_"}" target="${"_blank"}"><svg fill="${"currentColor"}" stroke-linecap="${"round"}" stroke-linejoin="${"round"}" stroke-width="${"2"}" class="${"w-5 h-5"}" viewBox="${"0 0 24 24"}"><path d="${"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"}"></path></svg></a>
			<a class="${"ml-3 text-gray-500"}" href="${"https://www.instagram.com/nusendra_/"}" target="${"_blank"}"><svg fill="${"none"}" stroke="${"currentColor"}" stroke-linecap="${"round"}" stroke-linejoin="${"round"}" stroke-width="${"2"}" class="${"w-5 h-5"}" viewBox="${"0 0 24 24"}"><rect width="${"20"}" height="${"20"}" x="${"2"}" y="${"2"}" rx="${"5"}" ry="${"5"}"></rect><path d="${"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01"}"></path></svg></a></span></div></footer>`;
});
var _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Header, "MyHeader").$$render($$result, {}, {}, {})}
${slots.default ? slots.default({}) : ``}
${validate_component(Footer, "MyFooter").$$render($$result, {}, {}, {})}`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load$2({ error: error2, status }) {
  return { props: { error: error2, status } };
}
var Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load: load$2
});
var YoutubeCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { imageSource } = $$props;
  let { imageAlt } = $$props;
  let { titleTag } = $$props;
  let { title } = $$props;
  let { totalVideos } = $$props;
  let { url } = $$props;
  if ($$props.imageSource === void 0 && $$bindings.imageSource && imageSource !== void 0)
    $$bindings.imageSource(imageSource);
  if ($$props.imageAlt === void 0 && $$bindings.imageAlt && imageAlt !== void 0)
    $$bindings.imageAlt(imageAlt);
  if ($$props.titleTag === void 0 && $$bindings.titleTag && titleTag !== void 0)
    $$bindings.titleTag(titleTag);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.totalVideos === void 0 && $$bindings.totalVideos && totalVideos !== void 0)
    $$bindings.totalVideos(totalVideos);
  if ($$props.url === void 0 && $$bindings.url && url !== void 0)
    $$bindings.url(url);
  return `<div class="${"xl:w-1/4 md:w-1/2 p-4"}"><div class="${"bg-gray-200 p-6 rounded-lg"}"><a${add_attribute("href", url, 0)} target="${"_blank"}"><img class="${"h-38 rounded w-full object-center mb-6"}"${add_attribute("src", imageSource, 0)}${add_attribute("alt", imageAlt, 0)}></a>
    <div class="${"flex justify-between mb-2"}"><h3 class="${"tracking-widest text-indigo-500 text-xs font-medium title-font"}">${escape(titleTag)}</h3>
      <span class="${"text-xs text-gray-900 font-medium title-font"}">${escape(totalVideos)} videos
      </span></div>
    <h2 class="${"text-lg text-gray-900 font-medium title-font"}"><strong>${escape(title)}</strong></h2></div></div>`;
});
var CourseList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"flex flex-wrap -m-4"}">${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJbbmFmN5ZMnkylQXp6mb7gP",
    imageSource: "https://i.ibb.co/tm5QJcr/VUE3-ADVANCE-1.png",
    imageAlt: "vue3 advance",
    titleTag: "Frontend, Vuejs",
    title: "Vue3 Tingkat Lanjut",
    totalVideos: "13"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJbn7ZDOUNbRN25obY4htSlB",
    imageSource: "https://i.ibb.co/v1x0J5R/VUE3-ADVANCE.png",
    imageAlt: "vue3 composition api",
    titleTag: "Frontend, Vuejs",
    title: "Vue3 Composition API",
    totalVideos: "13"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJbV2NGXpay7ulU6ybASzAlG",
    imageSource: "https://i.ibb.co/7JfFFRv/vue3-dasar.png",
    imageAlt: "vue3 dasar",
    titleTag: "Frontend, Vuejs",
    title: "Vue3 Tingkat Dasar",
    totalVideos: "30"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJbZAXLrFm7ncMrXBP6fcb0O",
    imageSource: "https://i.ibb.co/n0xjW1L/ts-design-pattern.png",
    imageAlt: "typescript design pattern",
    titleTag: "Backend, TypeScript",
    title: "TypeScript Design Pattern",
    totalVideos: "18"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJZRieebeIp0xj1NeC5L633Y",
    imageSource: "https://i.ibb.co/brf0Cpt/ts-oop.png",
    imageAlt: "typescript oop",
    titleTag: "Backend, TypeScript",
    title: "TypeScript OOP",
    totalVideos: "30"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJZHhImGvDpnp0P725Ykx4Qt",
    imageSource: "https://i.ibb.co/LRqWHtz/ts-express.png",
    imageAlt: "typescript expressjs",
    titleTag: "Backend, TypeScript",
    title: "TypeScript & ExpressJS",
    totalVideos: "25"
  }, {}, {})}
	${validate_component(YoutubeCard, "YoutubeCard").$$render($$result, {
    url: "https://www.youtube.com/playlist?list=PLnQvfeVegcJbjCnML6FdusK-rl-oDRMXJ",
    imageSource: "https://i.ibb.co/YZLBtYT/ts-dasar.png",
    imageAlt: "typescript dasar",
    titleTag: "Backend, TypeScript",
    title: "TypeScript Tingkat Dasar",
    totalVideos: "25"
  }, {}, {})}</div>`;
});
var BlogList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { description } = $$props;
  let { title } = $$props;
  let { date } = $$props;
  let { tags } = $$props;
  let { slug } = $$props;
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  if ($$props.tags === void 0 && $$bindings.tags && tags !== void 0)
    $$bindings.tags(tags);
  if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0)
    $$bindings.slug(slug);
  return `<div class="${"py-8 flex flex-wrap md:flex-nowrap"}"><div class="${"md:w-64 md:mb-0 mb-6 flex-shrink-0 flex flex-col"}"><span class="${"font-semibold title-font text-gray-700"}">${escape(tags)}</span>
    <span class="${"mt-1 text-gray-500 text-sm"}">${escape(date)}</span></div>
  <div class="${"md:flex-grow"}"><h2 class="${"text-2xl font-medium text-gray-900 title-font mb-2"}"><a href="${"/post/" + escape(slug)}">${escape(title)}</a></h2>
    <p class="${"leading-relaxed"}">${escape(description)}</p></div></div>`;
});
async function load$1({ page, fetch: fetch2 }) {
  const url = `posts.json`;
  const res = await fetch2(url);
  const posts = await res.json();
  return { props: { posts: posts.slice(0, 3) } };
}
var Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { posts } = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  return `<section class="${"text-gray-600 body-font bg-gray-100"}"><div class="${"container px-5 py-24 mx-auto"}"><div class="${"flex flex-wrap w-full mb-20"}"><div class="${"lg:w-1/2 w-full mb-6 lg:mb-0"}"><h1 class="${"sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900"}">Latest Youtube Playlists
				</h1></div>
			<p class="${"lg:w-1/2 w-full leading-relaxed text-gray-500"}">Saya membuat playlist youtube yang membahas mengenai programming mulai
				dari dasar hingga bisa diimplementasikan ke dunia nyata. Video yang saya
				buat adalah seputar JavaScript, TypeScript, Design Pattern, dan Vuejs.
				Semoga playlist dibawah ini berguna untuk teman teman semuanya.
			</p></div>
		${validate_component(CourseList, "CourseList").$$render($$result, {}, {}, {})}</div></section>

<section class="${"text-gray-600 body-font overflow-hidden"}"><div class="${"container px-5 py-24 mx-auto"}"><div class="${"-my-8 divide-y-2 divide-gray-100"}"><h1 class="${"sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900"}">Latest Blog Posts
			</h1>
			${each(posts, (item, i) => `${validate_component(BlogList, "BlogList").$$render($$result, {
    slug: item.slug,
    tags: item.tags.join(", "),
    date: item.formatDistance,
    title: item.title,
    description: item.description
  }, {}, {})}`)}</div></div></section>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes,
  load: load$1
});
var Course = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<section class="${"text-gray-600 body-font bg-gray-100"}"><div class="${"container px-5 py-24 mx-auto"}">${validate_component(CourseList, "CourseList").$$render($$result, {}, {}, {})}</div></section>`;
});
var course = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Course
});
async function load({ page, fetch: fetch2 }) {
  const url = `/posts.json`;
  const res = await fetch2(url);
  const posts = await res.json();
  return { props: { posts } };
}
var Blog = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { posts } = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  return `<section class="${"text-gray-600 body-font overflow-hidden"}"><div class="${"container px-5 py-24 mx-auto"}"><div class="${"-my-8 divide-y-2 divide-gray-100"}">${each(posts, (item, i) => `${validate_component(BlogList, "BlogList").$$render($$result, {
    slug: item.slug,
    tags: item.tags.join(", "),
    date: item.formatDistance,
    title: item.title,
    description: item.description
  }, {}, {})}`)}</div></div></section>`;
});
var blog = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Blog,
  load
});
var MarkdownLayout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { title } = $$props;
  let { date } = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  return `${$$result.head += `${$$result.title = `<title>${escape(title)}</title>`, ""}<meta property="${"og:title"}"${add_attribute("content", title, 0)} data-svelte="svelte-1fi5dar">`, ""}

<div class="${"container px-5 py-24 mx-auto flex flex-wrap flex-col"}"><article class="${"prose prose-lg max-w-none"}"><div class="${"lg:w-2/3 mx-auto leading-relaxed text-base"}"><h1 class="${"sm:text-xl text-xl font-medium title-font text-gray-900"}">${escape(title)}</h1>
			<h4 class="${"text-sm"}">Published at ${escape((0, import_date_fns.format)(new Date(date), "yyyy-MM-dd"))}</h4>
			<hr>
			${slots.default ? slots.default({}) : ``}</div></article></div>`;
});
var metadata$19 = {
  "draft": false,
  "title": "Optimasi Aset Berbasis Teks untuk Performa Web dengan GZIP Nginx",
  "date": "2018-12-26T18:11:40.000Z",
  "tags": ["devops"],
  "description": "Menggunakan fitur GZIP pada Nginx untuk meningkatkan kecepatan load suatu website dengan memperkecil bundle size aset berbasis teks.",
  "slug": "Optimasi Aset Berbasis Teks untuk Performa Web dengan GZIP Nginx"
};
var Optimasi_aset_berbasis_teks_untuk_performa_web_dengan_gzip_nginx = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$19), {}, {
    default: () => `<p>Pada suatu halaman website, ada jenis file text yang sering bikin gendut halaman web, tentunya kedua hal ini juga bisa memperlambat loading web, kedua file ini adalah CSS dan Javascript. Ada banyak sekali cara untuk mengoptimalkan javascript dan css, salah satu nya ada GZIP yang akan kita bahas kali ini. Sederhananya, GZIP ini membantu untuk mengkompresi file berbasis text menjadi bundle yang lebih kecil, sehingga browser bisa lebih cepat dalam load website nya. Sama seperti beberapa file yang di kompress menjadi .rar atau .zip yang ukurannya jadi lebih kecil.</p>
<p>Nah kali ini kita akan coba mengoptimalkan aset js, css, dll yang berbasis teks dengan cara mengecilkan ukuran mereka menggunakan GZIP di Nginx. Sebelum kita implementasi, baiknya kita lihat dulu sebuah web yang di load tanpa pakai GZIP.</p>
<p><img src="${"https://cdn.staticaly.com/img/farm5.staticflickr.com/4850/46419296102_2856651815_b.jpg"}" alt="${"aset sebelum gzip"}"></p>
<p>Berikut ini hasil dari Lighthouse</p>
<p><img src="${"https://cdn.staticaly.com/img/farm5.staticflickr.com/4850/44653374610_2d5778dd04_b.jpg"}" alt="${"lighthouse sebelum gzip"}"></p>
<h2>Enable GZIP di Nginx</h2>
<p>Buka file nginx.conf di folder /etc/nginx/ kemudian pada block http edit / tambahkan beberapa baris kode berikut ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">gzip on;

gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah selesai, restart Nginx nya dengan perintah</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo service nginx restart</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian coba hard reload web nya dan tes kembali menggunakan Light House. Berikut ini hasil yang saya dapatkan</p>
<p><img src="${"https://cdn.staticaly.com/img/farm5.staticflickr.com/4840/45746737674_f89ac49bb5_b.jpg"}" alt="${"aset setelah gzip"}"></p>
<p>Test Light house setelah GZIP</p>
<p><img src="${"https://cdn.staticaly.com/img/farm5.staticflickr.com/4878/44653374410_7c8513b196_b.jpg"}" alt="${"aset setelah gzip"}"></p>
<p>Setelah setting gzip di nginx tadi, kita mendapati bahwa file yang di load oleh browser menjadi lebih kecil, sehingga load web jadi lebih cepat. Tapi ingat, optimasi web tidak hanya berhenti sampai disini. Masih banyak cara lain yang bisa ditempuh untuk mendapatkan hasil (web optimal) yang lebih baik lagi.</p>
<hr>
<p>Sekian postingan singkat dan ringan dari saya, semoga bermanfaat bagi teman - teman sekalian.</p>`
  })}`;
});
var optimasiAsetBerbasisTeksUntukPerformaWebDenganGzipNginx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Optimasi_aset_berbasis_teks_untuk_performa_web_dengan_gzip_nginx,
  metadata: metadata$19
});
var metadata$18 = {
  "draft": false,
  "title": "Laravel Realtime Notification dengan Socket.io dan Nuxtjs - Part 1",
  "date": "2018-11-26T20:25:55.000Z",
  "tags": ["laravel", "php", "javascript", "nuxtjs"],
  "description": "Membuat notifikasi dengan Laravel Broadcast Notifications dan Socket.io",
  "slug": "laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1"
};
var Laravel_realtime_notification_dengan_socketio_dan_nuxtjs_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$18), {}, {
    default: () => `<p>Mau bahas Laravel lagi, mumpung ada project yang balik pake Laravel lagi. Kali ini mau bahas Laravel broadcast notification menggunakan socket.io. Sebenernya bingung mau bikin judul apa, karena nanti insya allah bakal lumayan panjang, bahkan judul segitu pun kayaknya belum cukup untuk menampung apa yang mau kita bahas kali ini. Yak secara singkat kita akan belajar bikin sebuah sistem notifikasi menggunakan Laravel, gak berhenti sampai disitu kita akan coba pakai socket.io untuk server websocket nya (engga pakai Pusher, soalnya ada limitasi) yang berfungsi untuk mengirimkan sebuah notifikasi jika ada event yang sedang / telah dilakukan. Lebih jauh lagi kita akan coba terapkan socket listener nya di Nuxtjs. Oh iya untuk channel nya kita pake Private Channel ya, karena ini kan notifikasi, jadi ga semua orang bisa dapat notifikasi nya.</p>
<p>Baik, kita akan coba ngurusin Laravel (backend) nya dulu, pertama yang harus kita persiapkan adalah :</p>
<ol><li>Install Laravel</li>
<li>Install Redis server</li>
<li>Project Nuxtjs (Boleh pakai Vuejs atau framework JS yang lain, ga masalah)</li></ol>
<p>Package / library yang akan kita pakai adalah :</p>
<ol><li>Socket.io</li>
<li>Laravel Echo</li>
<li>laravel-echo-server</li>
<li>Push.js (Optional)</li></ol>
<p>Oke, pertama kita buat dulu konsep yang akan kita jalankan nanti.</p>
<p>User Event  ---&gt;  Save Database ---&gt; Socket server ---&gt; Client.</p>
<p>Sederhana nya seperti itu, detail nya begini. User pertama melakukan suatu aktifitas / event. Kemudian aktifitas itu di simpan ke dalam database dengan table notifications (tujuannya agar user yang menerima notifikasi bisa melihat list notifikasi nya), setelah itu event tersebut akan di tembak ke server socket (socket.io) yang kemudian diteruskan ke client (Nuxtjs). Sehingga di frontend, user B bisa mendapat notifikasi bahwa (misalnya) si user A telah menambahkan data pesanan, realtime tanpa refresh halaman. Apabali suatu saat si user B pengen liat daftar notifikasi nya, maka dari backend akan mengirim data nya yang diambil dari table notifications.</p>
<p>Baik langsung kita eksekusi\u2026</p>
<h2>Install Redis, Predis dan Laravel Echo Server</h2>
<p>Pertama silakan install redis nya dulu</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo apt install redis-server
$ redis-cli --version</code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau udah muncul versi nya, berarti udah sukses install redis. Setelah itu masuk ke project laravel dan install package laravel echo server dan predis</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn global add laravel-echo-server
$ composer require predis/predis</code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau udah sukses, lanjut kita inisiasi server socket nya pake Laravel</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ laravel-echo-server init</code>`}<!-- HTML_TAG_END --></pre>
<p>Settingan nya sesuaikan kebutuhan ya. Kemudian coba jalankan server laravel-echo nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ laravel-echo-server start</code>`}<!-- HTML_TAG_END --></pre>
<h2>Konfigurasi Laravel</h2>
<p>Untuk socket server nya udah beres nih, sekarang kita setting di sisi backend nya. Pertama buka file .env nya dan edit seperti dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">BROADCAST_DRIVER=redis</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian buka file <code>config/app.php</code> kemudian uncomment ini <code>App\\Providers\\BroadcastServiceProvider::class,</code></p>
<p>Then buka file <code>app/Providers/BroadcastServiceProvider.php</code> kemudian edit seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Broadcast</span><span class="token operator">::</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'middleware'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'auth:api'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Karena backend kita hanya untuk API, maka kita wajib setting seperti diatas.</p>
<h2>Laravel Broadcast Notification</h2>
<p>Pertama kita bikin table notifications nya dulu untuk nampung data notifikasi.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php artisan notifications:table
$ php artisan migrate</code>`}<!-- HTML_TAG_END --></pre>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php artisan make:notification Notifikasi</code>`}<!-- HTML_TAG_END --></pre>
<p>Buka file <code>app/notifications/Notifikasi.php</code> Tambahkan seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation"></span>Notifications</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Notifications<span class="token punctuation"></span>Notification</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Notifications<span class="token punctuation"></span>Messages<span class="token punctuation"></span>BroadcastMessage</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian kita set global variable nya</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">protected</span> <span class="token variable">$event</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$event</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">event</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">via</span><span class="token punctuation">(</span><span class="token variable">$notifiable</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'broadcast'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">toDatabase</span><span class="token punctuation">(</span><span class="token variable">$notifiable</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">'event'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">event</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">toBroadcast</span><span class="token punctuation">(</span><span class="token variable">$notifiable</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BroadcastMessage</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">'event'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">event</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sampai sini udah nih settingan nya, tinggal kita coba jalanin aja. Bikin route dulu di api.php dan controller nya.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token comment">// api.php</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'test-broadcast-notification'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'NotifikasiController@send'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// NotifikasiController.php</span>
<span class="token keyword">use</span> <span class="token package">Notification</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation"></span>User</span><span class="token punctuation">;</span>

<span class="token operator">...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$event</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Pembeli telah menambahkan order baru'</span><span class="token punctuation">;</span>
    <span class="token class-name static-context">Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation"></span>App<span class="token punctuation"></span>Notifications<span class="token punctuation"></span>Notifikasi</span><span class="token punctuation">(</span><span class="token variable">$event</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasan nya, pertama kita set dulu route untuk notifikasi kita, jika sudah pada controller yang telah ditentukan diatas, kita import Notification dan model user nya. Kemudian pada method send, kita ambil user yang pertama untuk target yang akan mendapat notifikasi, dan kita tentukan juga event apa yang akan kita simpan (atau kirim). Setelah udah di siapkan variablenya, kita bisa mulai membuat sebuat notifikasi seperti pada akhir baris kode tersebut.</p>
<p>Nah sekarang coba akses route, jika ga ada error, coba buka MySQL GUI kalian dan lihat pada table notifications. Jika disana sudah terdapat data yang sesuai dengan pesan notifikasi diatas, berarti kita sudah berhasil mengimplementasikan membuat notification dengan Laravel</p>
<hr>
<p>Pada part pertama ini kita hanya membuat sistem notifikasi saja, Insya allah pada part 2 kita akan lanjut lagi bahas bagaimana cara mengirim notifikasi dari laravel backend ke frontend Nuxtjs secara realtime. Oh iya, postingan ini bersifat catatan pribadi sih, kalau ada temen temen yang merasa terbantu, ya syukur alhamdulillah. Terima kasih udah mampir :D</p>`
  })}`;
});
var laravelRealtimeNotificationDenganSocketioDanNuxtjsPart1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Laravel_realtime_notification_dengan_socketio_dan_nuxtjs_part_1,
  metadata: metadata$18
});
var metadata$17 = {
  "draft": false,
  "title": "Laravel Realtime Notification dengan Socket.io dan Nuxtjs - Part 2",
  "date": "2018-11-30T22:37:07.000Z",
  "tags": ["laravel", "php", "javascript", "nuxtjs"],
  "description": "Realtime notification menggunakan Laravel Echo di project Nuxt.js",
  "slug": "laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2"
};
var Laravel_realtime_notification_dengan_socketio_dan_nuxtjs_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$17), {}, {
    default: () => `<p>Melanjutkan dari postingan yang <a href="${"https://nusendra.com/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1"}" rel="${"nofollow"}">pertama</a> dengan judul yang sama, yakni Laravel realtime notification dengan socket.io. Pada postingan kali ini kita akan coba implementasi Laravel echo kedalam Nuxtjs. Pastikan kalian udah baca part pertama nya ya, karena kali ini kita akan coba menerapkan notifikasi di Nuxtjs menggunakan socket.io dengan private channel.</p>
<h2>Install Library</h2>
<p>Langkah pertama yang patut kita lakukan adalah memasang library Laravel Echo, socket.io-client dan Push.js (yang ini optional, boleh pakai atau engga, ga ada masalah). Langsung aja yok install, masuk ke direktori project Nuxt kalian kemudian buka terminal dan ketikkan dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add laravel-echo socket.io-client push.js</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah terinstall semua, yok kita coba setting satu - persatu library nya.</p>
<p>Buat file laravel-echo.js dulu di foler plugins, kemudian isi file nya seperti berikut ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Echo <span class="token keyword">from</span> <span class="token string">'laravel-echo'</span>

window<span class="token punctuation">.</span>io <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'socket.io-client'</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span>Echo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Echo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  broadcaster<span class="token operator">:</span> <span class="token string">'socket.io'</span><span class="token punctuation">,</span>
  host<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname <span class="token operator">+</span> <span class="token string">':6001'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>untuk <code>window.location.hostname</code> bisa kalian ganti dengan url server socket kalian.</p>
<p>Kemudian pasangkan plugin nya ke dalam file nuxt.config.js</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
  '<span class="token operator">~</span><span class="token operator">/</span>plugins<span class="token operator">/</span>laravel<span class="token operator">-</span>echo
<span class="token punctuation">]</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah plugin udah terpasang, sekarang kita siap untuk pake echo nya. Sebagai contoh saja, mari kita buka file default.vue di folder layouts. Terapkan script dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  window<span class="token punctuation">.</span>Echo<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>options<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>$storage<span class="token punctuation">.</span>_state<span class="token punctuation">[</span><span class="token string">'_token.local'</span><span class="token punctuation">]</span>
  window<span class="token punctuation">.</span>Echo<span class="token punctuation">.</span><span class="token function">private</span><span class="token punctuation">(</span><span class="token string">'App.User.'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span>
    <span class="token parameter">notif</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>notif<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pertama mari kita definisikan auth header nya dulu. Jika kalian menggunakan auth module dari nuxt, maka untuk mengeset auth headers nya seperti kodingan diatas. Jika engga pakai auth module, misalkan auth nya ada di localstorage, tinggal ambil aja trus taruh situ. Setelah itu diikuti dengan listening event dari notification nya laravel. Sebagai testing awal, bisa pakai console.log itu untuk pengecekan apakah ketika backend ngetrigger notification console.log nya bisa ngeluarin response.</p>
<p>Jika console.log udah bisa mendapatkan response, berarti langkah kita udah berhasil.</p>
<h2>Menampilkan Notif dengan Push.js (Optional)</h2>
<p>Bagi yang belum tau apa itu push.js, silakan mampir ke web official nya disini. Singkat nya, push.js ini bisa ngebantu kita untuk menampilkan notifikasi secara native browser. Contohnya sebagai berikut, buka lagi file default.vue nya, kemudian ubah hingga jadi begini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Push <span class="token keyword">from</span> <span class="token string">'push.js'</span>

<span class="token operator">...</span>

<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  window<span class="token punctuation">.</span>Echo<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>options<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>$storage<span class="token punctuation">.</span>_state<span class="token punctuation">[</span><span class="token string">'_token.local'</span><span class="token punctuation">]</span>
  window<span class="token punctuation">.</span>Echo<span class="token punctuation">.</span><span class="token function">private</span><span class="token punctuation">(</span><span class="token string">'App.User.'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span>
    <span class="token parameter">notif</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      Push<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">'Judul Notif'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        body<span class="token operator">:</span> notif<span class="token punctuation">,</span>
        <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah sekian postingan hari ini, pada bagian kedua ini terbilang mudah sih, karena kita tinggal mengonsumsi notifikasi nya saja. Sebagai catatan singkat, didalam project Nuxt ini saya memakai auth module nya nuxt. Semoga bermanfaat bagi temen temen yang udah baca dan mampir.</p>`
  })}`;
});
var laravelRealtimeNotificationDenganSocketioDanNuxtjsPart2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Laravel_realtime_notification_dengan_socketio_dan_nuxtjs_part_2,
  metadata: metadata$17
});
var metadata$16 = {
  "title": "Mengorganisir API Call di Nuxtjs dengan Repository Pattern",
  "date": "2020-02-28T22:24:00.000Z",
  "description": "Mengorganisir dan membuat abstraksi pada setiap fungsi API call kita di Nuxtjs dengan Repository Pattern",
  "tags": ["vuejs", "nuxtjs", "javascript'"],
  "draft": false,
  "slug": "mengorganisir-api-call-di-nuxtjs-dengan-repository-pattern"
};
var Mengorganisir_api_call_di_nuxtjs_dengan_repository_pattern = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$16), {}, {
    default: () => `<p>Jika kalian pernah membaca tentang beberapa design pattern, maka kalian akan sering menjumpai repository pattern. Yak, repository pattern adalah sebuah pola / pendekatan untuk memisahkan beberapa logic menjadi suatu fungsi individu (<em>separation of concern</em>), biasanya pattern ini dipakai untuk memisahkan proses antara logic dengan persistensi data. Contoh gampang nya adalah seperti berikut ini</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// File Controller</span>

<span class="token keyword">const</span> <span class="token function-variable function">store</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">payload</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// insert logic</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">payload</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// update logic</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kodingan diatas adalah salah satu contoh proses melakukan manipulasi data yang dilakukan di file controller. Gak ada yang salah sebenernya, namun jika suatu saat aplikasi yang kita bangun semakin besar dan pada saat itu terdapat beberapa perubahan yang harus dilakukan ketika akan <em>insert</em> atau <em>update</em>, maka kita harus merubah semua proses CRUD di seluruh controller kita.</p>
<p>Nah dengan adanya repository pattern, maka kita simpan logic persistensi data nya kedalam file khusus yang berfungsi untuk melakukan query / berhubungan langsung dengan database. Sehingga jika suatu saat terdapat perubahan ketika akan melakukan CRUD, kita hanya perlu merubah file khusus tersebut saja (repository) tanpa harus merubah keseluruhan file controller.</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// File Controller</span>
<span class="token keyword">const</span> <span class="token function-variable function">store</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">payload</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">await</span> UserRepository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// create logic</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token comment">// File Repository</span>
<span class="token keyword">const</span> <span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">payload</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// create logic</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Gimana? Masih bingung? Rasain haha.. Ya intinya gitu lah ya, kita misahin logic antara business logic dan persistence logic. Sama seperti namanya, controller hanya sebagai pelayan (yang menerima dan menyampaikan request ke client), sedangkan file repository sebagai koki nya (baca lagi <em>separation of concern</em>).</p>
<p>Nah kasus tersebut terjadi di backend, lalu bagaimana dengan di bagian frontend? Nah dalam kasus frontend juga sama, pada artikel kali ini kita bahas bagaimana mengabstraksi pemanggilan API kedalam berkas khusus, sehingga ketika nanti ada perubahan dalam hal pemanggilan API, kita hanya mengubahnya di satu file saja.</p>
<h2>Getting Started</h2>
<p>Sebelum kita mulai, saya berekspektasi bahwa pembaca sudah pernah pakai Nuxtjs sebelumnya, jadi ga perlu dijelasin bagaimana setup awal dari framework ini. Pertama yang perlu dilakukan adalah install plugin axios milik Nuxt, yakni <a href="${"https://axios.nuxtjs.org/"}" rel="${"nofollow"}">Axios Module</a></p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add @nuxtjs/axios</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian setup di file <strong>nuxt.config.js</strong></p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// nuxt.config.js</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  modules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@nuxtjs/axios'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  axios<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// proxyHeaders: false</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu bikin sebuah file repository untuk menampung logic api call kita, misalkan kita taruh di <strong>api/repository.js</strong>.</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// api/repository.js</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token parameter">$axios</span> <span class="token operator">=></span> <span class="token parameter">resource</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> $axios<span class="token punctuation">.</span><span class="token function">$get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>resource<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

  <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> $axios<span class="token punctuation">.</span><span class="token function">$get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>resource<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

  <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> $axios<span class="token punctuation">.</span><span class="token function">$post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>resource<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> $axios<span class="token punctuation">.</span><span class="token function">$post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>resource<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

  <span class="token keyword">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> $axios<span class="token punctuation">.</span>$<span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>resource<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>File logic repository sudah beres, sekarang kita inject axios nya kedalam repository tersebut dengan melalui plugin.</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// plugins/Repository.js</span>

<span class="token keyword">import</span> repository <span class="token keyword">from</span> <span class="token string">'~/api/repository'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> inject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> repositoryWithAxios <span class="token operator">=</span> <span class="token function">repository</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>$axios<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">'userRepository'</span><span class="token punctuation">,</span> <span class="token function">repositoryWithAxios</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian kita daftarkan plugin tersebut kedalam file nuxt.config.js</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// nuxt.config.js</span>

plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'~/plugins/Repository'</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasannya adalah kita tidak bisa memanggil axios yang ada di dalam context nuxt kedalam external js file (kalau kita import axios kedalam file tersebut, itu sudah beda bahasan lagi). Maka yang perlu kita lakukan adalah meng-inject <strong>\\$axios</strong> kedalam file external js tersebut.</p>
<p>Lihat perbedaan antara sebelum memakai repository dan setelahnya.</p>
<h3>Sebelum</h3>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js">\\ Dalam vue file

methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<h3>Setelah</h3>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js">\\ Dalam vue file

methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$userRepository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Maka jika suatu ketika aplikasi kita semakin besar, dan terdapat perubahan yang mengharuskan kita memodifikasi api call, maka kita hanya perlu melakukan perubahan di file <strong>api/repository.js</strong> saja <em>instead of</em> melakukan perubahan di semua file vue.</p>
<p>Sekian artikel singkat nya, semoga bermanfaat bagi teman teman semua nya :)</p>`
  })}`;
});
var mengorganisirApiCallDiNuxtjsDenganRepositoryPattern = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Mengorganisir_api_call_di_nuxtjs_dengan_repository_pattern,
  metadata: metadata$16
});
var metadata$15 = {
  "title": "Yank Text from Different Instances of Vim",
  "date": "2019-09-25T10:20:00.000Z",
  "description": "How to copy the text from different instances of vim, seems like copy from terminal one to another",
  "tags": ["snippet", "vim"],
  "draft": false,
  "slug": "yank-or-copy-text-from-different-instances-of-vim"
};
var How_to_yank_or_copy_text_from_different_instances_of_vim = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$15), {}, {
    default: () => `<p>For vscode user or other text editor (except vim), this is not a big problem they just have to copy it and then paste it to the other text editor. But for vim users, this might be a problem. Because, in Vim we can\u2019t just copy (yank) from one terminal (instance 1) to another (instance 2). So, how to do this?</p>
<p>First install Gvim  (google it, u can do this right?). And then go to the first terminal / vim, then type this</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&quot;+yy</code>`}<!-- HTML_TAG_END --></pre>
<p>The command above will copy / yank the text to the global cut buffer, then paste it to the second terminal / vim</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&quot;+p</code>`}<!-- HTML_TAG_END --></pre>
<p>as simple as that, sorry this blog post is only for my personal preference :D, so i write it down straight forward. Thanks for reading, hope this helps u out.</p>`
  })}`;
});
var howToYankOrCopyTextFromDifferentInstancesOfVim = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": How_to_yank_or_copy_text_from_different_instances_of_vim,
  metadata: metadata$15
});
var metadata$14 = {
  "draft": false,
  "title": "Terselamatkan oleh Startup Script di Google Cloud Engine",
  "date": "2019-01-09T13:48:58.000Z",
  "tags": ["tips", "opini"],
  "description": "Lupa membuka akses ssh / port 22 di ufw bisa diatasi dengan fitur Startup Script di metadata GCE",
  "slug": "terselamatkan-oleh-startup-script-di-google-cloud-engine"
};
var Terselamatkan_oleh_startup_script_di_google_cloud_engine = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$14), {}, {
    default: () => `<p>Manusia tempat nya salah dan lupa, gak ada orang yang ga pernah lupa, adanya ya cuma keseringan lupa atau jarang mengalami kelupaan? Kalau saya termasuk yang pertama, sering lupa haha. Kelupaan ini terjadi ketika saya ingin membuka port tertentu di VPS Google Cloud melalui UFW.</p>
<p>Oh iya bagi yang belum tau apa itu ufw, ufw adalah sebuah sebuah fitur di Linux yang berfungsi untuk mengatur firewall. Nah biasanya ufw ini dipakai untuk ngebatasin port port mana saja yang boleh diakses. Oke lanjut ke cerita, Jadi saya install tuh ufw untuk allow beberapa port di vps. Setelah berhasil dan selesai semua, saya logout dari ssh. Kemudian ketika ingin login kembali, muncul informasi bahwa saya tidak diperbolehkan untuk login ke ssh karena port nya engga terbuka (ternyata saya lupa untuk allow port 22 di ufw nya haha).</p>
<p>Waduh, gimana cara allow port 22 jika kita ga bisa masuk ssh. Setelah ngalor ngidul cari solusi, ternyata dapat nih. Caranya kita harus mainin startup script di fitur metadata nya GCE.</p>
<h2>How To ??</h2>
<ol><li>Login ke Console Google Cloud kalian, kemudian cari fitur \u201Cmetadata\u201D, temen temen bisa cari dengan mengetikkan metadata di kolom pencarian, atau ke menu Compute Engine -&gt; metadata</li>
<li>Kemudian buat metadata baru, dan input kolom key nya dengan nama metadata nya, misalkan \u201Cssh\u201D</li>
<li>Untuk value nya isikan seperti berikut ini</li></ol>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">#! /bin/bash
sudo ufw allow 22/tcp</code>`}<!-- HTML_TAG_END --></pre>
<ol start="${"4"}"><li>Simpan</li>
<li>Stop instance nya, kemudian start kembali</li></ol>
<p>Penjelasannya, ketika instance VM nya dihidupkan, maka VM akan menjalankan script diatas, yaitu menambahkan / membuka port 22 di ufw. Jadi ketika VM sudah jalan, kita bisa login ke ssh dengan aman dan nyaman :D.</p>
<hr>
<p>Sekian postingan nya, cuma catatan kecil saja haha. Sebagai pengingat kalau suatu hari ada kejadian atau kelupaan seperti ini lagi. Moga bermanfaat bagi yang baca..</p>`
  })}`;
});
var terselamatkanOlehStartupScriptDiGoogleCloudEngine = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Terselamatkan_oleh_startup_script_di_google_cloud_engine,
  metadata: metadata$14
});
var metadata$13 = {
  "title": "Menentukan Teknologi Sebelum Membuat Project",
  "date": "2018-01-20T14:59:09.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "Banyak programmer yang salah dalam menentukan teknologi sebelum membuat project, hal ini bisa mengakibatkan proses development kita jadi terganggu, bahkan bisa bikin pindah jalur. Duhh...",
  "slug": "menentukan-teknologi-yang-tepat-sebelum-membuat-project"
};
var Menentukan_teknologi_yang_tepat_sebelum_membuat_project = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$13), {}, {
    default: () => `<p>Sebelum mulai melangkah untuk membuat project baru, alangkah bijaknya jika <strong>kita menentukan teknologi sebelum membuat project</strong>. Kenapa kita perlu memikirkan teknologi apa yang akan kita pakai untuk project kita, karena jika kita salah pilih maka ditengah tengah proses development, kita akan merasa tersesat dan tidak bisa mengembangkan aplikasi secara maksimal. Misalnya kita pengen bikin aplikasi internal untuk kantor, kemudian kita asal aja pake C# untuk aplikasi desktop. Eh ternyata di kemudian hari, si bos minta dibuatin aplikasi mobile nya, nah loh ujung ujungnya kita bakal create new project untuk handle API nya. Jadi nya kita kerja dua kali, huuhuuhuu\u2026</p>
<h2>BERPIKIR PANJANG DEMI JANGKA PANJANG</h2>
<p>Maksudnya disini, sebelum kita menentukan sebuah teknologi yang akan membantu kita untuk membuat sebuah apps, kita harus mengerti dulu scope apps kita nanti seperti apa. Misalkan app kita nanti hanya untuk client dan berjalan di desktop windows, dan jangka panjang tidak ada pengembangan lagi. Maka tidak masalah jika memakai C# atau java (misalnya). Misalkan lagi kita pengen bikin app yang nanti nya bisa dibuka pake mobile, di web juga bisa. Maka kita perlu menentukan teknologi backend dan frontend apa yang cocok untuk apps kita. </p>
<p>Jangan sampai kita asal asalan bikin app tanpa berpikir panjang nanti kedepannya seperti apa, karena di tengah jalan pasti mengalami kesulitan jika salah menentukan teknologi. Contoh gampang nya, seorang mahasiswa kalo salah ambil jurusan, mayoritas membutuhkan waktu yang lama untuk lulus. Bahkan ada yang sampai pindah jurusan. Begitu juga dengan apps kita, jangan sampai kita salah pilih teknologi, yang nanti ditengah jalan malah beralih ke teknologi lain, wasting time bro.</p>
<blockquote><p>Nah karena kita udah ngerti apa yang harus dilakukan sebelum bikin apps, sekarang mari kita pilih pilih teknologi yang cocok. FYI sebelum lanjut, postingan ini opini saya pribadi dan gak bisa di generalisasi.</p></blockquote>
<h2>DESKTOP, MOBILE, ATAU WEB APPS ?</h2>
<p>Jika jangka panjang bisa dipastikan hanya butuh desktop app, maka yang perlu temen temen perhatikan selanjutnya adalah apakah nantinya app ini multi platform atau hanya berjalan di OS Windows. Ingat, kita perlu memikirkan tujuan kedepan, karena jaman now apps berbasis desktop sudah mulai ditinggalkan. Di Windows, kita bisa pakai C#.NET untuk app yang hanya bisa berjalan di sistem operasi Windows saja. Jika app nya bisa jalan di multi platform, bisa pakai Python atau Java. Nah jika saya pribadi, lebih baik pakai java / python saja dikarenakan komunitas dan jobs yang membutuhkan bahasa ini lebih besar. Dan juga multi platform tentu nya</p>
<p>Jika pengen bikin mobile apps, tentunya temen temen juga harus berpikir panjang, apakah pengen bikin native apps atau web based app? Jika native app temen temen bisa pake java / Kotlin atau bisa juga pakai React Native yang berbasis Javascript. Sedangkan jika temen temen udah sering bikin web dan gak pengen belajar hal baru di dunia mobile, bisa pakai Ionic untuk membangun mobile app yang berbasis web view. Nah karena performa adalah segalanya, maka sebisa mungkin kita menggunakan teknologi native untuk membangun nya. Pilihan kita persempit dan jatuh kepada Java / Javascript. Jika kalian udah terbiasa bermain dengan Javascript, temen temen bisa pakai React Native besutan Facebook. Dan jika kalian udah terbiasa di lingkungan Java, temen temen bisa langsung pakai Kotlin saja. Dan jangan lupa ya, mobile app ini juga butuh sebuah backend untuk melayani ketersediaan data.</p>
<blockquote><p>Backend kerjanya sebagai penyedia data (Data Service) sedangkan frontend adalah UI / tampilan dari sebuah apps yang ada di sisi client</p></blockquote>
<p>Yang terakhir Web app. Web app ini yang pualing banyak dicari dan digunakan, bahkan mayoritas perusahaan kalau mau ngerekrut programmer, umumnya yang bisa bikin web app. Web ini jangkauan nya luas, terbagi menjadi beberapa layer. Ada frontend dan backend atau Full Stack Web app. Jika temen - temen pengen bikin web app yang engga perlu ribet di frontend (maksudnya satu project itu ada backend dan frontend nya), maka temen temen bisa pakai CodeIgniter / Laravel / Yii2.</p>
<p>Jika temen temen pengen bikin web yang terpisah repository nya, misalkan backend project sendiri dan frontend project sendiri. Di Backend kita bisa milih lagi, mau pake bahasa apa, misalkan kita persempit secara umum saja yaitu PHP dan Javascript. Untuk Backend sebagai penyedia API yang menggunakan PHP, kita bisa pakai Lumen / Slim / Silex. Sedangkan jika udah terbiasa bermain dengan Javascript, bisa pakai nodeJS dengan Express / AdonisJS misalnya sebagai framework JS nya.</p>
<p>Oh iya, sebagai catatan. Untuk backend penyedia API berbasis PHP, disarankan untuk menggunakan microframework saja karena dengan tujuan memberikan response yang cepat dan tanggap, bisa pakai Lumen / Slim / Silex. Boleh sih pakai Full Framework seperti Laravel / Yii2, tapi engga disarankan karena mereka ini sebenernya ada di posisi full stack web. Jika dipakai untuk kebutuhan API, apalagi nanti app nya udah gede, bisa dipastikan response yang diberikan akan melambat karena framework mereka ini kaya akan fitur yang gak kita pakai. Contoh sederhananya, kita pengen liburan nih. Tentunya barang barang yang kita bawa ya sesuai keperluan dong ya, seperti pakaian dan peralatan mandi. Kan engga mungkin kita bawa satu lemari, bawa TV, bawa kasur, dll. Itulah perumpamaan sebaiknya kita bawa seperlu nya (Lumen / Slim) daripada bawa perlengkapan yang engga penting (Laravel / Yii ).</p>
<p>Balik lagi bahas Web app ya. Backend udah kita jelasin, sekarang bagian frontend. Frontend ini kita bisa pakai Javascript (sangat disarankan) dan framework JS yang bisa kita gunakan adalah Angular / React / Vue. Silakan temen temen pilih satu diantara tiga itu yang paling disenangi. Kalau saya pribadi sih pilih VueJS ya, karena emang dari learning curve nya sangat mudah, dan two way data binding nya bikin jatuh hati. Nah ngomong - ngomong masalah frontend ini nanti juga harus ditentukan, pengen bikin Traditional Web App atau Single Page Application? Insya allah akan saya bahas di postingan berikut nya.</p>
<hr>
<p>Setelah pembahasan yang puanjang diatas, pertanyaan akan balik lagi ke kita. Mau pake teknologi apa? Dan jangan sampai salah pilih ya. Sekedar mau mengingatkan lagi, bahasa - bahasa / teknologi diatas yang saya sebutkan merupakan teknologi yang paling banyak dipake oleh temen temen programmer. Jika ada salah kata dari saya mohon dimaafkan, dan semoga berguna bagi temen - temen yang mau memulai bikin project. Ingat, jangan salah pilih yaaaa..</p>`
  })}`;
});
var menentukanTeknologiYangTepatSebelumMembuatProject = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Menentukan_teknologi_yang_tepat_sebelum_membuat_project,
  metadata: metadata$13
});
var metadata$12 = {
  "draft": false,
  "title": "React Native 0.57 - Images is Not Showing on Generated APK",
  "date": "2018-10-23T22:25:35.000Z",
  "tags": ["javascript", "reactnative"],
  "description": "Gambar ga muncul setelah generate APK di React Native 0.57? Baca postingan saya ini, insyaallah manjur :D",
  "slug": "react-native-057-images-is-not-showing-on-generated-apk"
};
var React_native_057_images_is_not_showing_on_generated_apk = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$12), {}, {
    default: () => `<p>Permasalahan pertama setelah upgrade React Native dari 0.56 ke 0.57. Yaitu Gambar tidak muncul ketika APK release React native 0.57 (Image Not Showing on Generated APK). Oh iya, postingan kali ini bakal singkat banget, cuma sebagai catatan bagaimana cara ngebenerin masalah seperti ini.</p>
<p>Terakhir saya generating signed APK di versi 0.56 ga ada masalah, eh baru kali ini ada masalah ketika generate APK. Langsung deh gugling dan nemu solusi nya. Langsung aja yok beresin masalah nya</p>
<p>Pertama masuk ke directory project kalian, trus masuk ke folder android</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ cd android/</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian paste script dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res</code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau kalian dapat error seperti dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ ENOENT: no such file or directory, open &#39;./android/app/src/main/assets/index.android.bundle&#39;</code>`}<!-- HTML_TAG_END --></pre>
<p>berari harus bikin folder assets nya dulu, paste aja ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ mkdir app/src/main/assets</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah kalo udah, jalanin lagi script yang diatas tadi.</p>
<p>Bingung script yang mana? ini niiiiiiiihhhhhhh \u2026</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah nanti di folder <code>android/app/src/main/assets</code> bakal muncul file index.android.bundle yang isi nya assets kamu</p>
<p>Kalo udah, silakan jalankan lagi generate APK nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ ./gradlew assembleRelease</code>`}<!-- HTML_TAG_END --></pre>
<p>Trus coba install di HP kalian. Gimana berhasil gak? Semoga bermanfaat :D</p>
<p>FYI sorry ye ga ada gambar, lagi males screenshot ngahaha</p>`
  })}`;
});
var reactNative057ImagesIsNotShowingOnGeneratedApk = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": React_native_057_images_is_not_showing_on_generated_apk,
  metadata: metadata$12
});
var metadata$11 = {
  "draft": false,
  "title": "Duplikasi Object dan Array dengan Benar di JavaScript",
  "date": "2019-04-25T11:55:00.000Z",
  "description": "Cara cloning / duplikasi data object atau array dengan benar di JavaScript",
  "tags": ["javascript", "tips"],
  "slug": "duplikasi-object-atau-array-dengan-benar-di-javascript"
};
var Duplikasi_object_dan_array_dengan_benar_di_javascript = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$11), {}, {
    default: () => `<p>Udah lama ga nulis di blog, kali ini mau bahas gimana sih caranya kita nge-<em>clone</em> / duplikasi object dan array ke variable lain. Terkadang kita ada di suatu kondisi yang memaksa kita untuk <em>cloning</em> sebuah value dari satu variable ke variable yang lain. Yang jadi masalah adalah ketika kita <em>cloning</em> data, data tersebut masih terikat dengan variable asal, sehingga data di variable yang baru akan terus bergantung pada variable asal. Contoh nya seperti ini</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> asli <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> duplikat <span class="token operator">=</span> asli<span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>duplikat<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3]</span>

asli<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asli<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3,4]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>duplikat<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3,4]</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Perhatikan, Disini kita menambahkan elemen ke variable asli, eh ketika kita akses variable duplikat malah datanya terupdate (value nya sama seperti yang ada pada variable asli). Pun jika kita mengubah value dari variable duplikat, maka variable asli akan berubah juga.</p>
<h2>Kenapa ga bisa pake <strong>=</strong> ?</h2>
<p>Karena pada JavaScript, array dan object adalah value yang bernilai <em>reference</em>. Maksudnya adalah ketika kita copy / <em>clone</em> sebuah value dengan menggunakan <code>=</code>, maka yang kita copy hanya lah referensi (ke alamat memory yang sama) dari value awalnya saja. Jadi cara yang benar untuk menduplikasi data array / object adalah dengan cara mengcopy isi dari value nya, bukan referensi ke alamat memory nya. Di ES6 kita bisa menggunakan spread operator (\u2026variable), atau kalau pengen pakai <em>old fashion way</em> bisa menggunakan <code>slice()</code>.</p>
<h2>Contoh</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> asli <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> duplikat <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>asli<span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>duplikat<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3]</span>

asli<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asli<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3,4]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>duplikat<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Banyak jalan menuju Roma</h2>
<p>Spread operator hanya bisa digunakan pada array / object <em>non multidimensi</em>. Spread operator ga bisa dipakai untuk kasus multidimensional array / object. Trus pakai apa dong? Sejauh yang saya temukan saat ini (tentunya mungkin masih banyak cara lainnya) kita bisa pakai 3 fungsi berikut ini</p>
<ol><li>Spread Operator</li>
<li>Array.from</li>
<li>JSON.parse &amp; JSON.stringify</li></ol>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> asli <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// dengan spread operator</span>
<span class="token keyword">let</span> duplikat1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>asli<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// dengan Array.from</span>
<span class="token keyword">let</span> duplikat2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>asli<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// dengan JSON.parse &amp; JSON.stringify</span>
<span class="token keyword">let</span> duplikat3 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>asli<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<hr>
<p>Akhir kata, semoga tips singkat ini bisa menambah wawasan teman - teman pembaca budiman sekalian. Makasih udah mampir :-)</p>`
  })}`;
});
var duplikasiObjectDanArrayDenganBenarDiJavascript = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Duplikasi_object_dan_array_dengan_benar_di_javascript,
  metadata: metadata$11
});
var metadata$10 = {
  "draft": false,
  "title": "Membuat RBAC Sendiri : Menu Rendering di Nuxtjs - Part 3",
  "date": "2019-02-03T16:15:13.000Z",
  "tags": ["opini", "tips", "nuxtjs"],
  "description": "Seri terakhir dari pembahasan RBAC ini akan fokus pada penyajian menu akses di frontend",
  "slug": "membuat-rbac-sendiri-menu-rendering-di-nuxtjs-part-3"
};
var Membuat_rbac_sendiri_menu_rendering_di_nuxtjs_part_3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$10), {}, {
    default: () => `<p>Pembahasan lanjutan kali ini akan fokus pada frontend menggunakan Nuxtjs, bagi yang pakai Vuejs bisa menyesuaikan dan mengikuti flow nya. Bagi temen temen yang mau ngikutin seri ini, bisa baca baca dulu 2 part sebelumnya yang membahas tentang konsep RBAC dan implementasi di Backend nya. Baik, karena kita pakai Nuxtjs dengan Auth Module, maka kita perlu menambahkan sedikit di backend nya agar sesuai dengan apa yang diminta oleh auth module. Karena Lumen lebih mudah dan banyak dipakai, untuk contoh backend saya akan pakai Laravel (Lumen) saja. Bagi pengguna framework atau bahasa lain, tinggal menyesuaikan karena ini bebas banget.</p>
<h2>Nuxtjs + Auth Module Config</h2>
<p>Pada file nuxt.config.js, saya setting seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"> auth<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  redirect<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    login<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>
    home<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>
    logout<span class="token operator">:</span> <span class="token string">'/login'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  strategies<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    local<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      endpoints<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        login<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>
          propertyName<span class="token operator">:</span> <span class="token string">'token'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        user<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/users/details'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>
          propertyName<span class="token operator">:</span> <span class="token string">'user'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        logout<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/logout'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'post'</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  token<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'token'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  cookie<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'token'</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasan nya diatas ini, endpoint untuk login ke url /login, sedangkan untuk mendapatkan data user (seperti nama, username, jabatan, dan menu akses) pakai /users/details. Nah karena disini kita pakai 2 endpoint, yakni untuk proses login dan untuk ngedapetin detail user yang sedang login, maka di backend kita perlu bikin 2 route dan 2 controller.</p>
<p>Route pada Lumen. Untuk Laravel silakan sesuaikan sendiri.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token comment">// web.php</span>
<span class="token variable">$router</span><span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/api/login'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'AuthAuthController@login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$router</span><span class="token operator">-></span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'middleware'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'jwt.auth'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$router</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token variable">$router</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/users/details'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'AuthUserController@userDetail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Controller untuk login</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Controllers<span class="token punctuation"></span>Auth</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Http<span class="token punctuation"></span>Request</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Controllers<span class="token punctuation"></span>Controller</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Tymon<span class="token punctuation"></span>JWTAuth<span class="token punctuation"></span>Exceptions<span class="token punctuation"></span>JWTException</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Tymon<span class="token punctuation"></span>JWTAuth<span class="token punctuation"></span>Exceptions<span class="token punctuation"></span>TokenExpiredException</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Tymon<span class="token punctuation"></span>JWTAuth<span class="token punctuation"></span>Exceptions<span class="token punctuation"></span>TokenInvalidException</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Tymon<span class="token punctuation"></span>JWTAuth<span class="token punctuation"></span>JWTAuth</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">AuthController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">&#123;</span>
  <span class="token keyword">protected</span> <span class="token variable">$jwt</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">JWTAuth</span> <span class="token variable">$jwt</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#123;</span>
      <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">jwt</span> <span class="token operator">=</span> <span class="token variable">$jwt</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#123;</span>
      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$token</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">jwt</span><span class="token operator">-></span><span class="token function">attempt</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
              <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user_not_found'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TokenExpiredException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token_expired'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TokenInvalidException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token_invalid'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JWTException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token_absent'</span> <span class="token operator">=></span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'token'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Controller untuk user detail</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token operator">...</span><span class="token operator">...</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getMenu</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$type</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$menu</span> <span class="token operator">=</span> <span class="token class-name static-context">Menus</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$menu</span><span class="token operator">-></span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token keyword">use</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'access'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$type</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$item</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">userDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$write_menu</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'intval'</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">write_menu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$readonly_menu</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'intval'</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">readonly_menu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$write</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getMenu</span><span class="token punctuation">(</span><span class="token variable">$write_menu</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'write'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$readonly</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getMenu</span><span class="token punctuation">(</span><span class="token variable">$readonly_menu</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'readonly'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$menus</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$write</span><span class="token punctuation">,</span><span class="token variable">$readonly</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">collapse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">'id'</span>            <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">'name'</span>          <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">'username'</span>      <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">'menu'</span>          <span class="token operator">=></span> <span class="token variable">$menus</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span> <span class="token operator">=></span> <span class="token variable">$data</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah dengan dua controller diatas, maka ketika user berhasil login, maka Nuxt auth module akan meminta detail user nya dan akan mendapatkan data hak akses si user tersebut. Baik, di backend sudah kita buat dan sudah di sesuaikan dengan permintaan auth module, selanjutnya kita bikin rendering menu di frontend nya.</p>
<h2>Rendering Menu di Nuxtjs</h2>
<p>Setelah kita dapat data menu yang bisa di akses, data tersebut di store di Vuex. Jadi sekarang tugas kita tinggal me render menu nya berdasarkan data menu tadi.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">'pug'</span><span class="token operator">></span>
  div
    nav
      ul
        <span class="token function">li</span><span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">'(menu, index) in menus'</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">'menu.id'</span><span class="token punctuation">)</span>
          nuxt<span class="token operator">-</span><span class="token function">link</span><span class="token punctuation">(</span><span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">'item.url'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>

<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token function">menus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>user<span class="token punctuation">.</span>menu<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Tentu nya component menu diatas sangat standart sekali ya (cuma sebagai contoh), di real world ga mungkin cuma gitu aja. Nah dari menu render diatas, kita bisa masuk ke pages di nuxt berdasarkan nama dari url tersebut. Untuk file pages nya wajib disamakan dengan url diatas.</p>
<h2>Vuex Store untuk mencatat status menu</h2>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">createStore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      menuAktif<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token function">setMenuAktif</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        state<span class="token punctuation">.</span>menuAktif <span class="token operator">=</span> payload
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> createStore<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Fungsi nya adalah, untuk mencatat apakah menu yang dibuka sekarang ini memiliki status write atau readonly. Jadi jika menu yang dibuka write, maka di vuex akan tercatat write, sehingga pada component kita bisa menampilkan button untuk aktivitas CRUD. Sedangkan jika readonly, maka sembunyikan button untuk CRUD di component.</p>
<h2>Auth Middleware</h2>
<p>Buat sebuah middleware dengan nama authorization.js di folder middleware.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> store<span class="token punctuation">,</span> route<span class="token punctuation">,</span> redirect <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> route<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
  <span class="token keyword">const</span> menu <span class="token operator">=</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>user<span class="token punctuation">.</span>menu<span class="token punctuation">;</span>
  <span class="token keyword">const</span> parsedURL <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> menus <span class="token operator">=</span> menu<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span>
    item<span class="token punctuation">.</span>url <span class="token operator">=</span> parsedURL
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>menus<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>url <span class="token operator">===</span> parsedURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setMenuAktif'</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setMenuAktif'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      access<span class="token operator">:</span> <span class="token string">'readonly'</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> url <span class="token operator">!==</span> <span class="token string">'/'</span> <span class="token operator">?</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Middleware diatas akan selalu dijalankan setiap kita masuk ke suatu halaman. Jadi sebelum Nuxt merender component page nya, dia akan menjalankan middleware ini untuk menentukan page yang akan dibuka apakah memiliki akses write atau readonly.</p>
<h2>Mixins untuk memudahkan Authorization Checking</h2>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>

Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token function">isAuthorized</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>menuAktif<span class="token punctuation">.</span>access <span class="token operator">===</span> <span class="token string">'write'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>File diatas bisa disimpan di folder <code>plugins/authorization.js</code></p>
<h2>Reconfigure Nuxt Config</h2>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">'~/plugins/authorization'</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
router<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  middleware<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'auth'</span><span class="token punctuation">,</span> <span class="token string">'authorization'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada file Nuxt.config.js tambahkan plugins dan middleware nya. Fungsi nya adalah untuk mendaftarkan mixins authorization dan middleware nya.</p>
<h2>Implementasi di Vue Component</h2>
<p>Semua nya sudah siap, tinggal kita mainin saja authorization nya di vue component. Contoh dibawah ini adalah halaman index yang berisi table dan ada tombol untuk create new data.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">'pug'</span><span class="token operator">></span>
  div
    <span class="token function">button</span><span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">'isAuthorized'</span><span class="token punctuation">)</span> Create New Data
    table<span class="token punctuation">.</span>table
      thead
        tr
          th No<span class="token punctuation">.</span>
          th Name
          th Blablabla
      tbody
        tr
          td <span class="token number">1</span>
          td Andi
          td lololol
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Perhatikan, diatas ada <code>v-if=&#39;isAuthorized&#39;</code>, berasal dari mixins yang telah kita buat di folder plugins tadi. Jadi semua component memiliki attribute ini untuk pengecekan apakah dia memiliki akses write atau readonly di halaman itu. Jadi pada component / page ini, jika user memiliki akses write, maka tombol create new data akan muncul, sedangkan jika hanya readonly, maka tombol itu ga akan muncul. Lebih jauh lagi, menu yang ditampilkan disini adalah hanya menu yang sudah di tentukan write atau readonly nya, jadi menu yang lain ga akan tampil.</p>
<hr>
<p>Fiuh panjang juga ya kalau kita bikin RBAC dengan logic kita sendiri, Tetapi nilai plus nya adalah logika kita akan makin terasah dan membuat kita makin jago. Semoga artikel terakhir dari seri RBAC ini bisa dipahami dengan baik, karena saya sendiri belum tentu yakin para pembaca bisa memahami dengan baik atau tidak pada konsep kali ini. Yaa setidaknya saya telah mengutarakan konsep RBAC yang bisa kita buat secara manual dengan tujuan melatih logika kita.</p>
<p>Mohon maaf jika ada salah kata, dan jika ada pertanyaan langsung saja tanya di kolom komentar. Thanks \u2026</p>`
  })}`;
});
var membuatRbacSendiriMenuRenderingDiNuxtjsPart3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Membuat_rbac_sendiri_menu_rendering_di_nuxtjs_part_3,
  metadata: metadata$10
});
var metadata$$ = {
  "title": "Mini Workshop Speed Up Vuejs Development with Nuxtjs",
  "date": "2019-05-06T15:37:00.000Z",
  "description": "",
  "tags": ["opini", "nuxtjs", "vuejs"],
  "draft": false,
  "slug": "mini-workshop-speed-up-development-with-nuxtjs"
};
var Mini_workshop_speed_up_vuejs_development_with_nuxt = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$$), {}, {
    default: () => `<p>Cerita sedikit mengenai pengalaman bulan Februari 2019 kemarin ketika ngisi acara mini workshop di komunitas SurabayaDev, dengan judul Speed Up Vuejs Development with Nuxtjs. Kebetulan di komunitas ini masih belum ada yang bahas Nuxt, yaudah deh bawain topik itu. Singkatnya, Nuxt ini dipakai untuk mempersingkat dan mempermudah proses development seperti vuejs tanpa route, memudahkan proses SSR, simple vuex module, dll.</p>
<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/live.staticflickr.com/65535/33909719568_0ee0af34a8_c.jpg"}" style="${"width:100%;height:auto;"}">
<h2>PROS</h2>
<p>Manfaat yang paling besar ketika menggunakan Nuxt adalah</p>
<h3>Simple Routing</h3>
<p>Jika kita pakai Vuejs, kita harus mendaftarkan component kedalam file vue-router. Nah di Nuxtjs, kita tak perlu melakukan hal yang membosankan tersebut, kita hanya perlu membuat file <code>.vue</code> kedalam folder pages, dan #boom secara otomatis nuxt sudah ngurusin route nya untuk kita.</p>
<h3>Layout System</h3>
<p>Salah satu yang melelahkan ketika pakai vue adalah, kita harus bikin layout sendiri (seperti dashboard layout, login / register layout, dll). Di Nuxt sendiri sudah disediakan template layout yang bisa langsung kita pakai.</p>
<h3>Server Side Rendering</h3>
<p>Urusan SSR? Ketika install pilih mode Universal, kemudian pada component bikin manfaatin fitur asyncData, yarn run build, yarn run start. Kelar deh SSR nya.</p>
<h3>Directory Structure</h3>
<p>Di Vue kita harus menyusun sendiri struktur folder dari aplikasi kita, sedangkan di Nuxt sudah ada struktur nya yang sudah jadi standart. Jadi langsung pakai, developer Nuxt yang lain ga akan kebingungan karena struktur ini udah jadi standart ketika pengembangan web menggunakan Nuxt.</p>
<h3>Built-in Loading</h3>
<p>Coba liat loading bar yang ada di youtube, nah Nuxt secara default udah tersedia loading bar seperti itu.</p>
<h3>Simplify Vuex</h3>
<p>Module di Vuex jadi makin gampang, tinggal bikin file <code>.js</code> dan export beberapa function disana, udah jadi module vuex.</p>
<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/live.staticflickr.com/65535/33909718908_f9a3428b8f_c.jpg"}" style="${"width:100%;height:auto;"}">
<h2>CONS</h2>
<p>Mungkin Cons nya, size lebih besar dikit daripada Vue. Hal ini wajar saja, karena di Nuxt sudah terinstall Vue-router dan Vuex secara otomatis.</p>
<hr>
<p>Mini workshop ini adalah kegiatan awal yang nanti nya akan dijadikan full workshop yang akan ngebahas Vuejs basic. Bagi yang pengen liat slide saya, bisa <a href="${"https://docs.google.com/presentation/d/1gHl1dErhOjIJf5MkHqSialDh52s96_8Eaqf9KGqjENs/edit?usp=sharing"}" rel="${"nofollow"}">klik link ini</a></p>
<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/live.staticflickr.com/65535/32843294567_2dfb3c408a_c.jpg"}" style="${"width:100%;height:auto;"}">`
  })}`;
});
var miniWorkshopSpeedUpVuejsDevelopmentWithNuxt = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Mini_workshop_speed_up_vuejs_development_with_nuxt,
  metadata: metadata$$
});
var metadata$_ = {
  "draft": false,
  "title": "Setup HTTPS / SSL di Nuxtjs dan Laravel dengan Nginx",
  "date": "2018-12-24T14:30:09.000Z",
  "tags": ["devops", "laravel", "nuxtjs"],
  "description": "Memasang SSL / HTTPS di project Nuxtjs, Laravel, dan web socket Socket.io menggunakan Nginx dan Let's Encrypt.",
  "slug": "setup-https-ssl-di-nuxtjs-dan-laravel-dengan-nginx"
};
var Setup_https_ssl_di_nuxtjs_dan_laravel_dengan_nginx = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$_), {}, {
    default: () => `<p>Sebenernya agak bingung milih judul, karena bakal banyak teknologi yang akan saya usung disini. Detailnya, Bagaimana cara menerapkan HTTPS di project Nuxtjs dan Laravel menggunakan Let\u2019s Encrypt. Jadi disini ada 3 kondisi, frontend menggunakan Nuxtjs dengan mode SPA, backend menggunakan Laravel, untuk web socket memakai socket.io dan Laravel echo server, untuk SSL nya sendiri kita pakai gratisan dari Let\u2019ts Encrypt.</p>
<p>Kondisi yang ada seperti ini, Hanya menggunakan 1 domain, dan engga boleh bikin sub domain. Karena Let\u2019s encrypt hanya bisa dipakai di web public dengan port 80 / 443, maka kita ga boleh deploy backend dan web socket nya menggunakan port selain 80. Untuk frontend sendiri bakal pakai port 80, karena nanti dia yang akan diakses oleh public. Sedangkan jika port 80 nya sudah terenkripsi dengan SSL, maka untuk akses API nya juga harus melalui HTTPS.</p>
<p>Cara yang paling dekat dan efisien adalah, kita buat sebuah domain dengan 2 buah sub directory untuk backend dan web socket nya. Oh iya, artikel ini ada kaitannya dengan postingan sebelumnya ya <a href="${"https://nusendra.com/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1"}" rel="${"nofollow"}">https://nusendra.com/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-1</a> dan <a href="${"https://nusendra.com/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2"}" rel="${"nofollow"}">https://nusendra.com/post/laravel-realtime-notification-dengan-socketio-dan-nuxtjs-part-2</a>. Jadi jika temen temen pengen lebih paham mengenai realtime notifikasi menggunakan socket io, maka perlu dibaca dulu.</p>
<p>Baik kita buat skema nya dulu, rencana kita akan deploy ke 3 instance ini (Nuxtjs, Laravel, Websocket) kedalam VPS menggunakan 1 domain saja. (misalkan <a href="${"https://example.com/"}" rel="${"nofollow"}">example.com</a>)</p>
<table><thead><tr><th>Tech</th>
<th>IP</th>
<th>Dir / Folder</th></tr></thead>
<tbody><tr><td>Frontend Nuxtjs</td>
<td>localhost:80</td>
<td>/var/www/html/frontend</td></tr>
<tr><td>Backend Laravel</td>
<td>localhost:81</td>
<td>/var/www/html/backend</td></tr>
<tr><td>Web Socket</td>
<td>localhost:6001</td>
<td>/var/www/html/backend</td></tr></tbody></table>
<p>Nah karena Let\u2019s Encrypt hanya bisa diterpkan di port 80, artinya hanya Nuxtjs saja yang bisa pakai HTTPS, untuk 2 yang lainnya tetap HTTP. Dari sini browser akan memberikan keterangan error jika Nuxt (HTTPS) mengakses API / web socket yang masih menggunakan protokol HTTP. Cara gampang nya, kita tinggal bikin 2 sub domain baru dengan port 80 untuk backend dan web socket nya. Dengan begitu semua nya bisa mendapat akses HTTPS.</p>
<p>Tapi ga seru ah, kita bikin kondisi yang lebih susah lagi, bagaimana jika tidak diperbolehkan menggunakan sub domain? Yak kita pakai sub directory. Jadi nanti untuk backend URL nya adalah <a href="${"https://example.com/backend"}" rel="${"nofollow"}">example.com/backend</a> dan websocket nya menggunakan <a href="${"https://example.com/backend"}" rel="${"nofollow"}">example.com</a>.</p>
<blockquote><p>Sebelum lanjut, saya sarankan untuk paham terlebih dahulu bagaimana implementasi laravel echo server dan redis. Bisa baca 2 artikel yang sudah saya share diatas.</p></blockquote>
<h2>Install Let\u2019s Encript khusus Nginx</h2>
<p>Pertama login ke vps mu pakai ssh</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ ssh &lt;username&gt;@&lt;ip_vps&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Karena kita pakai Ubuntu, ketik ini di terminal. (Untuk OS lain, sesuaikan sendiri ya).</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo add-apt-repository ppa:certbot/certbot
$ sudo apt-get update
$ sudo apt-get install python-certbot-nginx</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah selesai, pastikan domain kamu udah berhasil di tembak ke IP nya ya. Kemudian kita setting nginx nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo nano /etc/nginx/sites-available/default</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian modifikasi file nya, seperti berikut (sesuaikan)..</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined"># Ini untuk frontend Nuxtjs (Static SPA)
server &#123;
        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        root /var/www/html/frontend/dist;
        index index.html index.htm;
        server_name example.com;

        location ~ /.ht &#123;
                deny all;
        &#125;

        # Untuk Backend Laravel
        location /backend/ &#123;
                proxy_pass http://127.0.0.1:81/;
        &#125;

        # Untuk Web Socket Laravel-echo-server
        location /socket.io &#123;
                proxy_pass http://127.0.0.1:6001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection &quot;upgrade&quot;;
        &#125;
&#125;

# Ini untuk backend Laravel
server &#123;
        listen 81 default_server;
        listen [::]:81 default_server;
        root /var/www/html/backend/public;
        index index.php index.html index.htm;

        server_name example.com:81;

        location / &#123;
                try_files $uri $uri/ /index.php?$query_string;
        &#125;

        location ~ .php$ &#123;
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php7.2-fpm.sock;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        &#125;

        location ~ /.ht &#123;
                deny all;
        &#125;
&#125;

# redirect to https
server &#123;
    if ($host = example.com) &#123;
        return 301 https://$host$request_uri;
    &#125; # managed by Certbot

        listen 80 default_server;
        listen [::]:80 default_server;

        server_name example.com;
    return 404; # managed by Certbot
&#125;</code>`}<!-- HTML_TAG_END --></pre>
<p>Temen temen lihat, disana ada kata kata managed by Certbot, script itu dia generate otomatis dari Letsencrypt nya. Jadi temen temen ga perlu pusing ngurusin script redirect nya.</p>
<p>Pada block server yang pertama kita tentukan dulu port dan root folder dari project frontend nuxt nya. Kemudian d (dalam block itu kita buat block lagi untuk location (subdirectory backend dan socket.io) yang akan mempassing proxy ke port di masing masing block. Kemudian block server yang kedua adalah standart nginx setup untuk laravel. Oh iya, pastikan juga project Nuxt nya udah di build ya, karena folder dist itu akan terbentuk setelah build berhasil. Setelah itu simpan dan coba check konfig nginx kita</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ nginx -t</code>`}<!-- HTML_TAG_END --></pre>
<p>Jika muncul tulisan yang ada kata syntax ok nya, berarti settingan kita udah bener. Next\u2026</p>
<p>Jika port 80 kalian belum di enable, silakan aktifkan melalui ufw.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ ufw allow \u2018Nginx Full\u2019
$ ufw delete allow \u2018Nginx HTTP\u2019
$ ufw status
$ sudo service nginx restart</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian mari kita hajar instalasi Lets Encrypt nya.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo certbot --nginx -d example.com</code>`}<!-- HTML_TAG_END --></pre>
<p>Jika sudah selesai. Silakan coba cek masuk ke browser dengan url <a href="${"https://example.com/"}" rel="${"nofollow"}">example.com</a> (contoh), maka disana kalian akan mendapatkan Tulisan <code>secure</code> di sebelah kiri URL nya. Kemudian coba juga akses <a href="${"https://example.com/"}" rel="${"nofollow"}">example.com/backend</a>, harusnya sudah muncul API dari route laravel nya.</p>
<h2>Konfigurasi Nuxtjs</h2>
<p>Nah sekarang kita tinggal setting endpoint nya aja di Nuxt dan Laravel echo nya. Masuk kedalam folder plugins dan buka laravel-echo.js kemudian edit seperti berikut</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Echo <span class="token keyword">from</span> <span class="token string">'laravel-echo'</span>

window<span class="token punctuation">.</span>io <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'socket.io-client'</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span>Echo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Echo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  broadcaster<span class="token operator">:</span> <span class="token string">'socket.io'</span><span class="token punctuation">,</span>
  host<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian di file nuxt.config.js nya, untuk axios kita tentukan juga baseURL nya.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">axios<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  baseURL<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>backend<span class="token operator">/</span>api
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu coba build kembali. Dan buka halaman <a href="${"https://example.com/"}" rel="${"nofollow"}">example.com</a>, harusnya ketika buka chrome Devtools kalian ga akan lagi mendapatkan error karena ga boleh akses HTTP API maupun gagal nya polling ke web socket.</p>
<hr>
<p>Sekian bahasan yang lumayan berat ini. Semoga bermanfaat bagi temen temen yang punya kasus paling engga hampir sama seperti ini. thanks udah mampir\u2026</p>`
  })}`;
});
var setupHttpsSslDiNuxtjsDanLaravelDenganNginx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Setup_https_ssl_di_nuxtjs_dan_laravel_dengan_nginx,
  metadata: metadata$_
});
var metadata$Z = {
  "title": "Workshop Vuejs Basic Bersama Komunitas SurabayaDEV",
  "date": "2019-05-08T15:50:00.000Z",
  "description": "Pengalaman sewaktu mengisi workshop Vuejs basic bareng SurabayaDEV",
  "tags": ["opini", "vuejs"],
  "draft": false,
  "slug": "workshop-vuejs-basic-bersama-komunitas-surabayadev"
};
var Workshop_vuejs_basic_bersama_komunitas_surabayadev = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$Z), {}, {
    default: () => `<p>Setelah ngisi mini workshop yang bahas Nuxt pada bulan Februari kemarin, karena antusias dari audience dan bahkan ada beberapa peserta yang pengen datang namun kuota sudah penuh, akhirnya SurabayaDev dan saya <em>partner</em>an untuk ngadain acara workshop Vuejs basic. Workshop ini ditujukan untuk peserta yang benar benar masih baru mulai di dunia Vuejs, jadi topik yang saya bahas adalah topik yang basic banget. Namun saya juga bawa beberapa kasus beserta best practice di <em>real world</em>.</p>
<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/live.staticflickr.com/65535/32863536077_8f3dbe4852_c.jpg"}" style="${"width:100%;height:auto;"}">
<h2>Materi yang saya bahas</h2>
<h3>Basic</h3>
<ol><li>Kenapa harus pakai Vue</li>
<li>Perbandingan dengan framework lain</li>
<li>Instalasi</li>
<li>Pengenalan template Vue</li>
<li>Data binding</li>
<li>Computed Properties (computed)</li>
<li>Conditional Rendering (v-if)</li>
<li>List Rendering (v-for)</li>
<li>Event Handling (@click / @change)</li></ol>
<h3>Intermediate</h3>
<ol><li>Pengenalan Component</li>
<li>Props</li>
<li>Slots</li>
<li>Middleware</li>
<li>Komunikasi dengan API Service (axios)</li></ol>
<h3>Best Practice</h3>
<ol><li>Membuat reusable table component</li>
<li>Strategi Authentikasi menggunakan Vue</li>
<li>Table component yang dinamis</li>
<li>Layouting di Vuejs</li></ol>
<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/live.staticflickr.com/65535/33930135868_1dca32c4a9_c.jpg"}" style="${"width:100%;height:auto;"}">
<hr>
<p>Thanks to SurabayaDev yang sudah berpartner dan memfasilitasi acara ini hingga akhir.</p>
<img class="${"center-image-post"}" src="${"https://live.staticflickr.com/65535/33930136888_1c74b39da9_c.jpg"}" style="${"width:100%;height:auto;"}">`
  })}`;
});
var workshopVuejsBasicBersamaKomunitasSurabayadev = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Workshop_vuejs_basic_bersama_komunitas_surabayadev,
  metadata: metadata$Z
});
var metadata$Y = {
  "title": "Redirect HTTP ke HTTPS dengan .htaccess di Laravel",
  "date": "2018-08-06T03:24:24.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Bagi kalian pengguna Laravel di shared hosting, berikut ini adalah cara redirect http ke https menggunakan .htaccess",
  "slug": "redirect-http-ke-https-dengan-htaccess-di-laravel"
};
var Redirect_http_ke_https_dengan_htaccess_di_laravel = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$Y), {}, {
    default: () => `<p>Bagi beberapa pengguna apache mungkin pernah mengalami bagaimana redirect http ke https menggunakan .htaccess di Laravel. Karena disini kita punya 2 pekerjaan yang harus di kerjakan, yakni</p>
<ol><li>Bagaimana cara redirect http ke https</li>
<li>Menghapus public url (default di laravel, url selalu ada public nya)</li></ol>
<p>OK langsung saja kita setting. Pertama silakan masuk ke VPS / shared hosting kalian masing - masing. Sesuaikan dengan cara kalian mengakses hosting, bisa pakai ssh atau file manager di cpanel. Kemudian buat / edit file .htaccess di dalam root folder (public_html) seperti berikut ini.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&lt;IfModule mod_rewrite.c&gt;
  RewriteEngine On
  RewriteBase /blog/

  # Force SSL
  RewriteCond %&#123;HTTPS&#125; !=on
  RewriteRule ^ https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125; [L,R=301]
  # Remove public folder form URL
  RewriteRule ^(.*)$ public/$1 [L]
&lt;/IfModule&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasannya, pertama .htaccess menentukan base dari folder app / web nya. Kemudian htaccess akan meredirect http ke https yang setelah itu htaccess akan melemparkan ke folder public dan menghapus / rewrite url public nya.</p>
<p>Sehingga jika setting seperti diatas, contoh ketika kita masuk ke url nusendra.com maka kita akan diarahkan ke <a href="${"https://nusendra.com"}" rel="${"nofollow"}">https://nusendra.com</a></p>
<hr>
<p>Nah itu tadi cara untuk redirect http ke https menggunakan .htaccess bagi pengguna apache dan Laravel. Semoga bermanfaat teman - teman.</p>`
  })}`;
});
var redirectHttpKeHttpsDenganHtaccessDiLaravel = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Redirect_http_ke_https_dengan_htaccess_di_laravel,
  metadata: metadata$Y
});
var metadata$X = {
  "title": "Download Private Video Youtube menggunakan Youtube-dl",
  "date": "2020-04-02T03:00:00.000Z",
  "description": "Cara mendownload private channel / private video youtube dengan menggunakan youtube-dl",
  "tags": ["trik"],
  "draft": false,
  "slug": "download-private-video-youtube-youtube-dl"
};
var Download_private_video_youtube_dengan_youtube_dl = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$X), {}, {
    default: () => `<p>Postingan kali ini akan membahas tentang bagaimana cara mendownload video private youtube atau channel youtube yang emang di bikin private. Kasus ini saya dapat ketika saya pengen mendownload semua video private saya yang ada di youtube (Ingat ya, ini video private pribadi, bukan video private dari channel lain). Nah karena mendownload private video pakai youtube-dl itu agak agak merepotkan, dan yang jelas saya sendiri gagal menggunakan command <strong>-u username -p password</strong>, akhir nya terpaksa harus pakai cookies. Berikut ini trik nya</p>
<h2>Install Chrome Extension</h2>
<p>Kalian harus install chrome extension yang nama nya <a href="${"https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg"}" rel="${"nofollow"}">EditThisCookie</a>, untuk browser lain silakan cari sendiri :D. Kemudian setup dulu extension nya, dan pilih export format for cookies nya menggunakan <strong>Netscape HTTP Cookie File</strong>.</p>
<a href="${"https://imgur.com/uXSZOyf"}"><img src="${"https://i.imgur.com/uXSZOyf.png"}" title="${"source: imgur.com"}"></a>
<p>Setelah itu silakan login ke youtube kalian terlebih dahulu.</p>
<p>Kemudian buka <a href="${"https://youtube.com"}" rel="${"nofollow"}">https://youtube.com</a>, <a href="${"https://myaccount.google.com/"}" rel="${"nofollow"}">https://myaccount.google.com/</a>, dan <a href="${"https://google.com"}" rel="${"nofollow"}">https://google.com</a> dan export cookies nya dengan cara seperti berikut ini</p>
<a href="${"https://imgur.com/4ZY4MEy"}"><img src="${"https://i.imgur.com/4ZY4MEy.png"}" title="${"source: imgur.com"}"></a>
<p>Setelah cookies nya berhasil di salin, kemudian paste kedalam text editor kalian. Dan jangan lupa letakkan semua cookies diatas didalam 1 file txt ya. Contohnya seperti ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined"># Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.youtube.com	TRUE	/	TRUE	1648840658	__Secure-3PAPISID	NVKw6yu8iZT-bI...
.youtube.com	TRUE	/	TRUE	1648840658	__Secure-3PSID	vQd8_8W3emk03ZvDzF_2BlYuqiIAa1-VTY...
...

# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.google.com	TRUE	/	TRUE	1648840657	__Secure-3PAPISID	NVKw6y...
.google.com	TRUE	/	TRUE	1648840657	__Secure-3PSID	vQd8_8W3emk03ZvDzF_2BlYuqiIAGIC_g...
...

# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.google.com	TRUE	/	TRUE	1648840657	__Secure-3PAPISID	NVKw6yu8i...
.google.com	TRUE	/	TRUE	1648840657	__Secure-3PSID	vQd8_8W3emk03ZvDzF_2BlYuqiIAGIC_...</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu simpan dengan nama, misalkan <strong>cookies.txt</strong></p>
<h2>Youtube-dl Cookie Parser</h2>
<p>Ketikkan command berikut ini untuk mem-<em>parse</em> format cookie nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">curl -b cookies.txt --cookie-jar cookiesbarukamu.txt &#39;https://youtube.com&#39;</code>`}<!-- HTML_TAG_END --></pre>
<h2>Siap download</h2>
<p>Langsung aja ndan ketik command berikut ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">youtube-dl --cookies=cookiesbarukamu.txt https://youtu.be/channel/kamu/blabla</code>`}<!-- HTML_TAG_END --></pre>
<p>mantep ga?</p>
<hr>
<p>Semoga trik singkat ini membantu kalian yang sedang pengen mendownload video private kalian. Ehem, video private nya apaan ya? Kalau saya sih video anak saya yang lagi lucu lucu nya, karena storage HP udah ga cukup, ya udah simpen ke yutup aja haha.</p>`
  })}`;
});
var downloadPrivateVideoYoutubeDenganYoutubeDl = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Download_private_video_youtube_dengan_youtube_dl,
  metadata: metadata$X
});
var metadata$W = {
  "title": "Migrasi Blog dari Vue Gridsome ke Svelte Sapper",
  "date": "2020-03-13T19:46:00.000Z",
  "description": "Cerita mengenai perpindahan / migrasi stack blog dari Gridsome ke Sapper",
  "tags": ["vuejs", "javascript'", "svelte"],
  "draft": false,
  "slug": "migrasi-blog-dari-vue-gridsome-ke-svelte-sapper"
};
var Migrasi_blog_dari_vue_gridsome_ke_svelte_sapper = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$W), {}, {
    default: () => `<p>Artikel kali ini akan membahas tentang kenapa saya migrasi blog dari yang awalnya menggunakan Vue dengan framework Gridsome ke Svelte dengan Sapper nya. Mungkin sebelum masuk kesana saya pengen cerita bentar tentang stack apa saja yang saya pakai ketika menggeluti dunia blogging ini.</p>
<p>Note : Tenang, postingan kali ini ga ada kodingan nya kok :)</p>
<h2>Blogspot dan Wordpress</h2>
<p>Dimulai ketika SMP kelas dunia pertama kali kenal blogging, waktu itu iseng iseng coba daftar blogspot trus ngatur ngatur themes blogspot sedemikian rupa alay nya haha. Jangan tanya isi blog nya apaan, yang jelas isinya dari hasil copas semua haha. Yaa maklum lah umur segitu masih ga ada pengalaman di dunia IT. Setelah itu di masa SMA mulai ngerasa kalo blogspot ini tampilannya norak banget, akhirnya beralih ke Wordpress karena lebih simple dan elegan. Disini sudah mulai nulis nulis sendiri, tapi ya gitu tulisan ga jelas dan cuma singkat singkat doang.</p>
<p>Singkat cerita waktu kuliah mulai beli domain <a href="${"https://nusendra.com"}" rel="${"nofollow"}">https://nusendra.com</a> ini yang waktu itu hosting di JagoanHosting kemudian diinstall Wordpress. Dari sini sudah mulai nulis nulis tentang IT yang alakadarnya sepengetahuan saya, terlebih lagi ngebahas tentang C#.NET. Selain itu juga sering dapet kerjaan freelance sebagai network engineer untuk ngerjain mikrotik (Dulu search di google dengan keyword \u201Cjasa mikrotik surabaya gresik sidoarjo\u201D dapet rank 1 dong).</p>
<h2>Laravel</h2>
<p>Mulai sadar sebagai programmer, masa iya masih pakai wordpress yang tinggal next next kelar? haha. Akhirnya menginjak tahun 2016 dimana saya mulai belajar tentang web, langsung ga pake belajar fundamental melainkan langsung lompat ke framework Laravel. Dari kenal framework keren ini langsung coba bikin blog yang mana pakai Laravel untuk halaman depannya (blade) dan pakai Vuejs di admin dashboard nya (CMS).</p>
<p>Pakai stack ini berjalan cukup lama, kira kira 1,5 tahun. yang akhir nya udah bosen sama bahasa ini dan mulai melirik js :P</p>
<h2>Vuejs</h2>
<p>Tahun 2018 mulai mendalami Vuejs dan berniat untuk mengubah stack blog saya menjadi static web menggunakan Vuejs. Mulai baca baca gimana bikin web static generate yang pake vuejs dan konten nya dibikin pake markdown, pilihan jatuh kepada Nuxtjs / Gridsome. Nah karena Nuxtjs ini terlalu kompleks dan terlalu luas (Bisa jadi SSR, bisa static generate, bisa SPA, dll) sedangkan Gridsome sendiri dikhususkan untuk static generate saja, maka pilihan jatuh kepada Gridsome.</p>
<p>Main Gridsome ini asik banget, struktur nya ga jauh beda dengan Nuxtjs, jadi jika kalian udah pernah pake Nuxtjs, maka ga bakalan kesusahan deh untuk main main dengan Gridsome. Lebih lanjut lagi, tinggal baca baca docs nya Gridsome, ikutin arahannya, voila !! kelar. Dalam hal deployment pun juga gampang banget, di docs nya udah di arahin gimana cara deployment ke netlify / zeit now, gampang banget. Jika dibandingkan kalau kita build static web menggunakan Nuxtjs, ada beberapa step yang harus dibikin manual dan itu lumayan pusing.</p>
<h2>Svelte</h2>
<p>Nah akhir nya jagoan kita muncul juga, yak Svelte versi 3. Si Svelte ini bandel banget, baru muncul di akhir 2016, eh sekarang udah versi 3 aja. Jadi sedikit informasi, svelte ini ga bisa dikatakan sebagai framework, ga bisa juga dikatakan sebagai library. Jadi posisi dia di tengah tengah, yakni Semi-Framework.</p>
<p>Berbeda dengan Vue dan React yang mana mereka disebut dengan framework dan Library, Svelte ini lebih ke JS Compiler. Jika pada Vue dan React, library nya ikut di sematkan ke production bundle (yang mana size nya juga lumayan, sekitar 150kb++), Svelte ini berbeda, library dia hanya hidup di lingkungan Development saja. Gampang nya kalau kita lihat di package.json, Vue dan React dependency nya di taruh di block dependencies, sedangkan Svelte sendiri di taruh di devDependencies.</p>
<p>Artinya libs Svelte ini ga ikut dimuat ke production / live, karena bundle js yang dimuat sudah di compile terlebih dahulu dibelakang. Maka hasil akhirnya, bundle js yang di muat di production hanya berkas vanilla js yang mungil sehingga web yang dihasilkan pun akan jauh lebih cepat.</p>
<h2>Bacot mulu, mana cerita intinya?</h2>
<p>Sabar njeng, ini mau mulai haha. Jadi tuh sebagai developer yang ingin berkembang, kita ga bisa dong stuck di satu tempat aja, mulai dari blogspot, naik dikit ke WP, naik dikit ke Laravel, trus ke JAMStack pake Vue, dan sekaranglah stack paling tinggi (yang saya rasakan saat ini) yakni Svelte. Bikin static web pake Svelte ga semudah di Gridsome Ferguso !! Kalau di Gridsome kita bisa tinggal pake beberapa libs yang udah tersedia, macam sitemap, markdown, dll. Nah kalau di Svelte sendiri bener bener bikin, yaa meski ga 100% bikin sendiri sih karena kalau kita pakai Sapper (Setara seperti Next nya React, atau Nuxt nya Vue) udah ada boilerplate how to make a blog with Sapper nya.</p>
<p>Yang paling susah adalah kurangnya library yang tersedia untuk Svelte, ya karena emang doi masih bayi (Tapi bayi bayi ini udah jago loh) sehingga masih dikit lib yang beredar. Contoh yang paling kita butuhkan untuk blog adalah sitemap. Di Svelte / Sapper, belum ada lib yang mendukung untuk mengimplementasikan fitur ini, sehingga harus bener bener putar otak biar bisa jadi. Beruntung skill googling saya lumayan jago (haha), akhir nya dapet <em>how to</em> nya, tapi tetep harus di oprek dulu biar bisa dipake di app kita. Nih hasil nya kalau mau liat, <a href="${"https://gist.github.com/nusendra/05a6ccab0b4e1ad0c21dae362d1b3b98"}" rel="${"nofollow"}">https://gist.github.com/nusendra/05a6ccab0b4e1ad0c21dae362d1b3b98</a>.</p>
<p>Yaa gitulah kira kira, kalau temen temen mau bikin static blog pake Svelte Sapper, bisa intip repository saya kesini ya</p>
<p><a href="${"https://github.com/nusendra/blog"}" rel="${"nofollow"}">https://github.com/nusendra/blog</a></p>
<p>Silakan di clone, di modif, trus dipake :)</p>`
  })}`;
});
var migrasiBlogDariVueGridsomeKeSvelteSapper = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Migrasi_blog_dari_vue_gridsome_ke_svelte_sapper,
  metadata: metadata$W
});
var metadata$V = {
  "draft": false,
  "title": "TDD Menggunakan Mocha dan Chai di Nodejs - Part 1",
  "date": "2018-09-23T14:29:38.000Z",
  "tags": ["typescript", "expressjs", "nodejs"],
  "description": "Implementasi konsep Test Driven Development (TDD) menggunakan Mocha dan Chai di Nodejs",
  "slug": "tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1"
};
var Tdd_menggunakan_mocha_dan_chai_di_nodejs_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$V), {}, {
    default: () => `<p>Halo man teman, kali ini saya akan share tentang TDD menggunakan mocha dan chai di nodejs. Sebelum kita belajar bikin testing nya, lebih baik kita harus paham dan tau dulu mengenai apa itu TDD. TDD adalah singkatan dari Test Driven Development, kalian dapat dengan mudah mencari artikel mengenai TDD ini di mbah kita, yaitu google. Namun saya akan jelaskan secara singkat disini, TDD adalah sebuah konsep development yang berbasis test.</p>
<ol><li>Pertama kita bikin sebuah konsep / mockup / testing nya.</li>
<li>Kemudian kita mulai menuliskan kode (ngoding / develop) untuk aplikasi yang sedang dibuat</li>
<li>Jalankan test hingga seluruh pengujiannya lolos (passed).</li>
<li>Jika semua pengujian sudah lolos, kita me refactor sebaik mungkin kode yang telah dibuat.
Masih bingung? Silakan temen temen mampir di blog teman saya (mas Nafies Lutfi) yang sudah panjang lebar membahas tentang TDD, silakan cek kemari <a href="${"https://blog.nafies.id/laravel/testing-laravel-tentang-test-driven-development/"}" rel="${"nofollow"}">https://blog.nafies.id/laravel/testing-laravel-tentang-test-driven-development/</a>.</li></ol>
<p>Saya ga akan panjang lebar membahas TDD, karena di link rujukan diatas sudah bisa menjawab kebutuhan dan keingintahuan kita tentang TDD. Namun teknologi yang dipakai mas nafies di blog nya tersebut menggunakan PHP Laravel, sedangkan disini kita akan belajar TDD menggunakan Nodejs.</p>
<p>Baik mari kita mulai belajar TDD nya. Oh iya, untuk project nya kita akan memanfaatkan yang sudah ada ya. Silakan clone repository yang sudah saya buat disini <a href="${"https://blog.nafies.id/laravel/testing-laravel-tentang-test-driven-development/"}" rel="${"nofollow"}">https://github.com/nusendra/nodejs-express-typescript</a>. Dan bagi yang belum atau baru kenal nodejs dan typescript, bisa baca baca di blog saya sebelumnya. Kebutuhan teknologi yang akan kita pakai adalah</p>
<ul><li>Nodejs : Javascript runtime server</li>
<li>Mocha : Test framework</li>
<li>Chai : Test Assertion</li>
<li>Chai-http : HTTP Test</li></ul>
<p>Oke, kalau udah di clone, masuk ke folder nya dan ketik ini di terminal.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add mocha chai chai-http -D</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu tambahkan test command nya di file package.json seperti berikut</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">&quot;test&quot;: &quot;mocha -r ts-node/register src/**/*.spec.ts --timeout 10000&quot;</code>`}<!-- HTML_TAG_END --></pre>
<p>Kasus kali ini kita akan menjalankan sebuah fitur test untuk register user. Pertama buat folder <code>tests</code> dan didalam folder nya bikin file dengan nama <code>auth.spec.ts</code>. Pada file test isikan seperti berikut ini, tenang nanti akan saya jelaskan per line nya.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> chai <span class="token keyword">from</span> <span class="token string">'chai'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> chaiHttp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'chai-http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> User <span class="token keyword">from</span> <span class="token string">'../../models/User'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> app <span class="token keyword">from</span> <span class="token string">'../../server'</span><span class="token punctuation">;</span>

chai<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>chaiHttp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> expect <span class="token operator">=</span> chai<span class="token punctuation">.</span>expect<span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">'Authentication'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token function">beforeEach</span><span class="token punctuation">(</span> <span class="token parameter">done</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> object<span class="token operator">:</span>Object <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'nusendra'</span><span class="token punctuation">,</span>
    username<span class="token operator">:</span> <span class="token string">'nusendra'</span><span class="token punctuation">,</span>
    password<span class="token operator">:</span> <span class="token string">'password'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'user can register'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Post Data</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Check Database</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>be<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token string">'string'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'User nusendra berhasil di daftarkan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'user cannot register if username is exists'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'User nusendra sudah terdaftar, silakan pakai username yang lain'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Baik mari kita uraikan baris per baris kode nya.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> chai <span class="token keyword">from</span> <span class="token string">'chai'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> chaiHttp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'chai-http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> User <span class="token keyword">from</span> <span class="token string">'../../models/User'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> app <span class="token keyword">from</span> <span class="token string">'../../server'</span><span class="token punctuation">;</span>

chai<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>chaiHttp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> expect <span class="token operator">=</span> chai<span class="token punctuation">.</span>expect<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Disini kita import package chai dan chai-http, kemudian kita juga import file server yang nantinya akan dimanfaatkan oleh chai-http. Untuk assertion kita menggunakan expect dari chai.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">'Authentication'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token function">beforeEach</span><span class="token punctuation">(</span> <span class="token parameter">done</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>diatas ini kita kasih penjelasan test apa yang akan kita lakukan. Yaitu menggunakan describe. Setelah itu kita bikin sebuah fungsi untuk menghapus data dari collection ketika akan memulai test, di setiap test yang akan diuji.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">const</span> object<span class="token operator">:</span>Object <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'nusendra'</span><span class="token punctuation">,</span>
    username<span class="token operator">:</span> <span class="token string">'nusendra'</span><span class="token punctuation">,</span>
    password<span class="token operator">:</span> <span class="token string">'password'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kita bikin juga sebuah object untuk data yang akan kita post ke route register user.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'user can register'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Post Data</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Check Database</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>be<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token string">'string'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'User nusendra berhasil di daftarkan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pengujian pertama kita bikin testing untuk register user. Langkah yang kita inginkan seperti berikut ini, Pertama kita kirim data object ke post url diatas. Kemudian kita juga cek ke dalam database, apakah data yang sudah masuk ke dalam database. Setelah itu kita cek apakah response yang kita dapat sudah sesuai dengan response yang kita inginkan.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'user cannot register if username is exists'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> chai<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'User nusendra sudah terdaftar, silakan pakai username yang lain'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pengujian kedua ini ini kita lakukan untuk pengecekan bahwa user tidak bisa register dengan username yang sama. Jika ada user yang mendaftar dengan username yang sama, maka user akan dapat response bahwa pendaftaran gagal karena username sudah dipakai oleh orang lain.</p>
<p>Mari kita jalankan test nya dengan mengetik</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn test</code>`}<!-- HTML_TAG_END --></pre>
<p><img src="${"https://farm2.staticflickr.com/1917/44136674284_0665742a57_c.jpg"}" alt="${"nusendra-tdd-fail"}"></p>
<p>Jika kalian mendapat hasil seperti ini, jangan bingung dan khawatir, memang TDD pada awalnya harus error seperti ini. Karena memang kita belum membuat route di backend nya. Nanti di part 2 akan kita perbaiki app kita agar pengujian yang dilakukan bisa lolos (passed).</p>
<p>Demikian part 1 ini teman teman, disini kita masih belum selesai ya, karena hasil dari pengujian kita masih pada tahap gagal / fail. Nanti di part 2 akan kita perbaiki. Semoga bermanfaat</p>`
  })}`;
});
var tddMenggunakanMochaDanChaiDiNodejsPart1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Tdd_menggunakan_mocha_dan_chai_di_nodejs_part_1,
  metadata: metadata$V
});
var metadata$U = {
  "draft": false,
  "title": "TDD Menggunakan Mocha dan Chai di Nodejs - Part 2",
  "date": "2018-09-23T15:32:10.000Z",
  "tags": ["typescript", "expressjs", "nodejs"],
  "description": "Implementasi konsep Test Driven Development (TDD) menggunakan Mocha dan Chai di Nodejs",
  "slug": "tdd-menggunakan-mocha-dan-chai-di-nodejs-part-2"
};
var Tdd_menggunakan_mocha_dan_chai_di_nodejs_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$U), {}, {
    default: () => `<p>Melanjutkan dari postingan part 1 <a href="${"https://nusendra.com/post/tdd-menggunakan-mocha-dan-chai-di-nodejs-part-1"}" rel="${"nofollow"}">disini</a>, kita akan melanjutkan implementasi konsep TDD menggunakan Mocha dan Chai di nodejs. Pada tulisan part 1, kita sudah bikin testing nya (pengujian pendaftaran user dan pengujian user tidak bisa daftar jika username sudah ada). Maka pada part 2 ini kita akan memperbaiki app kita agar lolos pengujian (passed). Baik, mari kita lihat kembali hasil test dari pengujian di part 1</p>
<p><img src="${"https://farm2.staticflickr.com/1917/44136674284_0665742a57_c.jpg"}" alt="${"nusendra-tdd-fail"}"></p>
<p>Disini dikatakan bahwa pengujian kedua nya gagal karena di masing - masing pengujian tidak mendapatkan response apapun, karena memang di app kita belum menambahkan fitur registrasi. Yuk kita perbaiki satu satu. Pertama kita buat dahulu file model nya. </p>
<p><code>// File /src/models/User.ts</code></p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Schema<span class="token punctuation">,</span> model<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'mongoose'</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> UserSchema<span class="token operator">:</span> Schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  name<span class="token operator">:</span> String<span class="token punctuation">,</span>
  dateOfBirth<span class="token operator">:</span> Date<span class="token punctuation">,</span>
  address<span class="token operator">:</span> String<span class="token punctuation">,</span>
  username<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    type<span class="token operator">:</span> String<span class="token punctuation">,</span>
    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    unique<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  password<span class="token operator">:</span> String<span class="token punctuation">,</span>
  createdAt<span class="token operator">:</span> Date<span class="token punctuation">,</span>
  updatedAt<span class="token operator">:</span> Date<span class="token punctuation">,</span>

<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'User'</span><span class="token punctuation">,</span> UserSchema<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada model diatas kita buat sebuah aturan bahwa username bersifat unique, yang artinya tidak boleh ada username yang sama di dalam collection. Setelah itu silakan temen temen jalankan test nya lagi dengan mengetik</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn test</code>`}<!-- HTML_TAG_END --></pre>
<p>Bisa dipastikan bahwa test nya gagal, karena kita belum mengatur routes nya. Kemudian kita masuk ke file router nya. </p>
<p><code>// File /src/routers/UserRouter.ts</code></p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Router<span class="token punctuation">,</span> Request<span class="token punctuation">,</span> Response <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> User <span class="token keyword">from</span> <span class="token string">'../../models/User'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserRouter</span> <span class="token punctuation">&#123;</span>
  router<span class="token operator">:</span> Router<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router <span class="token operator">=</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function-variable function">store</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
        name<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
        password<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password
      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">User </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>result<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> berhasil di daftarkan</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">const</span> userRoutes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userRoutes<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> userRoutes<span class="token punctuation">.</span>router<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Perhatikan bagian ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">public</span> <span class="token function-variable function">store</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      name<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
      password<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">User </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>result<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> berhasil di daftarkan</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Di method ini kita sudah bikin sebuah fungsi untuk melakukan registrasi user. Nah sekarang kita coba jalankan lagi test nya.</p>
<p><img src="${"https://farm2.staticflickr.com/1951/30985883348_be6b25ffb3_c.jpg"}" alt="${"nusendra-tdd-fail"}"></p>
<p>Keren, kita sudah berhasil meloloskan pengujian pertama, yaitu pendaftaran user. Namun pada pengujian kedua kita gagal. Mari kita perbaiki kembali  router kita. Masuk ke dalam file <code>UserRouter.ts</code>, kemudian tambahkan kode berikut dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">public</span> <span class="token function-variable function">store</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> exists <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>exists<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      name<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
      password<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">User </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>result<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> berhasil di daftarkan</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">User </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>exists<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> sudah terdaftar, silakan pakai username yang lain</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sekarang kita coba uji kembali</p>
<p><img src="${"https://farm2.staticflickr.com/1901/44808553362_ece3ed26b8_c.jpg"}" alt="${"nusendra-tdd-pass"}"></p>
<p>Mantab, sekarang pengujiannya sudah berhasil lolos. Langkah selanjut nya kita tinggal merefactor atau menyederhanakan kode kita agar semakin mudah dibaca dan lebih mudah dalam maintenance.</p>
<hr>
<p>Demikian postingan lanjutan kali ini. Semoga temen temen sekalian faham, dan jika masih ada yang bingung silakan tanya tanya langsung di kolom komentar, atau bisa via telegram saya. Semoga bermanfaat, dan makasih udah mampir kesini :)</p>`
  })}`;
});
var tddMenggunakanMochaDanChaiDiNodejsPart2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Tdd_menggunakan_mocha_dan_chai_di_nodejs_part_2,
  metadata: metadata$U
});
var metadata$T = {
  "title": "Memproteksi Laravel web App dari Serangan CSRF",
  "date": "2017-12-04T07:25:30.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "CSRF merupakan salah satu ancaman besar bagi keamanan suatu website. Nah, di Laravel sendiri om Taylor udah nyediain fitur yang keren buat menanggulangi hal ini. Yuk simak penjelasannya.",
  "slug": "memproteksi-laravel-web-app-dari-serangan-csrf"
};
var Memproteksi_laravel_web_app_dari_serangan_csrf = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$T), {}, {
    default: () => `<p>Memproteksi laravel app dari serangan CSRF sangatlah penting dan wajib diimplementasikan di setiap aksi post / put / patch.  CSRF sendiri adalah cross site request forgery, apa maksudnya nih?? Maksudnya adalah csrf ini merupakan salah satu lubang di web app yang bekerja dengan cara mengeksploitasi suatu aksi dan eksploitasi ini memanfaatkan otentikasi milik salah satu user.</p>
<p>Setelah kita tau bahaya nya si csrf, maka om Taylor dengan kebaikan hati nya menciptakan fitur di Laravel untuk mengatasi hal seperti ini. Cara mengimplementasikan ini cukup mudah dan ada beberapa langkah. Simak langkah nya dibawah ini.</p>
<p>Setiap kali kalian membuat suatu form di html (blade), jangan lupa untuk menaruh kode csrf_field dibawah ini didalam tag form kalian</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token operator">&lt;</span>form method<span class="token operator">=</span><span class="token string double-quoted-string">"POST"</span> action<span class="token operator">=</span><span class="token string double-quoted-string">"/post"</span><span class="token operator">></span>
    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token function">csrf_field</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
    <span class="token operator">...</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu temen - temen juga harus membuat meta tag untuk menangani request header X-CSRF Token. Caranya, silakan temen - temen copas script dibawah ini, dan taruh di header web.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string double-quoted-string">"csrf-token"</span> content<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123; csrf_token() &#125;&#125;"</span><span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Javascript untuk Posting Data</h2>
<p>Untuk mengirimkan data dari view ke controller, kita bisa menggunakan method POST, PUT, dan DELETE. Method POST / PUT / DELETE ini wajib dipakai ketika kita hendak menginput data baru / mengupdate data / menghapus data dari database. Nah kebutuhan passing data ini memerlukan sebuah HTTP Client untuk melaksanakan tugasnya. Kita bisa pakai jQuery / Axios / Vue - resource, dll untuk melakukan aksi ini.</p>
<p>Nah karena Laravel ini memproteksi diri dari serangan CSRF, maka kita harus mencantumkan token di header HTTP Client kita. Berikut ini contoh nya.</p>
<p>Pada jQuery bisa pakai seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">ajaxSetup</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token string">'X-CSRF-TOKEN'</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'meta[name="csrf-token"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'content'</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sedangkan Axios bisa pakai dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">window<span class="token punctuation">.</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'X-Requested-With'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> token <span class="token operator">=</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'meta[name="csrf-token"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
   window<span class="token punctuation">.</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'X-CSRF-TOKEN'</span><span class="token punctuation">]</span> <span class="token operator">=</span> token<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
   console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah dengan adanya pengaturan headers di HTTP client kita, maka kita bisa secara leluasa memanipulasi database kita dengan aman dan nyaman, karena HTTP client kita sudah dikenali (Karena membawa informasi berupa token yang ada di headers) oleh sistem Laravel.</p>
<hr>
<p>Sekian penjelasan singkat dari saya, semoga membantu temen temen yang lagi belajar Laravel. Silakan taruh komentar dibawah jika ada sesuatu yang kurang difahami. Matur nuwun :-)</p>`
  })}`;
});
var memproteksiLaravelWebAppDariSeranganCsrf = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Memproteksi_laravel_web_app_dari_serangan_csrf,
  metadata: metadata$T
});
var metadata$S = {
  "title": "Berkomunitaslah, Dapatkan dan Sebarkan Manfaat",
  "date": "2018-08-20T14:06:17.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "Sebagai programmer kita wajib untuk berkomunitas untuk mendapatkan berbagai manfaat. Salah satu nya bersosialisasi",
  "slug": "berkomunitaslah-dapatkan-dan-sebarkan-manfaat"
};
var Berkomunitaslah_dapatkan_dan_sebarkan_manfaat = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$S), {}, {
    default: () => `<p>Komunitas merupakan faktor yang sangat penting bagi keberlangsungan hidup kita, baik secara real maupun digital. Kita hidup sebagai makhluk yang bersosial sepatutnya juga menjaga kehidupan sosial kita. Komunitas bisa meliputi banyak hal, contoh nya komunitas pecinta motor, komunitas pendaki gunung, dan yang sekarang akan saya bahas adalah komunitas programming.</p>
<p>Jika kita lihat dari beberapa contoh diatas, bisa kita tarik kesimpulan bahwa komunitas merupakan perkumpulan orang orang yang memiliki visi, misi, dan hobi yang sama. Saya pribadi menjadikan kegiatan / aktivitas ngoding sebagai hobi, lebih jauh lagi saya sudah menempa mindset saya bahwa ngoding ini adalah sebuah permainan. Kita gak akan merasa bosan ataupun lelah jika melakukan kegiatan yang menyenangkan, yakni bermain. Maka disini saya menganggap bahwa ngoding itu adalah sebuah permainan yang harus dimenangkan, <em>nerd</em> banget yak? haha</p>
<p>Kita balik lagi, setiap hobi pasti ada aja komunitas nya, dari hobi yang keren sampai hobi yang aneh. Di dalam komunitas, kita bisa saling membagikan pengalaman, melakukan suatu kegiatan bareng, mendapatkan solusi dari anggota komunitas lain, ketemu dengan orang baru, mendapat teman baru, dan sebagainya. Nah yang akan kita bahas kali ini adalah tentang komunitas IT, yaitu programming.</p>
<p>Bukan rahasia lagi kalau programmer itu lebih condong ke arah introvert, tapi gak semua begitu ya (atau mungkin saya salah tangkap aja, karena saya sendiri juga seorang introvert). Apalagi programmer itu dikenal dengan \u201Corang aneh\u201D yang sering ngobrol dengan komputer. Disinilah manfaat komunitas, di dalam komunitas kita bisa berkomunikasi dengan orang lain yang mempunyai \u201Chobi\u201D yang sama, bertemu dengan manusia nyata di kehidupan nyata, dan bersosialisasi. Ingat, kamu ga sendirian kok. Ada komunitas yang akan selalu menemani kita :D</p>
<p>Didalam komunitas programming, kita bisa mendapatkan banyak sekali manfaat. Berikut ini contohnya :</p>
<h2>Solusi dari permasalahan kita</h2>
<p>Di dalam komunitas programming, kita bisa tanya apapun yang menjadi keluhan kita. Misalnya kita stuck di suatu baris kode, kita udah cari - cari di gugel, dan ga menemukan apa yang kita cari, atau mungkin malah bingung. Nah disini kita bisa mendapat manfaat dari komunitas, tanya lah apa yang kamu ingin tanya kan, tapi ingat harus mematuhi rules yang berlaku ya serta jaga ucapan dan sikap kita. Karena kalau bertanya dengan sikap yang ngawur, bisa bisa kita gak akan dapat bantuan apapun.</p>
<h2>Meetup dengan orang - orang baru</h2>
<p>Terbiasa duduk sendiri di depan laptop / PC adalah makan sehari hari seorang programmer. Seringkali di dalam komunitas programming terdapat meetup event yang perlu kita datangi, untuk menambah wawasan dan teman baru.</p>
<h2>Dapet kerjaan</h2>
<p>Kadang di dalam komunitas programming juga ada yang share lowongan kerja, mulai dari freelance, onsite maupun remote. Kita bisa coba untuk melamar kesana, lumayan kan kalo dapet project / kerjaan :D</p>
<h2>Melatih bersosialisasi</h2>
<p>Ini sangat penting banget buat orang - orang introvert seperti saya, dulu gak punya teman adalah budaya saya haha.</p>
<h2>Menambah Wawasan dan info terupdate</h2>
<p>Kita jadi tau teknologi apa yang sedang hits, teknologi apa aja yang bisa mempermudah kita dalam mendevelop sebuah program, dll. </p>
<p>Akhir kata, didalam komunitas jangan hanya mengambil manfaat saja, kita juga bisa harus memberi manfaat bagi orang lain. Apa saja yang terpikir dan mungkin pengalaman berharga kita, bisa kita share ke komunitas. Ingat, hidup cuma sekali, sebarkan manfaat kepada orang lain. Saya sendiri sangat sangat terbantu dan sangat mendapatkan manfaat dari komunitas.</p>
<hr>
<p>Nah itu tadi mungkin beberapa point tentang manfaat dari komunitas programming. Semoga bermanfaat buat temen - temen, mari berkomunitas !!</p>`
  })}`;
});
var berkomunitaslahDapatkanDanSebarkanManfaat = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Berkomunitaslah_dapatkan_dan_sebarkan_manfaat,
  metadata: metadata$S
});
var metadata$R = {
  "title": "Method Destroy di Controller Laravel 5 - Part 8",
  "date": "2017-12-31T06:46:59.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Method Destroy di Controller Laravel 5 merupakan salah satu dari keluarga besar yang bermarga CRUD. Method ini berfungsi untuk menghapus sebuah atau beberapa data sekaligus. Yuk mari kita cari tau..",
  "slug": "method-destroy-di-controller-laravel-5-part-8"
};
var Method_destroy_di_controller_laravel_5_part_8 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$R), {}, {
    default: () => `<p>Method terakhir yang akan saya bahas disini adalah method destroy di controller laralel 5. Method destroy ini berfungsi untuk menghapus row berdasarkan id yang dicari. Bisa juga sih langsung menghapus beberapa / banyak row. Tergantung situasi dan kondisi.</p>
<p>Baiklah kita langsung saja melangkah ke baris kode kita.</p>
<p>Pertama silakan temen - temen buat route untuk menangani proses hapus data ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@destroy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Atau sangat disarankan untuk menggunakan fitur resource, agar script di route tidak berantakan</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian lanjut ke Controller kalian dan edit kodenya seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">destroy</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
   <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token variable">$model</span><span class="token operator">-></span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string single-quoted-string">'delete sukses'</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>That\u2019s it !! Cuma gitu doang kok. Jadi bagaimana cara pengimplementasiannya? Misalkan temen temen untuk melakukan manipulasi data menggunakan ajax (jQuery, superagent, vue-resource, atau axios) bisa menggunakan method delete. Tentunya hal ini akan saya bahas di postingan kedepan.</p>
<hr>
<p>Akhir kata, semoga pembahasan tentang controller yang saya bagi menjadi beberapa part ini bisa berguna buat temen - temen yang sedang belajar. Terima kasih sudah membaca :-)</p>`
  })}`;
});
var methodDestroyDiControllerLaravel5Part8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_destroy_di_controller_laravel_5_part_8,
  metadata: metadata$R
});
var metadata$Q = {
  "draft": false,
  "title": "Membuat RBAC Sendiri : Backend Response - Part 2",
  "date": "2019-02-03T14:55:37.000Z",
  "tags": ["opini", "tips"],
  "description": "Memberikan response yang dibutuhkan oleh Frontend untuk rendering menu RBAC.",
  "slug": "membuat-rbac-sendiri-backend-response-part-2"
};
var Membuat_rbac_sendiri_backend_response_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$Q), {}, {
    default: () => `<p>Melanjutkan dari postingan <a href="${"https://nusendra.com/post/membuat-rbac-sendiri-konsep-part-1"}" rel="${"nofollow"}">part 1</a>, kali ini kita akan belajar bagaimana mengimplementasi kan konsep kita di aplikasi yang sesungguh nya. Di part 1 saya bilang untuk backend saya skip saja, ah oke saya akan mengingkari nya :D. Di part 2 ini saya akan mulai dari backend yang akan saya paparkan secara sederhana dan simple saja. Jadi pada backend ini kita akan membuat fungsi login, yang mana jika user berhasil login, maka user akan mendapatkan detail si user tersebut (nama, username, jabatan, token, write_menu, dan readonly_menu). Jadi ketika frontend mendapatkan response dari backend yang berupa data data tersebut, nanti nya tinggal urusan frontend me render menu menu nya (sesuai dengan user role).</p>
<p>Oh iya, untuk kasus RBAC ini kita bedakan ya antara backend dan frontend nya (multi repo).</p>
<h2>Backend</h2>
<p>Bagi teman teman yang pakai Laravel / Lumen, kurang lebih proses login nya seperti ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php">// UserController.php

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Support<span class="token punctuation"></span>Facades<span class="token punctuation"></span>Hash</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Http<span class="token punctuation"></span>Request</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation"></span>User</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">AuthController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'jabatan'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Hash</span><span class="token operator">::</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token property">password</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">'api_token'</span>     <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token function">createToken</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">.</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token property">accessToken</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'id'</span>            <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'name'</span>          <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'username'</span>      <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'jabatan'</span>       <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">jabatan</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'write_menu'</span>    <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">write_menu</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">'readonly_menu'</span> <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">readonly_menu</span>
                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kalian pakai Nodejs (Typescript), mungkin kurang lebih seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token comment">// UserService.ts</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> knex <span class="token keyword">from</span> <span class="token string">'../database/knex'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">public</span> <span class="token function">findOne</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> knex<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk Controller nya seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token comment">// UserController.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Request<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> NextFunction <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bcrypt <span class="token keyword">from</span> <span class="token string">'bcrypt'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> jwt <span class="token keyword">from</span> <span class="token string">'jsonwebtoken'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> User <span class="token keyword">from</span> <span class="token string">'../../services/UserService'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">public</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">const</span> _user<span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
        username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username
      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>_user<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        bcrypt<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password<span class="token punctuation">,</span> _user<span class="token punctuation">.</span>password<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> message<span class="token operator">:</span> <span class="token string">'Auth failed'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">&#125;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">const</span> token<span class="token operator">:</span> any <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
              pin<span class="token operator">:</span> _user<span class="token punctuation">.</span>password<span class="token punctuation">,</span>
              id<span class="token operator">:</span> _user<span class="token punctuation">.</span>username
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"secret"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
              api_token<span class="token operator">:</span> token<span class="token punctuation">,</span>
              id<span class="token operator">:</span> _user<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
              name<span class="token operator">:</span> _user<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
              username<span class="token operator">:</span> _user<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
              write_menu<span class="token operator">:</span> _user<span class="token punctuation">.</span>write_menu<span class="token punctuation">,</span>
              readonly_menu<span class="token operator">:</span> _user<span class="token punctuation">.</span>readonly_menu<span class="token punctuation">,</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> message<span class="token operator">:</span> <span class="token string">'Password yang anda masukkan salah'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> message<span class="token operator">:</span> <span class="token string">'User tidak ditemukan'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah dari dua contoh diatas, ketika login berhasil, maka frontend akan mendapatkan sebuah response yang berisi credential user nya, dimana isi nya adalah seperti token, name, jabatan, dan menu apa saja yang boleh diakses dan menu saja yang hanya bisa dibaca.</p>
<h2>Kesimpulan</h2>
<p>Artikel ini hanya menjelaskan secara garis besar nya saja, untuk implementasi secara real nya mungkin ada beberapa perbedaan. Seperti ketika kita pakai Nuxtjs dengan Auth Module nya (Di part selanjutnya saya akan menjelaskan ini), ini akan berbeda dengan metode diatas. Proses login hanya akan me return token saja, sedangkan untuk mendapatkan menu akses si user, perlu tambahan endpoint lagi.</p>
<hr>
<p>Segini dulu untuk hari ini, insya allah next saya akan paparkan rendering menu nya di frontend dengan Nuxtjs. Thanks udah mampir \u2026</p>`
  })}`;
});
var membuatRbacSendiriBackendResponsePart2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Membuat_rbac_sendiri_backend_response_part_2,
  metadata: metadata$Q
});
var metadata$P = {
  "title": "Method Create di Controller Laravel 5 - Part 3",
  "date": "2017-12-12T15:10:23.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Method Create di Controller Laravel berguna untuk menampilkan halaman form input data. Bagaimana cara penggunaan nya? Mari belajar bareng ...",
  "slug": "method-create-di-controller-laravel-5-part-3"
};
var Method_create_di_controller_laravel_5_part_3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $teks, $$unsubscribe_teks;
  $$unsubscribe_teks = subscribe(teks, (value) => $teks = value);
  $$unsubscribe_teks();
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$P), {}, {
    default: () => `<p>Setiap aktivitas CRUD di web app manapun membutuhkan halaman form untuk menginput data, nah disinilah kegunaan dari method create. Method ini berfungsi untuk menampilkan halaman input / insert data yang umumnya berupa form.</p>
<p>Yaa memang tidak semua aktivitas input data melalui halaman create (khusus), kadang ada juga app yang menginput data melalui pop up modal. Nah untuk kasus input data form yang berupa pop up modal, method create ini tidak dibutuhkan. Method create ini digunakan hanya ketika kita ingin membuat halaman form input data di halaman baru.</p>
<p>langsung saja ke contoh implementasi nya. Untuk bisa menggunakan method ini, pertama kita tentukan dulu route nya. Oh iya, jangan lupa untuk baca part sebelumnya ya, karena masih ada sangkut paut nya dengan post sebelumnya. Silakan baca di Part 1 dan Part 2. Yuk lanjut !!</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>atau</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/create'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@create'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>kedua route diatas sama saja. Saya merekomendasikan untuk pake yang pertama ya.</p>
<p>Kemudian kita bikin method create nya di controller.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$teks</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Ini adalah halaman create post"</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'CreatePost'</span><span class="token punctuation">,</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'teks'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu kita bisa mengakses nya melalui URL http://localhost/post/create. Kemudian silakan temen - temen create sebuah halaman view, misalnya CreatePost.blade.php. Jangan lupa untuk menampilkan teks yang di passing dari controller tadi ya. dengan cara @${escape({ $teks })}. Maka nanti temen temen akan mendapati tulisan \u201CIni adalah halaman create post\u201D di halaman CreatePost kalian.</p>
<hr>
<p>Akhir kata, semoga bermanfaat ya :-)</p>`
  })}`;
});
var methodCreateDiControllerLaravel5Part3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_create_di_controller_laravel_5_part_3,
  metadata: metadata$P
});
var metadata$O = {
  "title": "Method Update di Controller Laravel 5 - Part 7",
  "date": "2017-12-27T05:17:40.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Method Update data di Controller Laravel 5 sangat penting untuk dipelajari, karena method ini merupakan salah satu keluarga dari marga CRUD. Mari simak penjelasan singkat nya disini..",
  "slug": "method-update-di-controller-laravel-5-part-7"
};
var Method_update_di_controller_laravel_5_part_7 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$O), {}, {
    default: () => `<p>Setelah kita belajar method edit, lanjut kita belajar mengenai method update di Controller Laravel 5. Method update ini berfungsi untuk melakukan perubahan data yang ada di dalam database. Sebenarnya kita juga bisa sih melakukan update data di method store, tapi itu tidak direkomendasikan karena tujuan kita adalah menjadikan route kita RESTful.</p>
<p>Baiklah langsung saja ke koding. Pertama silakan temen - temen bikin route untuk handle update data ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post/&#123;id&#125;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@update'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Atau yang paling disarankan pakai resource route</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah kita menentukan route nya, sekarang kita lanjut ke Controller</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$model</span><span class="token operator">-></span><span class="token property">judul</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">judul</span><span class="token punctuation">;</span>
    <span class="token variable">$model</span><span class="token operator">-></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">;</span>
    <span class="token variable">$model</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">'success'</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasannya, function update ini menangkap request data dan post id yang dikirimkan oleh user.</p>
<blockquote><p>Untuk pengiriman datanya akan saya jelaskan nanti di postingan berikut nya yang membahas tentang CRUD. Pengiriman data ini bisa melalui ajax dengan method PUT.</p></blockquote>
<p>Setelah itu model post mencari data post dengan parameter id $id. Kemudian model post melakukan update data di masing - masing field yang sudah ditentukan. Setelah proses update selesai, controller akan mengembalikan / me-return kata \u2018success\u2019 yang nantinya response ini akan ditangkap oleh ajax (misalnya) dan mengeluarkan alert bahwa update data telah sukses.</p>
<hr>
<p>Demikian penjelasan singkat dari saya. Semoga bermanfaat bagi yang membacanya. Terima kasih \u2026</p>`
  })}`;
});
var methodUpdateDiControllerLaravel5Part7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_update_di_controller_laravel_5_part_7,
  metadata: metadata$O
});
var metadata$N = {
  "title": "REST API dengan Nodejs dan Typescript - part 1",
  "date": "2018-09-09T18:56:03.000Z",
  "tags": ["typescript", "expressjs", "nodejs"],
  "draft": false,
  "description": "Cara membuat REST API menggunakan Nodejs, Expressjs, Typescript dan MongoDB",
  "slug": "rest-api-dengan-nodejs-dan-typescript-part-1"
};
var Rest_api_dengan_nodejs_dan_typescript_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$N), {}, {
    default: () => `<p>Baik kali ini saya akan sharing sedikit bagaimana membuat REST API menggunakan Nodejs dan typescript. Sebagai informasi awal, NodeJS adalah runtime Javascript yang berjalan diatas mesin Javascript Chrome V8. Bagi kalian yang suka bikin frontend web pake javascript framework, maka tentunya dibagian backend paling enak dan cocok bisa pake Nodejs karena natively Nodejs menggunakan json sebagai komunikasi dan pertukaran data nya. Sedangkan TS (Typescript) sendiri adalah bahasa pemrograman berbasis javascript yang memiliki fitur strong-typing &amp; konsep pemrograman OOP klasik ( class, interface), cocok banget bagi kalian yang suka main OOP.</p>
<p>Pada bagian pertama ini saya akan menjelaskan terlebih dahulu environment dan packages apa saja yang akan kita pakai nanti. Secara garis besar di sisi environment kita akan menggunakan NodeJS sebagai backend server nya dan MongoDB sebagai database persistent nya. Untuk package standart kita akan pakai sebagai berikut:</p>
<ol><li>Typescript untuk superset javascript</li>
<li>Body Parser untuk parse body request</li>
<li>Compression untuk nodejs compression middleware</li>
<li>CORS untuk handle Cross Origin</li>
<li>Dotenv untuk mengatur environment variable</li>
<li>Express untuk framework nodejs</li>
<li>Helmet untuk pengaman express app</li>
<li>Mongoose untuk database ORM</li>
<li>Morgan untuk app logger</li>
<li>Nodemon untuk refresh otomatis server ketika ada perubahan file</li>
<li>Nah diatas itu penjelasan secara singkat, untuk lebih detail nya silakan gugling sendiri ya :-)</li></ol>
<p>Struktur project yang akan kita buat standart banget, seperti berikut ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">src
--models
----User.ts
--routers
----UserRoutes.ts
--index.ts
--server.ts
.env
package.json
tsconfig.json</code>`}<!-- HTML_TAG_END --></pre>
<p>Baik langsung saja kita mulai bikin struktur folder nya dulu ya. Oh iya, disini saya pake yarn. Kalo pake npm silakan sesuaikan sendiri ya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ mkdir node-express-typescript
$ cd node-express-typescript
$ mkdir src
$ mkdir src/models
$ touch src/models/User.ts
$ mkdir src/routers
$ touch src/models/UserRoutes.ts
$ touch src/index.ts
$ touch src/server.ts
$ touch .env
$ touch tsconfig.json</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah struktur folder sudah selesai dibuat, sekarang saat nya instalasi package nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add body-parser compression cors dotenv express helmet mongoose morgan nodemon --save</code>`}<!-- HTML_TAG_END --></pre>
<p>dan devdepencies nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add -D @types/compression @types/cors @types/express @types/helmet @types/mongoose @types/morgan @types/node typescript</code>`}<!-- HTML_TAG_END --></pre>
<p>Saya sudah bikin <a href="${"https://github.com/nusendra/nodejs-express-typescript"}" rel="${"nofollow"}">boilerplatenya</a>, jadi bisa langsung copy file package.json nya kemudian yarn install saja .</p>
<p>Setelah itu kita isi file tsconfig.json nya seperti berikut ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token punctuation">&#123;</span>
  <span class="token string">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"outDir"</span><span class="token operator">:</span> <span class="token string">"./build"</span><span class="token punctuation">,</span>
    <span class="token string">"module"</span><span class="token operator">:</span> <span class="token string">"commonjs"</span><span class="token punctuation">,</span>
    <span class="token string">"target"</span><span class="token operator">:</span> <span class="token string">"es6"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token string">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"./src"</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"node_modules"</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian isi file .env nya seperti berikut ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">USERNAME=USERNAME_MONGODB_KAMU
PASSWORD=PASSWORD_MONGODB_KAMU
HOST=HOST_DAN_PORT_MONGODB_KAMU
PORT=4444
DBNAME=NAMA_DATABASE_MONGODB_KAMU</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah part 1 ini sudah selesai kita buat. Di part 1 ini kita sudah bikin boilerplate untuk app nodejs kita. Dan lagi disini server kita masih belum bisa jalan ya. Akan kita lanjut di part berikut nya. Terima kasih sudah mampir teman teman, semoga bermanfaat</p>`
  })}`;
});
var restApiDenganNodejsDanTypescriptPart1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Rest_api_dengan_nodejs_dan_typescript_part_1,
  metadata: metadata$N
});
var metadata$M = {
  "title": "REST API dengan Nodejs dan Typescript - part 2",
  "draft": false,
  "date": "2018-09-16T22:57:57.000Z",
  "tags": ["typescript", "expressjs", "nodejs"],
  "description": "Cara membuat REST API menggunakan Nodejs, Expressjs, Typescript dan MongoDB",
  "slug": "rest-api-dengan-nodejs-dan-typescript-part-2"
};
var Rest_api_dengan_nodejs_dan_typescript_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$M), {}, {
    default: () => `<p>Artikel lanjutan tentang membuat REST API dengan Nodejs dan Typescript. Di part 2 ini kita akan setting app server core kita dan implementasi mongoose. Kita kilas balik lagi terlebih dahulu, berikut ini package yang akan saya gunakan dan script untuk menjalankan server kita</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token punctuation">&#123;</span>
  <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"Nodejs with TS"</span><span class="token punctuation">,</span>
  <span class="token string">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>
  <span class="token string">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>
  <span class="token string">"license"</span><span class="token operator">:</span> <span class="token string">"MIT"</span><span class="token punctuation">,</span>
  <span class="token string">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"test"</span><span class="token operator">:</span> <span class="token string">"mocha -r ts-node/register src/**/*.spec.ts"</span><span class="token punctuation">,</span>
    <span class="token string">"ts"</span><span class="token operator">:</span> <span class="token string">"tsc -w"</span><span class="token punctuation">,</span>
    <span class="token string">"server"</span><span class="token operator">:</span> <span class="token string">"nodemon ./build/index.js"</span><span class="token punctuation">,</span>
    <span class="token string">"start"</span><span class="token operator">:</span> <span class="token string">"tsc &amp;&amp; node ./build/index.js"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token string">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.18.3"</span><span class="token punctuation">,</span>
    <span class="token string">"compression"</span><span class="token operator">:</span> <span class="token string">"^1.7.3"</span><span class="token punctuation">,</span>
    <span class="token string">"cors"</span><span class="token operator">:</span> <span class="token string">"^2.8.4"</span><span class="token punctuation">,</span>
    <span class="token string">"dotenv"</span><span class="token operator">:</span> <span class="token string">"^6.0.0"</span><span class="token punctuation">,</span>
    <span class="token string">"express"</span><span class="token operator">:</span> <span class="token string">"^4.16.3"</span><span class="token punctuation">,</span>
    <span class="token string">"helmet"</span><span class="token operator">:</span> <span class="token string">"^3.13.0"</span><span class="token punctuation">,</span>
    <span class="token string">"mongoose"</span><span class="token operator">:</span> <span class="token string">"^5.2.13"</span><span class="token punctuation">,</span>
    <span class="token string">"morgan"</span><span class="token operator">:</span> <span class="token string">"^1.9.0"</span><span class="token punctuation">,</span>
    <span class="token string">"nodemon"</span><span class="token operator">:</span> <span class="token string">"^1.18.4"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token string">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"@types/chai"</span><span class="token operator">:</span> <span class="token string">"^4.1.4"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/chai-http"</span><span class="token operator">:</span> <span class="token string">"^3.0.5"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/compression"</span><span class="token operator">:</span> <span class="token string">"^0.0.36"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/cors"</span><span class="token operator">:</span> <span class="token string">"^2.8.4"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/express"</span><span class="token operator">:</span> <span class="token string">"^4.16.0"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/helmet"</span><span class="token operator">:</span> <span class="token string">"^0.0.40"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/mocha"</span><span class="token operator">:</span> <span class="token string">"^5.2.5"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/mongoose"</span><span class="token operator">:</span> <span class="token string">"^5.2.11"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/morgan"</span><span class="token operator">:</span> <span class="token string">"^1.7.35"</span><span class="token punctuation">,</span>
    <span class="token string">"@types/node"</span><span class="token operator">:</span> <span class="token string">"^10.9.4"</span><span class="token punctuation">,</span>
    <span class="token string">"chai"</span><span class="token operator">:</span> <span class="token string">"^4.1.2"</span><span class="token punctuation">,</span>
    <span class="token string">"chai-http"</span><span class="token operator">:</span> <span class="token string">"^4.2.0"</span><span class="token punctuation">,</span>
    <span class="token string">"mocha"</span><span class="token operator">:</span> <span class="token string">"^5.2.0"</span><span class="token punctuation">,</span>
    <span class="token string">"ts-node"</span><span class="token operator">:</span> <span class="token string">"^7.0.1"</span><span class="token punctuation">,</span>
    <span class="token string">"typescript"</span><span class="token operator">:</span> <span class="token string">"^3.0.3"</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Yang perlu diperhatikan selanjutnya adalah dibagian script. Disana ada 4 mode, penjabarannya sebagai berikut.</p>
<ol><li>test : Untuk melakukan unit testing dan TDD</li>
<li>ts : Untuk menjalankan compiler typescript, yang mana compiler ini akan mentransformasikan dari format ts ke js dan di simpan ke folder build.</li>
<li>server : Untuk menjalankan server kita (dengan hot reload, thanks nodemon !!)</li>
<li>start : Untuk deployment server production.</li></ol>
<p>Setelah semua sudah siap, mari kita lanjut ke tahap pembuatan core server nya. Karena pada part 1 kemarin kita sudah membuat file file kosong yang siap untuk diisi, maka selanjutnya kita hanya mengisi file kosong tersebut. Pertama buka file <code>src/server.ts</code> kemudian isi seperti ini.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> express <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> mongoose <span class="token keyword">from</span> <span class="token string">'mongoose'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bodyParser <span class="token keyword">from</span> <span class="token string">'body-parser'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> compression <span class="token keyword">from</span> <span class="token string">'compression'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> logger <span class="token keyword">from</span> <span class="token string">'morgan'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> helmet <span class="token keyword">from</span> <span class="token string">'helmet'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> cors <span class="token keyword">from</span> <span class="token string">'cors'</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dotenv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// server class</span>
<span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">public</span> app<span class="token operator">:</span> express<span class="token punctuation">.</span>Application<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> <span class="token constant">MONGO_URI</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">mongodb://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USERNAME</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PASSWORD</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DBNAME</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?authSource=admin</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'useCreateIndex'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token constant">MONGO_URI</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> useNewUrlParser<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">helmet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">'dev'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">compression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">'Hai ini adalah API menggunakan Nodejs dan Typescript'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>app<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada tahap / file ini, kita membuat sebuah file server dan memasukkan semua dependencies / package yang kita perlukan. Pada file ini kita hanya membuat satu route saja, yakni / . Setelah semua sudah siap, kita mulai isi file  <code>src/index.ts</code> sebagai main file yang berfungsi untuk menjalankan server kita.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> debug <span class="token keyword">from</span> <span class="token string">'debug'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> http <span class="token keyword">from</span> <span class="token string">'http'</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dotenv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> Server <span class="token keyword">from</span> <span class="token string">'./server'</span><span class="token punctuation">;</span>

<span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">'ts-express:server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token function">normalizePort</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Server<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'port'</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Server listening on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>Server<span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> onError<span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'listening'</span><span class="token punctuation">,</span> onListening<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">normalizePort</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> number <span class="token operator">|</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token operator">|</span> string <span class="token operator">|</span> boolean <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> port<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">?</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>port <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> port<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token operator">:</span> NodeJS<span class="token punctuation">.</span>ErrnoException</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>syscall <span class="token operator">!==</span> <span class="token string">'listen'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">const</span> bind <span class="token operator">=</span> <span class="token keyword">typeof</span> port <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">?</span> <span class="token string">'Pipe '</span> <span class="token operator">+</span> port <span class="token operator">:</span> <span class="token string">'Port '</span> <span class="token operator">+</span> port<span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">case</span> <span class="token string">'EACCES'</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>bind<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> requires elevated privileges</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">'EADDRINUSE'</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>bind<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> is already in use</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">onListening</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> addr <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> bind <span class="token operator">=</span> <span class="token keyword">typeof</span> addr <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">pipe </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>addr<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>addr<span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>
  <span class="token function">debug</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Listening on </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>bind<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada file ini kita memanggil file server untuk dijalankan, selain itu file ini juga akan menangani port mana yang sudah terbuka.</p>
<p>Pada tahap ini, server kita harusnya sudah bisa jalan. Caranya bagaimana?? Pertama kita siapkan dulu 2 terminal yang sudah berada di lokasi folder project kita. Terminal pertama ketikkan</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn ts</code>`}<!-- HTML_TAG_END --></pre>
<p>perintah diatas untuk menjalankan compiler typescript. Kemudian pada terminal kedua ketikkan sebagai berikut</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn server</code>`}<!-- HTML_TAG_END --></pre>
<p>perintah diatas untuk menjalankan server kita dengan hot reload.</p>
<p>Setelah selesai menjalankan server, coba buka browser anda dan ketikkan <code>localhost:4444</code> di url nya, harusnya di browser kalian akan tampil <code>Hai ini adalah API menggunakan Nodejs dan Typescript</code>.</p>
<p>Jika browser kalian tampil seperti diatas, berarti server kalian sudah berjalan dengan sempurna. Pada part 3, kita akan lanjut menggunakan router dan mongoose agar kodingan kita semakin terstruktur dan mudah untuk digunakan.</p>
<p>Sekian dari saya, terima kasih udah mampir\u2026</p>`
  })}`;
});
var restApiDenganNodejsDanTypescriptPart2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Rest_api_dengan_nodejs_dan_typescript_part_2,
  metadata: metadata$M
});
var metadata$L = {
  "draft": false,
  "title": "REST API dengan Nodejs dan Typescript - part 3",
  "date": "2018-09-17T07:48:05.000Z",
  "tags": ["typescript", "expressjs", "nodejs"],
  "description": "Cara membuat REST API menggunakan Nodejs, Expressjs, Typescript dan MongoDB",
  "slug": "rest-api-dengan-nodejs-dan-typescript-part-3"
};
var Rest_api_dengan_nodejs_dan_typescript_part_3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$L), {}, {
    default: () => `<p>Di penghujung tutorial series ini, kita menginjak part 3 cara membuat REST API dengan Nodejs dan Typescript. Kita kilas balik sebentar, pada <a href="${"https://nusendra.com/post/rest-api-dengan-nodejs-dan-typescript-part-1"}" rel="${"nofollow"}">part 1</a> kita sudah belajar bagaimana memulai membuat project ini, dengan menambahkan dependencies yang diperlukan. Kemudian lanjut ke <a href="${"https://nusendra.com/post/rest-api-dengan-nodejs-dan-typescript-part-1"}" rel="${"nofollow"}">part 2</a> kita membuat file core server yang mana ini akan menjalankan server REST API kita. Nah di penghujung tutorial series part 3 ini kita akan belajar bareng bagaimana membuat routes dan model mongodb nya.</p>
<p>Pertama mari kita buka file yang sudah kita buat seperti di part 1. Kita buka <code>src/models/user.ts</code> kemudian isikan seperti berikut ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Schema<span class="token punctuation">,</span> model<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'mongoose'</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> UserSchema<span class="token operator">:</span> Schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  name<span class="token operator">:</span> String<span class="token punctuation">,</span>
  dateOfBirth<span class="token operator">:</span> Date<span class="token punctuation">,</span>
  address<span class="token operator">:</span> String<span class="token punctuation">,</span>
  username<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    type<span class="token operator">:</span> String<span class="token punctuation">,</span>
    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    unique<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  password<span class="token operator">:</span> String<span class="token punctuation">,</span>
  createdAt<span class="token operator">:</span> Date<span class="token punctuation">,</span>
  updatedAt<span class="token operator">:</span> Date<span class="token punctuation">,</span>

<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'User'</span><span class="token punctuation">,</span> UserSchema<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada file model ini kita membuat sebuah model dari collection users. Setelah itu kita buat file route nya, buka file <code>src/routers/UserRoutes.ts</code> kemudian isikan seperti berikut ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Router<span class="token punctuation">,</span> Request<span class="token punctuation">,</span> Response <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> User <span class="token keyword">from</span> <span class="token string">'../models/User'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserRouter</span> <span class="token punctuation">&#123;</span>
  router<span class="token operator">:</span> Router<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router <span class="token operator">=</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">index</span><span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">store</span><span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      name<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      username<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
      password<span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">User </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>result<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> berhasil dibuat</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">update</span><span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// silakan pelajari update data</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token keyword">delete</span><span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// silakan pelajari delete data</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">const</span> userRoutes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userRoutes<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> userRoutes<span class="token punctuation">.</span>router<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada file ini kita buat router untuk REST API nya. Disini saya hanya mencontohkan method store saja, sisa nya temen temen bisa pelajari sendiri ya :-). Penjelasannya, pertama class UserRouter memanggil constructor routes nya, dimana function routes ini sebagai pendeklarasi untuk menuju ke method mana ketika ada request yang masuk.</p>
<p>Nah untuk models dan routes sudah siap, sekarang kita kembali file <code>src/server.ts</code> untuk mengimportkan router kita. Tambahkan kodingan seperti berikut</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> express <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> mongoose <span class="token keyword">from</span> <span class="token string">'mongoose'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bodyParser <span class="token keyword">from</span> <span class="token string">'body-parser'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> compression <span class="token keyword">from</span> <span class="token string">'compression'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> logger <span class="token keyword">from</span> <span class="token string">'morgan'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> helmet <span class="token keyword">from</span> <span class="token string">'helmet'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> cors <span class="token keyword">from</span> <span class="token string">'cors'</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dotenv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// import router</span>
<span class="token keyword">import</span> UserRouter <span class="token keyword">from</span> <span class="token string">'./routers/UserRouter'</span><span class="token punctuation">;</span>  <span class="token comment">// Tambahkan baris ini</span>

<span class="token comment">// server class</span>
<span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">public</span> app<span class="token operator">:</span> express<span class="token punctuation">.</span>Application<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> <span class="token constant">MONGO_URI</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">mongodb://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USERNAME</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PASSWORD</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DBNAME</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?authSource=admin</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'useCreateIndex'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token constant">MONGO_URI</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> useNewUrlParser<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">helmet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">'dev'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">compression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">public</span> <span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">'Catatan Keuangan Rest API'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/users'</span><span class="token punctuation">,</span> UserRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Tambahkan baris ini</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>app<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pada file server ini kita sudah menambahkan router untuk model user. Silakan temen temen run server nya.</p>
<p>Pertama kita siapkan dulu 2 terminal yang sudah berada di lokasi folder project kita. Terminal pertama ketikkan</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn ts</code>`}<!-- HTML_TAG_END --></pre>
<p>perintah diatas untuk menjalankan compiler typescript. Kemudian pada terminal kedua ketikkan sebagai berikut</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn server</code>`}<!-- HTML_TAG_END --></pre>
<p>perintah diatas untuk menjalankan server kita dengan hot reload.</p>
<p>Kemudian silakan temen temen akses ke <code>localhost:4444/users</code>, jika kalian menemukan response nya seperti ini <code>[]</code> berarti server kita sudah sukses terhubung dengan mongodb. Nah sekarang coba kita post data untuk registrasi user (misalnya)</p>
<p>Buka Postman, ubah methode nya ke <code>POST</code> dan arahkan url nya ke <code>localhost:4444/users</code>, setelah itu masuk ke section body, pilih radio button <code>raw</code> dan set tipe raw nya menjadi ,JSON (aplication/json). isikan data json nya seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token punctuation">&#123;</span>
    <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"andra"</span><span class="token punctuation">,</span>
    <span class="token string">"username"</span><span class="token operator">:</span> <span class="token string">"nusendra"</span><span class="token punctuation">,</span>
    <span class="token string">"password"</span><span class="token operator">:</span> <span class="token string">"password"</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jika berhasil anda akan mendapatkan response code 200. Kemudian silakan cek ke database mongodb anda, harus nya sih sudah  berhasil ya. Kalau belum berhasil mungkin ada beberapa langkah yang terlewat, kalian temen temen bisa komentar dibawah untuk tanya tanya dan diskusi mengenai topik kita kali ini.</p>
<p>Silakan clone repo tutorial ini kesini <a href="${"https://github.com/nusendra/nodejs-express-typescript"}" rel="${"nofollow"}">https://github.com/nusendra/nodejs-express-typescript</a></p>
<p>Makasih udah mampir, semoga bermanfaat\u2026</p>`
  })}`;
});
var restApiDenganNodejsDanTypescriptPart3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Rest_api_dengan_nodejs_dan_typescript_part_3,
  metadata: metadata$L
});
var metadata$K = {
  "title": "Menampilkan data polymorphic tanpa eloquent",
  "date": "2018-05-23T04:21:02.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Menampilkan data polymorphic tanpa eloquent gampang - gampang susah. Kalo mau nampilin data polymorphic kita pake eloquent sih gampang gampang aja, tapi kalau tanpa eloquent gimana?",
  "slug": "menampilkan-data-polymorphic-tanpa-eloquent"
};
var Menampilkan_data_polymorphic_tanpa_eloquent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$K), {}, {
    default: () => `<p>Menampilkan data polymorphic tanpa eloquent gampang - gampang susah. Kalo mau nampilin data polymorphic kita pake eloquent sih gampang gampang aja, tapi kalau tanpa eloquent gimana? Sebuah tantangan tersendiri bagi kemampuan logika kita hehe. Polymorphic ini sendiri merupakan fitur dari Laravel yang dipakai di model dan eloquent ORM.</p>
<p>Memanggil data polymorphic pada dasarnya ga bisa di terapkan pakai Query Builder / raw query, karena fungsi ini miliknya eloquent. Maka disini kita akan pakai logika kita untuk handle problem ini</p>
<p>Oh iya, yang belum paham apa itu polymorphic, silakan baca baca dulu di docs nya <a href="${"https://laravel.com/docs/5.6/eloquent-relationships#polymorphic-relations"}" rel="${"nofollow"}">https://laravel.com/docs/5.6/eloquent-relationships#polymorphic-relations</a>. Di docs nya ini udah lengkap banget, jadi ga perlu saya jelaskan lagi tentang bagaimana cara konfigurasi nya, bikin table nya, insert data polymorphic nya, dll.</p>
<p>Table yang akan kita buat seperti ini struktur nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">invitations
------------
id | partner_id | partner_type | ....
------------</code>`}<!-- HTML_TAG_END --></pre>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">customers
------------
id | nama | alamat | ....
------------</code>`}<!-- HTML_TAG_END --></pre>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">suppliers
------------
id | nama | alamat | ....
------------</code>`}<!-- HTML_TAG_END --></pre>
<p>Oh iya, disini saya juga akan sertakan cara pagination secara manualnya. Jadi tidak hanya menampilkan data mentah, melainkan sudah ada paginasi nya. Pertama, di frontend saya mengirimkan url dibawah ini untuk request data nya</p>
<p><code>http://localhost:90/api/invitation?page=1&amp;filter=&amp;per_page=50</code></p>
<p>Kemudian di controller nya seperti ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Support<span class="token punctuation"></span>Facades<span class="token punctuation"></span>DB</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Pagination<span class="token punctuation"></span>Paginator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Pagination<span class="token punctuation"></span>LengthAwarePaginator</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>diatas ini kita panggil untuk pakai fungsi Query Builder dan paginator.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
  <span class="token variable">$customer</span> <span class="token operator">=</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'invitations as i'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'customers as c'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'c.id'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'i.partner_id'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.partner_type'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'customer'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">whereNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.deleted_at'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.*'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'c.nama'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$supplier</span> <span class="token operator">=</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'invitations as i'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'suppliers as s'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'s.id'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'i.partner_id'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.partner_type'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'supplier'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">whereNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.deleted_at'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'i.*'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'s.nama'</span><span class="token punctuation">)</span>
    <span class="token operator">-></span><span class="token function">union</span><span class="token punctuation">(</span><span class="token variable">$customer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token variable">$supplier</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'filter'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">filter</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">filter</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token operator">-></span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span>  <span class="token variable">$query</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">==</span> <span class="token variable">$filter</span> <span class="token operator">||</span>
      <span class="token variable">$query</span><span class="token operator">-></span><span class="token property">nama</span> <span class="token operator">==</span> <span class="token variable">$filter</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'per_page'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">per_page</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token variable">$currentPage</span> <span class="token operator">=</span> <span class="token class-name static-context">LengthAwarePaginator</span><span class="token operator">::</span><span class="token function">resolveCurrentPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$currentResults</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token operator">-></span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token property">page</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">per_page</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">per_page</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LengthAwarePaginator</span><span class="token punctuation">(</span><span class="token variable">$currentResults</span><span class="token punctuation">,</span> <span class="token variable">$supplier</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">per_page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$results</span><span class="token operator">-></span><span class="token function">withPath</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/api/invitation'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">links</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$results</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Pertama kita fetch dulu data customer nya, kemudian kita union dengan data supplier. Kemudian kita masukkan ke dalam collections agar bisa memakai fungsi filter nya. Kemudian kita setting pagination nya.</p>
<p>Demikian postingan kali ini, semoga bermanfaat bagi temen - temen yang bingung gimana cara nampilin polymorphic data tanpa eloquent.</p>`
  })}`;
});
var menampilkanDataPolymorphicTanpaEloquent = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Menampilkan_data_polymorphic_tanpa_eloquent,
  metadata: metadata$K
});
var metadata$J = {
  "title": "Method Index di Controller Laravel 5 - Part 2",
  "date": "2017-12-10T18:40:44.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Apa sih kegunaan method index di Controller Laravel 5 ?? Yuk mari kita belajar bareng - bareng mengenai method index di Controller, serta bagaimana menggunakannya.",
  "slug": "method-index-di-controller-laravel-5-part-2"
};
var Method_index_di_controller_laravel_5_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$J), {}, {
    default: () => `<p>Kali ini saya akan melanjutkan postingan tentang Controller di Laravel 5. Bagi yang belum baca dasar - dasar controller, bisa dilihat di postingan berikut ini <a href="${"https://nusendra.com/post/dasar-controller-di-laravel-5-part-1"}" rel="${"nofollow"}">Dasar Controller di Laravel 5 - Part 1</a>. Setelah kita pahami bersama bagaimana sebuah Controller bekerja, sekarang yuk mari kita lanjut selami salah satu method yang ada di Resource Controller, yaitu Index.</p>
<p>Method index ini bisa diartikan sebagai halaman awal / basis dari suatu fitur web. Misalnya dalam kasus Halaman Post, Index ini merupakan daftar seluruh / sebagian dari Post. Sehingga nantinya user / admin bisa mengolah halaman Post dengan klik tombol edit / tambah di halaman Post.</p>
<p>Nah untuk memanggil method index ini, kita perlu mendefinisikan di resource / get route, perhatikan script dibawah ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Atau jika memakai resource route, bisa juga seperti dibawah ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian kita coba modifikasi file PostController di bagian index nya, seperti dibawah ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini adalah halaman index"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kita mengakses url http://localhost/post, maka akan tampil halaman dengan tulisan \u201Cini adalah halaman index\u201D.</p>
<p>Tentunya jika temen - temen ingin menampilkan list / daftar dari post, kita bisa menampilkan nya dengan script yang lebih kurang seperti dibawah ini (tinggal disesuaikan saja dengan kondisi yang diinginkan).</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation"></span>App<span class="token punctuation"></span>Post</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'PostPage'</span><span class="token punctuation">,</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p><code>$post = \\App\\Post::all();</code> Pada baris ini, kita melakukan pemanggilan data dari model Post, yang kemudian kita dapatkan dalam bentuk object collection.</p>
<p><code>return view(&#39;PostPage&#39;,compact(&#39;post&#39;));</code> Kemudian pada baris ini, kita menampilkan halaman view Post kita, serta kita mem passing / melempar variable object dari model post tadi. Sehingga nantinya kita bisa menampilkan data di halaman view kita dari variable yang sudah didapat dari controller.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token operator">&lt;</span>ul<span class="token operator">></span>
@<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$post</span> <span class="token keyword">as</span> <span class="token variable">$singlePost</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token variable">$singlePost</span><span class="token operator">-></span><span class="token property">judul</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>
@<span class="token keyword">endforeach</span></code>`}<!-- HTML_TAG_END --></pre>
<hr>
<p>Demikian penjelasan singkat dari method Index yang ada di Controller. Tungguin postingan saya selanjutnya ya dan semoga bermanfaat bagi temen - temen yang sedang belajar framework Laravel 5.</p>`
  })}`;
});
var methodIndexDiControllerLaravel5Part2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_index_di_controller_laravel_5_part_2,
  metadata: metadata$J
});
var metadata$I = {
  "title": "Method Store di Controller Laravel 5 - Part 4",
  "date": "2017-12-15T03:49:06.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Method Store di Controller Laravel 5 berfungsi untuk melakukan aktivitas insert / create data ke dalam database. Bagaimana cara mengimplementasikannya? Disini kita akan belajar bareng.",
  "slug": "method-store-di-controller-laravel-5-part-4"
};
var Method_store_di_controller_laravel_5_part_4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$I), {}, {
    default: () => `<p>Setelah kita di post sebelumnya belajar bareng tentang method index dan method create yang mana keduanya adalah action dengan method GET. Sekarang mari kita lanjut belajar mengenal method Store di Controller, yang mana action ini menggunakan method POST sebagai HTTP request nya.</p>
<p>Method Store ini akan bekerja ketika kita mengirimkan data dengan method POST pada ajax misalnya. Langsung saja kita masuk ke contoh implementasi nya.</p>
<p>Pada route, siapkan baris kode seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>atau bisa juga seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@store'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kedua route bersifat sama, tapi karena dari awal kita udah sepakat untuk pake resource, maka lebih disarankan untuk pake route yang pertama.</p>
<p>Kemudian pada method store nya isi seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
   <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation"></span>App<span class="token punctuation"></span>Post</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token string single-quoted-string">'judul'</span> <span class="token operator">=></span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">judul</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string single-quoted-string">'sukses'</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Cara baca function diatas adalah, pertama function store mengambil semua data request dari user kedalam variable $request. kemudian model Post melakukan create data yang berisi judul, dimana judul itu diisi dengan variable <code>$request-&gt;judul</code>. Setelah model Post berhasil menginsert data ke database, method store ini mengembalikan kata sukses sebagai response, nah baru setelah itu view nya bertugas untuk menampilkan alert sukses.</p>
<p>Untuk tambahan pengetahuan temen temen yang baru belajar Laravel, didalam method store ini kita juga bisa menambahkan validasi data, yang mana jika data POST sudah memenuhi rules, maka model Post akan menyetujui untuk input data, dan jika rules nya tidak terpenuhi, maka function store ini mengirimkan pesan error ke view.</p>
<p>Untuk membuat form isian nya (sebelum di POST), akan saya jelaskan di postingan lain (karena sekarang kita lagi fokus membahas method store).</p>
<hr>
<p>Sekian dulu pembahasan mengenai Method Store di Controller Laravel 5, untuk tutorial CRUD (khususnya insert data) akan saya bahas di postingan mendatang. Makanya stay tuned ya guys #SokKayakAnakMuda hehe :P</p>`
  })}`;
});
var methodStoreDiControllerLaravel5Part4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_store_di_controller_laravel_5_part_4,
  metadata: metadata$I
});
var metadata$H = {
  "title": "Membersihkan Disk Usage pada Ubuntu Server",
  "date": "2020-09-04T06:00:00.000Z",
  "description": "Solusi untuk disk usage anda yang kepenuhan",
  "tags": ["DevOps"],
  "draft": false,
  "slug": "membersihkan-disk-usage-pada-ubuntu-server"
};
var Membersihkan_disk_usage_pada_ubuntu_server = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$H), {}, {
    default: () => `<p>Postingan kali ini sebenernya lebih ke catatan pribadi, tapi kalau memang bisa membantu temen - temen yang membutuhkan ya alhamdulillah :D</p>
<p>Kalian pasti sering / pernah mengalami disk usage di ubuntu server (warga cpanel minggir dulu) mengalami kepenuhan, biasanya diawali dengan lambat nya performa website kalian yang kadang tiba tiba not responding. Dan ketika kita cek masuk ke server dengan mengetikkan <code>df -h</code> ternyata disk usage nya udah 100% aja. Nah gimana cara bersihinnya?</p>
<p>Hal yang paling cepet dipikirin adalah dengan <code>apt autoremove</code>, namun yang satu ini ga bisa menghapus dengan efektif, hanya beberapa cache dan file yang ga dibutuhkan aja. Dibawah ini contoh setelah ngejalanin <code>apt autoremove</code>.</p>
<p><img src="${"https://res.cloudinary.com/nusendra/image/upload/v1599176040/blog/Screenshot_from_2020-09-04_06-31-19_dvcw6l.png"}" alt="${"Setelah Autoremove"}"></p>
<p>Kalau kita lihat di <code>/dev/sda1/</code> Ternyata ga sepenuhnya bersih, cuman bisa ngebersihin beberapa ratus MB saja. Nah biar lebih maksimal, coba pakai file dibawah ini agar membersihkan lebih hebat daripada sabun cuci piring biasa</p>
<pre>#!/bin/sh

#Check the Drive Space Used by Cached Files
du -sh /var/cache/apt/archives

#Clean all the log file
#for logs in \`find /var/log -type f\`;  do &gt; $logs; done

logs=\`find /var/log -type f\`
for i in $logs
do
&gt; $i
done

#Getting rid of partial packages
apt-get clean &amp;&amp; apt-get autoclean
apt-get remove --purge -y software-properties-common

#Getting rid of no longer required packages
apt-get autoremove -y


#Getting rid of orphaned packages
deborphan | xargs sudo apt-get -y remove --purge

#Free up space by clean out the cached packages
apt-get clean

# Remove the Trash
rm -rf /home/*/.local/share/Trash/*/**
rm -rf /root/.local/share/Trash/*/**

# Remove Man
rm -rf /usr/share/man/??
rm -rf /usr/share/man/??_*

#Delete all .gz and rotated file
find /var/log -type f -regex &quot;.*\\.gz$&quot; | xargs rm -Rf
find /var/log -type f -regex &quot;.*\\.[0-9]$&quot; | xargs rm -Rf

#Cleaning the old kernels
dpkg-query -l|grep linux-im*
#dpkg-query -l |grep linux-im*|awk ${escape("{print $2}")}
apt-get purge $(dpkg -l &#39;linux-*&#39; | sed &#39;/^ii/!d;/&#39;&quot;$(uname -r | sed &quot;s/\\(.*\\)-\\([^0-9]\\+\\)/\\1/&quot;)&quot;&#39;/d;s/^[^ ]* [^ ]* \\([^ ]*\\).*/\\1/;/[0-9]/!d&#39; | head -n -1) --assume-yes
apt-get install linux-headers-\`uname -r|cut -d&#39;-&#39; -f3\`-\`uname -r|cut -d&#39;-&#39; -f4\`

#Cleaning is completed
echo &quot;Cleaning is completed&quot;
</pre>
<p>Kemudian simpan di manapun, misalnya di /home. Jangan lupa juga jalanin</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo chmod +x clean.sh</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu untuk pakai nya tinggal begini aja</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ cd ~/home
$ sudo ./clean.sh</code>`}<!-- HTML_TAG_END --></pre>
<p>Hasilnya akan seperti dibawah ini, mantap kan? :D</p>
<p><img src="${"https://res.cloudinary.com/nusendra/image/upload/v1599176040/blog/Screenshot_from_2020-09-04_06-31-47_hbwbem.png"}" alt="${"Setelah Cleaning"}"></p>
<p>Semoga bermanfaat, terima kasih :)</p>`
  })}`;
});
var membersihkanDiskUsagePadaUbuntuServer = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Membersihkan_disk_usage_pada_ubuntu_server,
  metadata: metadata$H
});
var metadata$G = {
  "title": "Method Edit di Controller Laravel 5 - Part 6",
  "date": "2017-12-25T23:24:10.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Method edit hampir sama dengan method show. Mereka memang bersaudara, tetapi ada hal lain yang membedakan mereka. Mau tau perbedaan nya? Yuk mari belajar bareng disini.",
  "slug": "method-edit-di-controller-laravel-5-part-6"
};
var Method_edit_di_controller_laravel_5_part_6 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$G), {}, {
    default: () => `<p>Menginjak ke part 6 saya akan membahas tentang method edit di controller Laravel 5. Method ini berisi perintah yang akan menampilkan halaman edit data dari sebuah row. Sebenarnya method edit ini hampir sama dengan method show (baca Method Show di Controller Laravel 5 - Part 5), cuman bedanya kalau show hanya menampilkan data saja, sedangkan edit kita nanti bisa mengedit data nya. Bisa juga sih kita melakukan edit data menggunakan method show, tapi itu tidak disarankan dan memang bukan tempat nya.</p>
<p>Langsung aja yuk kita ke baris kode nya. Seperti biasa, siapkan sebuah route untuk handle method edit ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post/&#123;id&#125;/edit'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@edit'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>atau paling enak pakai route resource, sehingga seluruh method (CRUD) di controller sudah termasuk didalamnya</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah kita membuat route, mari lanjut ke controller. di PostController tambahkan / ubah method edit nya.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">edit</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'editPost'</span><span class="token punctuation">,</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu pada file editPost silakan isi minimal seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"text"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$model</span><span class="token operator">-></span><span class="token property">judul</span><span class="token punctuation">&#125;</span></span>&#125;"</span><span class="token operator">></span>
<span class="token operator">&lt;</span>textarea<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token variable">$model</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"submit"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"Submit"</span><span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian coba temen - temen ketik di browser localhost/post/1/edit maka nanti dalam input text di view nya akan muncul data yang siap untuk di edit.</p>
<hr>
<p>Sekian pembahasan singkat ini, semoga membantu temen - temen yang sedang belajar. Terima kasih sudah membaca :)</p>`
  })}`;
});
var methodEditDiControllerLaravel5Part6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_edit_di_controller_laravel_5_part_6,
  metadata: metadata$G
});
var metadata$F = {
  "title": "Method Show di Controller Laravel 5 - Part 5",
  "date": "2017-12-23T09:48:50.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Menampilkan detail dari sebuah data merupakan salah satu fitur dari sebuah web yang harus ada. Bagaimana cara implementasi nya? Saya akan memaparkan nya secara ringkas di postingan kali ini.",
  "slug": "method-show-di-controller-laravel-5-part-5"
};
var Method_show_di_controller_laravel_5_part_5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$F), {}, {
    default: () => `<p>Udah sekitar seminggu nih belum update blog hehe. Kali ini saya akan bahas sedikit tentang method show yang ada di Controller. Show ini berfungsi untuk menampilkan single row dari database. Single row disini maksudnya kita menampilkan detail data dari sebuah row. Contoh mudahnya, kita menampilkan blog post, menampilkan detail dari suatu barang di inventory, menampilkan user profile, dll.</p>
<p>Yuk langsung kita lanjut ke koding nya, biar tambah paham pengimplementasiannya.</p>
<p>Untuk route yang diperlukan untuk action show ini bisa menggunakan salah satu dibawah ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post/&#123;id&#125;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Atau yang paling saya sarankan memakai resource route seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jadi ketika user melakukan request (dengan cara klik sebuah tombol atau langsung masuk melalui URL) dengan alamat localhost/post/2, Maka controller di Laravel akan mengambil segment yang ada di route tersebut, yakni 2. Kemudian route mempassing segment tersebut ke method show.</p>
<p>Setelah itu tambahkan kode berikut ini di controller kalian.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SinglePost'</span><span class="token punctuation">,</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasan dari koding diatas adalah. Si method show menerima sebuah variable hasil dari segment tadi, yaitu angka 2. Kemudian controller melakukan pencarian data dengan parameter id  = 2. Setelah ditemukan object datanya, kemudian controller akan menampilkan view SinglePost dan melempar data object $model ke view tersebut.</p>
<p>Setelah itu buatlah sebuah file view untuk menampilkan detail dari sebuah post. Misalkan saja kita bikin dengan nama SinglePost.blade.php
Kemudian pada file ini silakan temen temen tambahkan koding seperti dibawah</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
Judul Post <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token variable">$model</span><span class="token operator">-></span><span class="token property">judul</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span>br<span class="token operator">></span>
Isi Content <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token variable">$model</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Dengan begitu halaman view SinglePost ini akan menampilkan judul dan content dari sebuah post yang memiliki id = 2.</p>
<hr>
<p>Nah sekian postingan kali ini. Semoga temen - temen yang lagi belajar Laravel bisa merasa terbantu. Makasih udah mau baca ya :-)</p>`
  })}`;
});
var methodShowDiControllerLaravel5Part5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Method_show_di_controller_laravel_5_part_5,
  metadata: metadata$F
});
var metadata$E = {
  "title": "Cara Mudah Mengurus atau Membuat Passport",
  "date": "2019-10-04T11:20:00.000Z",
  "description": "",
  "tags": ["opini"],
  "draft": false,
  "slug": "cara-mudah-mengurus-atau-membuat-passport"
};
var Cara_mudah_mengurus_atau_membuat_passport = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$E), {}, {
    default: () => `<p>Pergi keluar negeri untuk tujuan berlibur maupun ada pekerjaan memang menyenangkan, namun sebelum bisa bepergian keluar, ada beberapa hal yang wajib dipersiapkan terlebih dahulu, salah satunya adalah passport. Passport merupakan dokumen wajib yang harus dimiliki oleh para calon imigran yang akan berkelana di luar indonesia, berfungsi sebagai dokumen / kartu identitas kita selama berada di negeri orang (semacam pengganti KTP lah).</p>
<p>Nah kali ini saya mo share pengalaman saja bagaimana mudahnya membuat / mengurus passport di kantor imigrasi. Nah kebetulan lagi ada project dari Malaysia nih, karena sebelum nya belom pernah bepergian ke luar indonesia (anak rumahan banget anjir) yaodah terpaksa dah ngurus passport. Oke langsung aja, apa sih yang perlu siapin terlebih dahulu? Dokumen lo !! Berikut ini yang wajib temen - temen siapin.</p>
<h2>Siapin dulu nih</h2>
<ol><li>KTP</li>
<li>KK slank, canda. (Kartu Keluarga Kok..)</li>
<li>Akta Kelahiran (kera sakti ga punya ini, lahir dari batu)</li>
<li>Buku nikah (jomblo kelaut aje :P)</li>
<li>Ijazah (Ijazah TK)</li></ol>
<p>Untuk buku nikah sepertinya optional saja, selain itu semua nya wajib punya.</p>
<p>Habis tu, jangan lupa foto copy tuh semua dokumen nya. Foto copy di kertas A4, dan semua nya ga boleh di potong. KTP biasanya kan di potong tuh, itu ga usah dipotong, biarin aja di kertas gede, pala kang poto kopi nya aja yang dipotong. Oh iya, cuma perlu foto kopi 1x semua ya.</p>
<h2>Registrasi antrian</h2>
<p>Kalo udah, silakan buka <a href="${"https://antrian.imigrasi.go.id"}" rel="${"nofollow"}">web antrian imigrasi</a> atau install aplikasi <a href="${"https://play.google.com/store/apps/details?id=id.go.imigrasi.layananwni&hl=in"}" rel="${"nofollow"}">layanan passport online</a>. Registrasi antrian ini wajib ya, kalau kamu ga antri ga bisa masuk ke kantor imigrasi ini (tapi denger denger petugas nya bilang bisa masuk, tapi harus dateng sebelum jam 8 pagi). Sebagai catatan, kuota pendaftaran online nya sangat terbatas dan pembukaan / pengisian kuota bakal di buka dua minggu sekali (Dibuka di hari Jumat siang sekitar jam 1 sampai minggu sore sekitar jam 4). Jadi kalau kalian ketinggalan registrasi online, ya harus nunggu 2 minggu lagi LOL.</p>
<h2>Gimana Ngurus nya?</h2>
<p><img src="${"https://ik.imagekit.io/nusendra/IMAGE_2019-10-04_13_13_20_sPPTgn77-.jpg"}" alt="${"antrian imigrasi nusendra"}"></p>
<p>Ngurus bukan kurus ya haha. Jadi pertama kalian registrasi dulu melalui aplikasi / web diatas. Kalau udah ntar dapet QR code / bukti bahwa udah registrasi. Kalau udah ntar datang ke kantor imigrasi sesuai dengan dimana kalian mendaftar. Sebagai contoh disini saya mengurus passport ke kantor imigrasi juanda surabaya.</p>
<p>Jangan lupa untuk bawa ballpoint &amp; materai 6.000 karena nanti bakal disuruh untuk ngisi form. Setelah mengisi form, nanti akan diarahkan oleh petugas nya untuk bagaimana kelanjutannya. Oh iya, disana tempat nya nyaman kok, ada kue, kopi dan teh gratis juga.</p>
<p><img src="${"https://ik.imagekit.io/nusendra/IMAGE_2019-10-04_13_12_57_699DR6fSu.jpg"}" alt="${"cafe gratis kantor imigrasi"}"></p>
<p>Jangan lupa juga pake baju yang bagus, karena ada sesi foto nya. Gak mau kan foto di passport nya pake baju kucel? wkwkw.</p>
<p>Setelah foto, nanti akan dapat bukti pembuatan passport yang mengharuskan kita untuk membayar (bisa via transfer online BNI atau bayar di tempat). Sekedar informasi, untuk passport biasa dikenakan biaya Rp 350.000,- sedangkan untuk passport elektrik dikenakan biaya Rp 650.000,-. Setelah bayar nanti dapat bukti pembayaran yang digunakan untuk mengambil passport di 3 - 7 hari kedepan.</p>
<p><img src="${"https://ik.imagekit.io/nusendra/IMAGE_2019-10-04_13_13_23_eZJuh7ZG5.jpg"}" alt="${"antri sambil kerja di kantor imigrasi"}"></p>
<h2>Pengambilan Passport</h2>
<p>Biasanya passport diproses paling cepat 3 hari dan paling lambat 7 hari. Pengalaman kemarin saya ambil yang passport elektrik, 3 hari udah langsung jadi.</p>
<hr>
<p>Mudah nya mengurus passport, asal dokumen dan persyaratannya lengkap. Semoga terbantu dengan artikel ini ya guys :)</p>`
  })}`;
});
var caraMudahMengurusAtauMembuatPassport = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Cara_mudah_mengurus_atau_membuat_passport,
  metadata: metadata$E
});
var metadata$D = {
  "title": "React Native - State Management dengan Remx",
  "date": "2018-08-16T13:53:27.000Z",
  "tags": ["javascript", "reactnative"],
  "draft": false,
  "description": "Cara mudah mengimplementasikan state management di React Native menggunakan remx.",
  "slug": "react-native-state-management-dengan-remx"
};
var React_native_state_management_dengan_remx = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$D), {}, {
    default: () => `<p>State management di React Native ada bermacam - macam, salah satu nya remx. Oh iya, sebelum lanjut saya mau jelaskan dulu kenapa saya beralih dari Mobx ke Remx, dan kenapa saya gak pake Redux seperti pada umumnya. Silakan baca ke post saya <a href="${"https://nusendra.com/post/goodbye-mobx-welcome-remx"}" rel="${"nofollow"}">kesini</a>. Ok, mungkin akan saya jelaskan lagi kenapa kita harus pake state management, dan apa kelebihannya daripada kita menyimpan data di local component state.</p>
<h3>Local Component State</h3>
<ul><li>Kelebihan : Mudah, kita tinggal mainin setState dan this.state saja untuk membaca state nya</li>
<li>Kelemahan: Akan sangat merepotkan mengatur state ketika app nya semakin membesar dan ini juga merupakan bad practice dalam design pattern</li></ul>
<h3>Redux</h3>
<ul><li>Kelebihan: Design pattern nya bagus dan scalable</li>
<li>Kelemahan: Terlalu banyak boilerplate, susah untuk menerapkan TDD (Test Driven Development) dan mungkin agak susah mempelajarinya (bagi pemula).</li></ul>
<h3>Mobx</h3>
<ul><li>Kelebihan: Mudah dalam penggunaannya, hampir tanpa boilerplate, performa yang bagus dan simple.</li>
<li>Kelemahan: Saya pribadi belum menemukan kelemahan nya, cuman dia belum support dengan React Native versi 0.56, that\u2019s why i moved to remx :)</li></ul>
<p>Baik, langsung saja kita coba implementasi menggunakan remx di app React Native kita. Pertama buka terminal dan masuk ke direktori project kita. Kemudian ketik berikut untuk instalasi nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm install remx</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian bikin folder di root project nya, susunan nya seperti ini</p>
<p><code>projectKamu/src/store/user/index.js</code></p>
<p>Setelah itu pada file store index.js nya isikan sebagai berikut</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> remx <span class="token keyword">from</span> <span class="token string">'remx'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  nama<span class="token operator">:</span> <span class="token string">'Nusendra'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token comment">// inisialisasi state</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> remx<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// getters berfungsi untuk get data</span>
<span class="token keyword">const</span> getters <span class="token operator">=</span> remx<span class="token punctuation">.</span><span class="token function">getters</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token function-variable function">getNama</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>nama
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// setters untuk mengubah state</span>
<span class="token keyword">const</span> setters <span class="token operator">=</span> remx<span class="token punctuation">.</span><span class="token function">setters</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token function-variable function">setName</span><span class="token operator">:</span> <span class="token parameter">payload</span> <span class="token operator">=></span>  state<span class="token punctuation">.</span>nama <span class="token operator">=</span> payload
 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token operator">...</span>getters<span class="token punctuation">,</span>
  <span class="token operator">...</span>setters
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk actions (berfungsi untuk asynchronous) kita buatkan file terpisah. Kita namakan saja <code>actions.js</code></p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>store<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./index'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'http://url-api'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  store<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah, store sudah beres. Sekarang kita pakai store nya di component. Misalkan kita pakai di App.js .</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> connect <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'remx'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> store <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'../store/user/index'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> actions <span class="token keyword">from</span> <span class="token string">'../store/user/actions'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>
  <span class="token function">gantiNama</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    actions<span class="token punctuation">.</span><span class="token function">fetcData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Container<span class="token operator">></span>
        <span class="token operator">&lt;</span>Text<span class="token operator">></span>Hai<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>selectedNama<span class="token punctuation">&#125;</span> <span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
        <span class="token operator">&lt;</span>TouchableOpacity onPress<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">gantiNama</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>
           <span class="token operator">&lt;</span>Text<span class="token operator">></span>Ganti Nama<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>TouchableOpacity<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Container<span class="token operator">></span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">mapStateToProps</span><span class="token punctuation">(</span><span class="token parameter">ownProps</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    selectedNama<span class="token operator">:</span> store<span class="token punctuation">.</span><span class="token function">getNama</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Home<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasan dari kode diatas adalah. Component Home tersebut akan menginjeksi data store kedalam nya, kemudian function mapStateToProps menginisialisasi value / state selectedNama dengan value yang ada di store, yakni nama. Kemudian data state nama tersebut di tampilkan di function render. Dalam function render tersebut, terdapat sebuah tombol yang jika di tekan akan mentrigger function gantiNama() dan berfungsi untuk menjalankan / dispatch  actions store. Setelah itu actions store melakukan fetch data yang kemudian melakukan mutasi data dengan setter.</p>
<p>Bingung ya? haha. Oke begini alur nya</p>
<ol><li><strong>State</strong> nama diinisialisasi di dalam store</li>
<li>Component mengambil state nama menggunakan fungsi <strong>getters</strong></li>
<li>Component melakukan fetch data (api call) dengan menekan tombol. Seketika itu juga <strong>actions</strong> akan melakukan pengambilan data.</li>
<li><strong>Actions</strong> melakukan perubahan data state melalui fungsi <strong>setters</strong>.</li>
<li>Component akan secara reaktif menerima perubahan state dan menampilkan nya.</li></ol>
<hr>
<p>Simple kan? Semoga bermanfaat buat temen - temen pembaca. Kalau masih ada yang di bingungkan, jangan sungkan untuk bertanya di kolom komentar. Thanks \u2026</p>`
  })}`;
});
var reactNativeStateManagementDenganRemx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": React_native_state_management_dengan_remx,
  metadata: metadata$D
});
var metadata$C = {
  "title": "fokus-sangat-membantu-kita-saat-ngoding",
  "date": "2018-05-22T15:55:00.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "Berikut ini kiat kiat yang lumayan penting untuk diperhatikan ketika ngoding, biar fokus kita makin meningkat.",
  "slug": "fokus-sangat-membantu-kita-saat-ngoding"
};
var Fokus_sangat_membantu_kita_saat_ngoding = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$C), {}, {
    default: () => `<p><strong>Fokus sangat membantu kita saat ngoding</strong>. Fokus, adalah sebuah syarat utama agar kita bisa mengerjakan suatu pekerjaan dengan lebih cepat, cermat dan tepat. Bagi developer / programmer, fokus ini adalah suatu elemen penting yang tidak boleh dilewatkan ketika bekerja. Nah, sekarang bagaimana kita bisa mendapatkan kekuatan super yang bernama fokus ini? Tentunya banyak sekali cara nya, yuk kita bahas bareng bareng.</p>
<h2>PERUT KENYANG</h2>
<p>Salah satu quote yang bikin saya ngakak masalah lapar adalah \u201Clapar brutal, kenyang bego\u201D hahaha. Siapa sih yang bisa fokus dengan perut lapar? Mayoritas manusia bakalan engga bisa fokus kalo lagi lapar, karena rendahnya gula darah bisa menurunkan tingkat kefokusan kita. Nah makanya kalo mau mulai ngoding, isi perut dulu secukupnya. Ga usah berlebihan, kalo terlalu kenyang malah bikin ngantuk.</p>
<h2>TIDUR CUKUP</h2>
<p>Ini salah satu tantangan terbesar bagi programmer, bahkan saya sendiri punya slogan \u201Cpantang tidur sebelum jam 12\u201D  dan \u201CTidur dibawah jam 12 itu lemah\u201D hahaha. Kalau saya udah kebiasaan tidur sekitar jam 12an, memang sih susah untuk bangun subuh :P. Jangan ditiru ya, karena memang kurang tidur bisa menyebabkan kita untuk sulit fokus.</p>
<h2>MUSIK</h2>
<p>Sebenarnya ini yang lebih saya tekankan. Kita gak bakal bisa fokus kalo ketika kita lagi kerja, banyak orang ngobrol di sekitar kita, atau banyak orang lewat kesana kemari, atau yang lebih parah ada orang muter dangdut, duh .. Karena di kantor saya, saya satu satu nya web developer disana, jadi tidak ada ruangan khusus untuk IT. Apalagi saya orang baru disana, jadi memang mereka tidak menyediakan tempat khusus itu. Jadilah saya di taruh di tempat bareng orang orang kantoran pada umum nya.</p>
<p>Nah saya ga suka kondisi seperti ini, karena pasti bisa mengganggu konsentrasi saya. Solusi nya adalah, kita kerja nya menghadap tembok, pake headset, muter lagu instrument yang kenceng biar gak kedengeran suara orang orang di sekitar.</p>
<p>Kenapa harus instrument? Saya suka musik rock dan metal, tetapi ini ga cocok didengerin kalo lagi kerja, karena pasti malah bikin pusing haha. Nah sebagai ganti nya kita mainin musik instrumental. Dengan instrumental ini, kita ga bakal ikut nyanyi nyanyi ketika ngoding, gak perlu denger suara orang nyanyi bahkan sampe teriak teriak, dll. Dan jangan lupa, muter lagu nya jangan kenceng kenceng, yang penting ga kedengeran suara orang orang di sekitar dan nyaman di telinga kita.</p>
<hr>
<p>Sekian postingan ga penting kali ini ehehehe.</p>`
  })}`;
});
var fokusSangatMembantuKitaSaatNgoding = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Fokus_sangat_membantu_kita_saat_ngoding,
  metadata: metadata$C
});
var metadata$B = {
  "draft": false,
  "title": "Install dan Akses Remote MariaDB di VPS",
  "date": "2018-12-20T14:38:18.000Z",
  "tags": ["devops"],
  "description": "Mengakses database di VPS secara remote melalui mysql-client kita",
  "slug": "install-dan-akses-remote-mariadb-di-vps"
};
var Install_dan_akses_remote_mariadb_di_vps = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$B), {}, {
    default: () => `<p>Apa banget ya bahasannya, terkesan receh memang haha. Tapi saya pribadi perlu mencatat ini karena barusan entah kenapa problem banget ngurusin hal hal receh begini. Takut lupa, maka perlu saya catat saja. Materi kali ini bagaimana cara kita install MariaDB 10.2 dan bagaimana cara akses remote database melalui mysql client (cli / GUI) di sistem lokal kita.</p>
<h2>Instalasi</h2>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo apt install build-essential
$ sudo apt-get install software-properties-common
$ sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
$ sudo add-apt-repository &#39;deb [arch=amd64] http://mariadb.biz.net.id/repo/10.2/ubuntu bionic main&#39;
$ sudo apt update
$ sudo apt install mariadb-server</code>`}<!-- HTML_TAG_END --></pre>
<p>Kenapa ribet begini? Kenapa ga langsung sudo apt install mariadb-server , karena jika langsung begini dia akan install mariadb dengan versi 10.1. Oh iya, ketika instalasi nanti akan diminta untuk masukin password ya.</p>
<h2>Open Koneksi Remote Database</h2>
<p>Ketik ini di terminal / command vps nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo ufw allow from any to any port 3306
atau
$ sudo ufw allow mysql
atau
$ sudo ufw allow 3306/tcp</code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kalian ketik begini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo ufw status</code>`}<!-- HTML_TAG_END --></pre>
<p>Harus nya muncul port 3306 disana, artinya port ini sudah bisa di akses oleh mysql-client di local system kita. Misalkan ketika kita akses mysql nya dan mendapatkan bahwa IP kita ditolak, maka kita lanjut setting di dalam konfigurasi mysql nya.</p>
<h2>Konfigurasi MySQL</h2>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian kita cari bind-address, jika kalian mendapatkan seperti ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">...
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address = 127.0.0.1
...</code>`}<!-- HTML_TAG_END --></pre>
<p>Artinya database ini hanya bisa diakses lokal. Maka jika pengen akses remote, kita komentarin baris itu dengan menambahkan #</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">...
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
# bind-address = 127.0.0.1
...</code>`}<!-- HTML_TAG_END --></pre>
<p>setelah itu restart mysql nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo service mysql restart</code>`}<!-- HTML_TAG_END --></pre>
<p>Harusnya sampai sini, temen temen bisa akses database secara remote.</p>
<hr>
<p>Sekian postingan receh kali ini, jika temen temen ada yang gagal dalam konfigurasi nya, jangan ragu untuk tanya tanya di kolom komentar. Yang pengen nambahin juga silakan. Thanks udah mampir, semoga bermanfaat</p>`
  })}`;
});
var installDanAksesRemoteMariadbDiVps = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Install_dan_akses_remote_mariadb_di_vps,
  metadata: metadata$B
});
var metadata$A = {
  "title": "Jangan Dibuka  Nanti Jadi Lemot 4.4.4.4.0.0.0.0",
  "date": "2017-11-29T05:06:37.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "Jangan Dibuka  Nanti Jadi Lemot 4.4.4.4.0.0.0.0 adalah sebuah pesan singkat yang dikirimkan seseorang ke aplikasi chat Whatsapp kita. Aneh nya, teks ini bisa bikin Whatsapp kamu hang loh.",
  "slug": "jangan-dibuka-nanti-jadi-lemot-44440000"
};
var Jangan_dibuka_nanti_jadi_lemot_44440000 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$A), {}, {
    default: () => `<p>Judul nya apaan banget sih haha. Itulah yang hari ini sedang hits. Cerita - cerita dikit ya, pagi ini dapat kiriman whatsapp di grup, nah tulisannya tuh kayak gini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.04.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0.4.4.4.4.0.0.0.0.4.0.4.0.4.0.4.0.4.0</code>`}<!-- HTML_TAG_END --></pre>
<p>Caption diatas nya tulisan \u201CJangan Dibuka Nanti Jadi Lemot\u201D</p>
<p>Nah benar saja, ketika saya buka chat di grup whatsapp malah Whatsapp nya jadi hang (bukan HP nya).  Seketika saya bingung, apa ya yang sedang terjadi? Kok bisa teks seperti itu bisa menyebabkan whatsapp jadi hang.</p>
<p>Tapi kalau kita buka whatsapp di desktop App / versi web nya, kode nya tidak berpengaruh (alias dibaca sebagai teks biasa). Dapet informasi juga kalau dibuka di HP jadul (mungkin Blackberry) gak berpengaruh. Entah kalo buka pake iPhone.</p>
<p>Saya sih masih berspekulasi macam macam, entah apakah ini bug yang ada di whatsapp, ataukah hanya sistem android nya yang kebingungan untuk menerjemahkan format apakah teks tersebut. Yang jelas angka 4.0.4 mengingatkan saya kepada \u201CNot Found\u201D</p>
<p>Entah bagaimana ini bisa terjadi, masih menjadi pertanyaan. Jikalau nanti sudah ketemu penyebabnya apa, akan saya update di post ini hehe.</p>
<hr>
<h2>Update</h2>
<p>Untuk menanggulangi / mengatasi hal ini. Kita bisa langsung delete chat nya, atau jika scroll ke halaman paling bawah (dan jangan baca pesan itu lagi) jika terdapat banyak chat, seperti di group whatsapp.</p>`
  })}`;
});
var janganDibukaNantiJadiLemot44440000 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Jangan_dibuka_nanti_jadi_lemot_44440000,
  metadata: metadata$A
});
var metadata$z = {
  "draft": false,
  "title": "Memajukan Komunitas di WebUnConfID 2018",
  "date": "2018-10-07T17:52:27.000Z",
  "tags": ["opini"],
  "description": "Cerita ketika mengikuti event WebUnconfID 2018 di Jogja",
  "slug": "memajukan-komunitas-di-webunconfid-2018"
};
var Memajukan_komunitas_di_webunconfid_2018 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$z), {}, {
    default: () => `<p>Halo halo, sudah beberapa minggu tidak posting blog sama sekali karena kesibukan, hari ini saya mau bahas panjang lebar mengenai event webunconfid2018. Sebelumnya apa sih webunconfid2018? Kok ribet banget penamaannya. Kepanjangan dari webunconfid2018 adalah Web Unconference Indonesia 2018, sebuah event keren yang digawangi oleh seorang Developer Advocate / Web Developer Relations dari Google, yaitu om <a href="${"https://www.instagram.com/tyohan/?hl=id"}" rel="${"nofollow"}">Yohan Totting</a>, dengan mendatangkan beberapa developer TOP skala nasional untuk berkumpul bareng di satu tempat dalam dua hari. Event ini diadakan berdasarkan dua konsep, pertama mengenalkan web technology modern yang digadang gadang mampu meningkatkan kualitas sebuah web dengan konsep Progressive Web App. Yang kedua mengumpulkan leader (atau seseorang yang aktif) dalam sebuah komunitas programmer untuk kumpul bareng dan membicarakan / membahas segala hal mengenai komunitas, tujuannya untuk memajukan dan menambah kualitas dari sebuah komunitas IT di Indonesia.</p>
<h2>Apa aja yang dibahas?</h2>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1952/45103817992_0908cd6243_c.jpg"}" alt="${"yohan ceramah"}"></p>
<p>Progressing Web Apps adalah sebuah konsep modern dari sebuah website dengan mengedepankan User Experience yang menggabungkan teknologi terbaik dari web dan aplikasi, untuk lebih jelasnya bisa mampir <a href="${"https://developers.google.com/web/fundamentals/codelabs/your-first-pwapp/?hl=id"}" rel="${"nofollow"}">disini</a>. Nah di event ini kita semua membahas mengenai kekuatan PWA dalam sebuah website, masalah apa yang sering ditemui ketika menerapkan PWA, manfaat apa saja yang didapat dari PWA, dll.</p>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1954/45152835181_c43c8aba23_c.jpg"}" alt="${"pembahasan web components"}"></p>
<p>Yang kedua, event ini juga membahas tentang seluk beluk luar dan dalam sebuah komunitas IT di Indonesia, mulai dari hambatan apa yang sering di temui di dalam komunitas, bagaimana cara meningkatkan kualitas materi ketika meetup, bagaimana meningkatkan minat member dalam berkomunitas dan berkontribusi, dan sebagainya.</p>
<h2>Saya mewakili komunitas Laravel Indonesia</h2>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1941/44241166395_b2da7388f0_c.jpg"}" alt="${"ngobrol ngobrol"}"></p>
<p>Oh iya, event ini ga bisa sembarang orang bisa ikut, karena om Yohan sendiri yang secara personal mengundang para peserta nya. Di komunitas Laravel Indonesia sendiri ada 3 orang yang dapat invitation langsung dari om Yohan, yakni saya, <a href="${"http://t.me/XramaDhan"}" rel="${"nofollow"}">mas Ramadhan</a> dan mas mas <a href="${"http://t.me/XramaDhan"}" rel="${"nofollow"}">Nipe Harefa</a>. Singkat cerita karena saya orang nya aktif di komunitas, membantu jawab jawab pertanyaan temen temen di komunitas, diskusi di grup via chat, dll jadi om Yohan ngajakin saya untuk ikut event ini :D. Bangga juga sih, karena bisa ketemu developer developer keren yang ada di Indonesia, terpilih 3 dari 5500 orang berkat berisik di grup chat hahaha :D.</p>
<h2>Berangkat bertiga</h2>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1925/45152835361_f79734d968_c.jpg"}" alt="${"amirul, fariz, arryangga, saya"}"></p>
<p>Dari Surabaya ada 3 orang yang dapat invitation, saya, <a href="${"http://kawankoding.com/"}" rel="${"nofollow"}">mas Amirul dari Kawankoding / SidoarjoDev</a>, dan <a href="${"http://t.me/arryanggaputra"}" rel="${"nofollow"}">mas Arryangga Aliev (SurabayaDev)</a>. Berangkat setelah Isya dan sampai di Jogja dini hari jam 00.00 tanggal 29 September 2018 :D. Sesampai nya disana ketemu guru saya yang udah stay juga, <a href="${"http://mas%20fariz%20rizaldy/"}" rel="${"nofollow"}">mas Fariz Rizaldy</a> kemudian di susul <a href="${"https://www.youtube.com/channel/UCkXmLjEr95LVtGuIm3l2dPg"}" rel="${"nofollow"}">om Sandhika Galih dari Channel Youtube Web Programming UNPAS</a> dan temen temen lainnya, keren kan? haha</p>
<h2>Kegiatan hari pertama</h2>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1957/45152835231_0de9a036fc_c.jpg"}" alt="${"permasalahan di modern web"}"></p>
<p>Kegiatan hari pertama ini lebih fokus kepada permasalahan - permasalahan yang sering muncul di konsep PWA dan komunitas. Kita 50 orang peserta melakukan diskusi untuk mengumpulkan sebanyak banyaknya permasalahan yang terjadi di sebuah komunitas IT, setelah itu juga mengumpulkan permasalahan dan pertanyaan yang masih mengganjal mengenai modern web.</p>
<h2>Kegiatan hari kedua</h2>
<p>Pada hari kedua ini peserta event berdiskusi dan mendapatkan insight dan solusi dari om Yohan mengenai permasalahan - permasalahan yang dikumpulkan di hari pertama. Setelah itu, biasa lah bisa kalian tebak sendiri apa acara berikut nya, yaaaaakkkk foto foto haha.</p>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1941/30241929247_49bd789c2d_c.jpg"}" alt="${"amirul nipe dida sandhika hilman nusendra irfan"}"></p>
<h2>Manfaat yang didapatkan</h2>
<p>Banyak sekali yang bisa saya dapatkan, beberapa diantaranya adalah</p>
<ol><li>Mendapatkan ilmu dan insight baru dari beberapa teman teman keren disana.</li>
<li>Mendapatkan banyak sekali teman teman baru yang dengan mudah membagikan ilmu mereka.</li>
<li>Bisa bertemu dengan developer - developer keren tingkan nasional :D. Jadi bisa tanya tanya langsung mengenai teknologi yang kadang masih menjadi pertanyaan besar buat saya.</li>
<li>Mendapat sebuah dorongan besar bagaimana memanajemen komunitas dan berkontribusi didalam komunitas.</li></ol>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1945/44241166875_8f5b0e0fe3_c.jpg"}"></p>`
  })}`;
});
var memajukanKomunitasDiWebunconfid2018 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Memajukan_komunitas_di_webunconfid_2018,
  metadata: metadata$z
});
var metadata$y = {
  "draft": false,
  "title": "Docker Compose PostgreSQL dan pgAdmin4",
  "date": "2019-01-07T10:57:25.000Z",
  "tags": ["devops"],
  "description": "Install PostgreSQL dan pgAdmin4 di docker menggunakan Docker Compose.",
  "slug": "docker-compose-postgresql-dan-pgadmin4"
};
var Docker_compose_postgresql_dan_pgadmin4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$y), {}, {
    default: () => `<p>Di dunia teknologi, sangat banyaaakkk sekali yang harus dipelajari apalagi bagi seorang Full Stack seperti saya. Di development perlu belajar bahasa pemrograman nya, belajar konsep konsep / pattern dalam development, mempelajari framework, belajar backend development, frontend development, unit testing, dan segala tetek bengek nya. Belum sampai disitu, setelah app sudah selesai di develop pun, masih harus mikir gimana cara deployment ke server secara tepat. Disini bisa mempelajari Docker, Continous Integration, Continous Deployment, dll. Banyak bener haha.</p>
<p>Nah kali ini mau bahas sedikit saja tentang docker dan docker compose. Saya ga akan bahas tentang tata cara instalasi docker dan docker compose, temen temen bisa mencari sendiri artikel artikel diluar sana. Oh iya, selain itu untuk tau apa itu docker, temen temen juga bisa baca atau liat youtube. Saya lebih menyarankan nonton youtube nya saja, karena bisa lebih mudah dipahami.</p>
<h2>Docker Compose</h2>
<p>Yang akan kita bahas kali ini adalah, bagaimana install Database PostgreSQL dan pgAdmin4 di docker dan menjalankan nya. Btw kita pakai docker-compose untuk memudahkan membuat container nya. Baik, pertama masuk ke folder project kalian, kemudian bikin sebuah file yang bernama docker-compose.yml</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ touch docker-compose.yml</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian Kita isi file tersebut seperti dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">version: &quot;3&quot;

services:
  postgres:
    image: postgres:alpine
    ports:
      - &quot;5432:5432&quot;
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=rahas1a
  pgadmin4:
    image: dpage/pgadmin4
    ports:
      - &quot;5433:80&quot;
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@nusendra.com
      - PGADMIN_DEFAULT_PASSWORD=rahas1a</code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasan :</p>
<p>Pertama kita butuh 2 services, yaitu postgreSql dan pgAdmin nya. Maka kita buat postgres dan pgAdmin4. Kemudian untuk image dari postgres kita pakai alpine, agar size image nya kebih kecil. Untuk persistent data nya, kita tentukan volumes nya. Fungsi nya agar data di database kita ga hilang ketika kita menjalankan container baru dengan docker compose ini, ya inti nya biar data kita masih ada di db gitu lah. Kemudian isi password postgres nya, untuk username postgres saya biarkan kosong (default nya \u2018postgres\u2019)</p>
<p>Kemudian pada service pgAdmin4 kita pakai image dari dpage/pgadmin4. Untuk port bebas temen temen pakai mana, kalau saya pribadi pakai port 5433. Jangan lupa juga tentukan default email dan password nya.</p>
<p>Jika sudah selesai, simpan file tersebut dan jalankan dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ docker-compose up -d</code>`}<!-- HTML_TAG_END --></pre>
<p>Maka docker akan secara otomatis mendownload image yang dibutuhkan, kemudian menjalankan container nya.</p>
<h2>Coba Jalankan</h2>
<p>Setelah selesai semuanya, silakan buka browser kalian dan ketik url <code>localhost:5433</code> untuk masuk ke pgAdmin4. Sebelum konek ke postgre, ketik ini dulu di terminal untuk mengetahui ip dari postgre nya.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ docker inspect &lt;nama container postgreSQL&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu cari dibagian bawah yang ada tulisan IPAddress, catat dan masukkan ke pgAdmin4. Setelah dapat IP nya, kita masuk ke pgAdmin4, login ke web nya kemudian bikin server baru. Pada inputan IP, masukkan ip dari postgre yang didapat barusan, setelah itu isi credential yang lain nya. Voila, seharusnya temen temen sekarang sudah bisa menikmati sajian pgAdmin4 dan PostgreSQL :D.</p>
<hr>
<p>Enaknya pakai docker ini, sistem kita bersih. Ga perlu install postgre di sistem kita. Selain itu ketika deployment juga lebih dimudahkan jika memakai docker, insyall allah akan saya bahas di postingan kedepan. Insya Allah ya.</p>
<p>Sekian dulu, semoga bermanfaat.</p>`
  })}`;
});
var dockerComposePostgresqlDanPgadmin4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Docker_compose_postgresql_dan_pgadmin4,
  metadata: metadata$y
});
var metadata$x = {
  "title": "Dasar Controller di Laravel 5 - Part 1",
  "date": "2017-12-08T00:40:57.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Dasar Controller di Laravel 5 merupakan postingan tentang controller yang membahas method - method maupun fungsi - fungsi dasar dari sebuah Controller.",
  "slug": "dasar-controller-di-laravel-5-part-1"
};
var Dasar_controller_di_laravel_5_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$x), {}, {
    default: () => `<p>Setelah kemarin bahas hal yang paling dasar di Laravel 5, sekarang waktu nya kita masuk ke bahasan tentang Controller. Apa sih Controller itu? Controller adalah salah satu komponen inti dari MVC yang berfungsi sebagai penghubung antara request user (View) ke model yang nantinya akan di kembalikan lagi ke View dalam bentuk response.</p>
<p>Controller ini juga bisa diartikan sebagai otak nya suatu web, karena seluruh aktivitas backend akan banyak berkutat di controller ini. Controller ini akan banyak berisi logika - logika dalam menyusun suatu fungsi tertentu. Contohnya adalah aktivitas CRUD (Create, Read, Update, Delete) yang prosesnya berjalan di dalam Controller. So, Controller ini sangat penting untuk dipahami karena dia ini termasuk salah satu keluarga inti yang ada di laravel.</p>
<p><img src="${"https://farm5.staticflickr.com/4639/25137016468_451a3c2cd8_o.jpg"}" alt="${"nusendra-mvc"}" title="${"nusendra mvc"}"></p>
<p>Saya akan jelaskan alur singkat dari cara kerja MVC ini terlebih dahulu, sebelum beranjak lebih jauh menyelami samudra MVC.</p>
<ol><li>User melakukan request ke Controller (Misalnya User ingin menampilkan data produk)</li>
<li>Kemudian Controller akan memeriksa / Mengakses Database melalui Model yang nantinya data dari database tersebut disimpan di dalam object Model.</li>
<li>Setelah itu Model akan mengirimkan kembali hasil dari pencarian data produk ke Controller (dalam bentuk object).</li>
<li>Kemudian Controller akan melempar data produk ke View berupa response (Biasanya berupaJSON ). Yang nanti nya data tersebut bisa diolah lagi di Frontend untuk menampilkan data produk yang diinginkan si user.</li></ol>
<p>Kalo udah paham, yuk langsung melangkan ke dasar - dasar Controller</p>
<blockquote><p>Sekedar catatan, mulai dari sini sampai kedepan kita akan menggunakan resource Controller dan route resource. Karena ini mempermudah proses development dan kodingan kita terlihat lebih cantik.</p></blockquote>
<h2>Membuat Controller</h2>
<p>Sebelum mulai memakai controller, ada beberapa cara untuk membuat controller. Bisa melalui php artisan yang disediakan Laravel, atau bisa create secara manual di dalam folder app/Http/Controllers. Sangat diasarankan untuk membuat controller melalui php artisan, berikut caranya. Buka terminal kalian dan masuk ke direktori project nya.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">php artisan make:controller PostController --resource</code>`}<!-- HTML_TAG_END --></pre>
<p>Dengan menambahkan tag \u201C\u2014resource\u201D, maka file Controller yang telah dibuat tadi sudah berisi beberapa method yang siap untuk digunakan dalam aktivitas CRUD. Dalam contoh kasus ini kita membuat Controller yang memproses data post.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Http<span class="token punctuation"></span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">PostController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk menampilkan halaman daftar post (Halaman utama)</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk menampilkan halaman form create post</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk melakukan insert / input data kedalam database</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk menampilkan single post / detail dari sebuah post</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">edit</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk menampilkan halaman edit post</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk melakukan update data post ke database</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">destroy</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// Method untuk menghapus data post</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Berikut ini adalah beberapa route yang ditangani oleh resource controller.</p>
<table><thead><tr><th>Verb</th>
<th>URI</th>
<th>Action</th></tr></thead>
<tbody><tr><td>GET</td>
<td>/post</td>
<td>index</td></tr>
<tr><td>GET</td>
<td>/post/create</td>
<td>create</td></tr>
<tr><td>POST</td>
<td>/post</td>
<td>store</td></tr>
<tr><td>GET</td>
<td>/post/${escape(id)}/edit</td>
<td>edit</td></tr>
<tr><td>PUT / PATCH</td>
<td>/post/${escape(id)}</td>
<td>update</td></tr>
<tr><td>DELETE</td>
<td>/post/${escape(id)}</td>
<td>destroy</td></tr></tbody></table>
<p>Apa sih maksud dari table diatas ??? Table diatas menunjukkan beberapa URI yang ketika diakses, maka route akan secara otomatis bisa mengenali maksud dan tujuan si user dalam menentukan action, yang kemudian route akan meneruskan ke controller yang cocok. Nah karena di setiap action method pada controller membutuhkan satu buah route (URI), maka sangat boros sekali jika kita menuliskan masing - masing route nya seperti contoh dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@post'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/create'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@create'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@store'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/&#123;id&#125;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/&#123;id&#125;/edit'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@edit'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/&#123;id&#125;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@update'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/post/&#123;id&#125;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@destroy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Ini adalah route normal untuk aktivitas crud adalah. Ini hanya untuk 1 controller saja loh, bagaimana kalo ada ratusan controller? Bayangin aja sendiri gimana banyak nya script seperti diatas. Nah di Laravel ada route resource yang membantu menyederhanakan script diatas, kita cuma ketik seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/pos'</span><span class="token punctuation">,</span>'PostController<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Keren kan? Hanya 1 baris saja sudah bisa mendefinisikan dari ke 7 baris kode diatas.</p>
<hr>
<p>Sampai sini dulu ya belajar controller nya, karena saya emang mau bahas yang dasar banget dari controller. Nanti part selanjutnya perlahan - lahan akan masuk dan mempelajari controller nya sedetail yang saya pahami. Semoga bermanfaat teman - teman :-)</p>`
  })}`;
});
var dasarControllerDiLaravel5Part1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Dasar_controller_di_laravel_5_part_1,
  metadata: metadata$x
});
var metadata$w = {
  "title": "Migrasi dari Dynamic ke Static Blog",
  "date": "2019-05-04T07:27:00.000Z",
  "description": "Cerita singkat migrasi dari blog dinamis ke static blog",
  "tags": ["opini", "tips"],
  "draft": false,
  "slug": "migrasi-dari-dynamic-ke-static-blog"
};
var Migrasi_dari_dynamic_ke_static_blog = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$w), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/snipcart.com/media/204009/static-site-generators.png"}" style="${"width:100%;height:auto;"}">
<br>
<p>Saya termasuk orang yang demen ngeblog, udah bertahun tahun melanglang buana di dunia per-blog-an mulai dari yang jadul (blogspot) hingga yang kekinian. Nah cerita kali ini sebagai ulasan singkat kenapa saya harus migrasi dari dynamic ke static blog.</p>
<p>Cerita cerita dulu kali yee. Dulu jaman SMA mulai ngeblog pake blogspot, blog nya masih ada sampe sekarang dan udah ga pernah keurus, kalau penasaran bisa mampir <a href="${"http://andrachemical.blogspot.com/"}" rel="${"nofollow"}">kesini</a>. Nah karena perkembangan zaman, akhir nya dari blogspot beralih ke Wordpress hingga tahun 2016 an. Waktu itu udah beli domain sendiri (ya domain sekarang ini). Kemudian karena sebagai anak IT, masa iya ngeblog aja harus pake WP? Lantas apa bedanya ama orang orang diluar sana yang bukan dari background IT? Mulai dari sinilah saya harus bikin blog buatan sendiri, ga boleh pake CMS lagi :)</p>
<p>Tahun 2017 mulai bikin CMS buat blog pribadi pake Laravel &amp; Vuejs. Laravel dipake untuk handle public web (karena hostingnya engga mendukung nodejs sehingga ga bisa mainin SSR di hosting), for SEO reasons. Kemudian Vuejs dipake untuk admin panel (bikin blog post, kategori blog, dll). Memang melelahkan dan banyak yang harus diurusin, mulai dari pake laravel (males banget aslinya), trus bikin admin panel nya juga. Menurut saya terlalu overkill kalau hanya untuk sekedar blog saja.</p>
<h2>Memutuskan untuk migrasi ke static blog</h2>
<p>Sekarang jamannya static blog, dulu ada yang namanya jekyll, github pages, Hugo, dll. Kalau pengen ngerasain development pakai react / vue, di React ada yang namanya Gatsby.js dan di vue ada Gridsome. Karena saya anak vue, maka pilihan jatuh ke Gridsome, sebuah static site generator yang biasa dipakai untuk bikin blog atau docs.</p>
<p>Kenapa lebih milih static daripada dynamic?</p>
<ol><li><em>Cost Saving</em>, dengan menggunakan static blog, saya udah ga butuh hostingan lagi. Tinggal pakai repo di github, trus lempar hosting nya ke netlify. Beres</li>
<li>Ga ribet ngurusin backend. Kalau pakai dinamis, biasa kita juga harus ada database untuk simpan artikel kan? Pun juga demikian dengan service nya.</li>
<li>Ga butuh admin panel. Kalau dinamis, kita perlu sebuah halaman untuk input artikel, maka disini kita harus bikin admin panel nya. Duh males</li>
<li>Cepat, performa yang kita dapatkan dari static site jauh lebih cepat daripada web dinamis. Karena pada static site kita hanya mengunduh halaman html nya saja. Sedangkan pada web dinamis, kita harus menunggu web nya ngambil data dari database yang kemudian di render ke client side.</li>
<li>Lebih bisa bereksplorasi dengan modern web seperti PWA.</li>
<li><em>the main reason is, I don\u2019t wanna play with PHP anymore :)</em></li></ol>
<h2>Exploring the world of modern web</h2>
<p>Ketika artikel ini ditulis, blog ini hanya sekedar static site saja. Saya masih belum mengimplementasikan PWA disini. Niatnya nanti akan saya implementasikan sembari menulis post ber seri yang bakal ngebahas PWA.</p>
<hr>
<p>Sekian curhatan singkat ini, semoga saya masih punya komitmen kuat untuk ngeblog terus XD.</p>`
  })}`;
});
var migrasiDariDynamicKeStaticBlog = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Migrasi_dari_dynamic_ke_static_blog,
  metadata: metadata$w
});
var metadata$v = {
  "draft": false,
  "title": "Programmer adalah Pembelajar Sejati",
  "date": "2018-10-13T19:33:14.000Z",
  "tags": ["opini"],
  "description": "Programmer adalah pembelajar sejati, belum selesai kita belajar framework A udah muncul aja framework B. Berikut ini penjelasan dan opini saya mengenai hal ini.",
  "slug": "programmer-adalah-pembelajar-sejati"
};
var Programmer_adalah_pembelajar_sejati = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$v), {}, {
    default: () => `<p>Demi mencapai level tertentu dan memperoleh wawasan yang luas, hanya bisa didapat melalui belajar. Tentunya setiap orang memiliki cara belajar dan tingkatan belajar yang berbeda beda, misalnya seorang guru bahasa Inggris hanya belajar bahasa Inggris saja (ya iyalah), beda dengan seorang arsitek bangunan yang belajar matematika serta ilmu turunannya. Nah kali ini saya akan bahas alasan apa saja yang membuat saya membentuk sebuah statemen seperti judul diatas, <strong>Programmer adalah pembelajar sejati</strong>.</p>
<h2>Teknologi terus berkembang</h2>
<p>Sudah bukan rahasia lagi bahwa teknologi masa kini sangat cepat sekali berkembang. Dahulu device memory untuk menyimpan data beberapa megabytes saja ukurannya naudzubillah gede nya, sekarang hanya dengan mini flashdrive kita sudah bisa membawa device memory dengan kapasitas 1TB, bahkan bisa lebih gede lagi kapasitas nya. Begitu pula dengan bahasa pemrograman yang selalu berkembang dari masa ke masa. Misalnya saja seperti PHP yang selalu bertambah versi nya dengan penambahan - penambahan fitur yang luar biasa hebat nya. Dan yang lagi hype sekarang adalah Javascript, dulu nya yang cuma jalan sebagai DOM Manipulator di web frontend sekarang udah bisa kerja jadi backend, native mobile app, bahkan sampai IOT sekalipun.</p>
<p>Nah dari semakin berkembang pesatnya bahasa pemrograman ini, para programmer dituntut untuk bisa mengikuti perkembangan jaman dan trend. Resiko paling besar jika ga mau mengikuti trend adalah, dia ga akan laku dipasaran karena emang teknologi yang dikuasai nya udah jadul. duuhh\u2026</p>
<h2>Semakin tua, semakin malas belajar</h2>
<p>Kemampuan belajar dan mengingat suatu manusia ada batas nya. Orang jika semakin tua, maka semakin berkurang juga daya ingat nya, makanya banyak orang tua yang kena pikun alias gampang lupa. Kebalikannya, justru banyak anak anak kecil (masih usia sekolah dasar) yang sudah hafal Qur\u2019an, bagaimana cara nya? Entahlah bagaimana bisa seorang anak kecil yang hafal 30 juz. Nah pada bagian ini saya juga pengen menekankan, mumpung kita masih muda, belajar lah sebanyak banyak nya sebelum masa tua datang. Kita para programmer dituntut untuk belajar banyak hal, agar nanti di masa tua tidak jadi seorang yang payah dalam hal teknologi.</p>
<h2>Ilmu Informatika vs Ilmu Lain</h2>
<p>Di bagian ini agak seru dan mungkin agak panas :D. Dalam bidang informatika, kita di tuntut untuk selalu belajar dan belajar, entah itu mengenai arsitektur dan design system pada sebuah software maupun bahasa pemrograman nya. Misalnya untuk membuat sebuah web app, kita dituntut untuk bisa dan tau apa itu database, di backend nanti pake bahasa apa, framework nya apa, di frontend pake apa dan framework apa, deployment nya bagaimana, caching nya bagaimana, dst.. (ga ada habis nya haha). Gak sampai disitu, jika di salah satu teknologi ada peningkatan versi, kita di tuntut untuk belajar hal apa yang baru dari teknologi itu.</p>
<p>Beda dengan seorang guru atau dosen bahasa Inggris misalnya, dia cuma belajar bahasa Inggris doang dan dari dulu sampai sekarang bahasa Inggris ya gitu gitu aja. Contoh lagi, bidang ilmu matematika, dari dulu sampai sekarang ya gitu gitu aja kan? Mungkin bagi para ilmuwan ada hal hal dan teori baru, tapi para pengguna dan penikmat matematika mungkin ga akan menggunakan itu.</p>
<p>Btw kalau saya ada salah kata disini, mohon dimaafkan ya. Karena ini dari sudut pandang saya yang dangkal :D</p>
<h2>Baru belajar A, udah muncul B</h2>
<p>Nah ini udah ga perlu kaget lagi. Dulu pas jaman nya jQuery lagi hot banget, pada belajar jQuery semua. Belum habis belajar jQuery udah muncul Reactjs, nah para penggemar jQuery pada berbondong bondong tuh pake react. Udah di seriusin belajar react, eh tau tau muncul yang baru lagi, yaitu Vue. Gitu terus ga ada habis nya hahaha. Di dunia mobile, ketika seorang web developer pengen bikin mobile native app, mereka awalnya belajar java, belum kelar belajar java udah muncul kotlin, baru deh belajar kotlin. Eh karena dia web developer, ketika butuh waktu lama belajar bahasa kotlin, muncul react native. Belajar deh itu react native (karena dia basis nya web developer / javascript), trus react native belum kelar udah muncul lagi flutter ngahahaha. Bagi para programmer udah bukan rahasia lagi ya, baru belajar A udah muncul si B. wkwk</p>
<h2>Kalong</h2>
<p><img src="${"https://aboutkalong.files.wordpress.com/2016/05/1.jpg"}" alt="${"nusendra-kalong"}"></p>
<p>Kalong ini sebutan yang biasa banget bagi para pembelajar sejati, yakni programmer karena sering melek sampai malam buat belajar atau ngerjain project yang hampir kena deadline. Saya sering banget kebobolan, pengen belajar suatu fitur dan niat nya pengen tidur di jam 10, eh karena saking asyik nya gak sadar tiba tiba udah jam 12 aja hahaha. Ini udah biasa bangettt.</p>
<h2>Gak mau belajar = stuck</h2>
<p>Sekarang kita lihat apa akibatnya jika orang kolot ga mau belajar hal baru, seorang developer PHP misalnya. Dia stuck disitu terus, bertahun tahun cuma pegang PHP doang dan tetap pada pendiriannya tanpa mempelajari hal yang lain. Suatu saat ketika popularitas PHP udah turun dan PHP udah ga bisa mengikuti kebutuhan perusahaan maka secara otomatis dia akan tersingkir. Ketika tersingkir dan pengen cari kerjaan baru dengan gaji yang tinggi, sudah bisa dipastikan dia akan kesusahan cari job dengan bahasa PHP dengan gaji tinggi. </p>
<p>Lain lagi kasus nya, seorang desktop app developer yang menggunakan bahasa C#.NET, dia hidup dan mati pokoknya pake C# aja deh, ga mau belajar hal lain. Katakanlah misalnya perusahaan tempat dia bekerja mengalami kebangkrutan dan secara otomatis dia berhenti kerja disitu. Bisa dipastikan ketika dia pengen kerja di tempat lain bakal kesusahan, karena mayoritas sekarang sudah bermain di web, sedangkan dia ilmu nya stuck cuma di desktop saja. Wasallam ternak lele saja dah haha.</p>
<p>Catatan singkat dari saya, bagi seorang programmer jangan terlalu fanatik dengan sebuah bahasa atau framework. Pahamilah bagaimana suatu bahasa bekerja, pahamilah fundamental dari software engineering. Bahasa dan framework hanya sebuah tools, ketika kita sudah menguasai fundamental dari software engineering, maka dengan bahasa atau framework apapun kita bisa adaptasi dengan cepat, yang pada akhirnya menyelesaikan solusi menggunakan bahasa dan framework yang tepat. Sekali lagi, ini cuma opini pribadi ya, ga ada maksud untuk merendahkan suatu bahasa pemrograman tertentu. Semoga bermanfaat dan makasih udah mampir\u2026</p>`
  })}`;
});
var programmerAdalahPembelajarSejati = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Programmer_adalah_pembelajar_sejati,
  metadata: metadata$v
});
var metadata$u = {
  "title": "Tips dan Trik Array pada Javascript",
  "date": "2019-10-27T20:53:00.000Z",
  "description": "Banyak sekali metode atau trik dalam memanipulasi data pada sebuah array, berikut ini adalah tips dan trik dalam mengolah array pada JavaScript",
  "tags": ["opini", "javascript"],
  "draft": false,
  "slug": "tips-dan-trik-array-pada-javascript"
};
var Tips_dan_trik_array_pada_javascript = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$u), {}, {
    default: () => `<p>Array pada bahasa pemrograman merupakan salah satu konsep / fitur yang sangat penting, dalam mengelola data pada array pun ada banyak sekali caranya. Nah kali ini saya akan berbagi sedikit tentang pengelolaan elemen / data pada sebuah array dengan cara yang engga biasa. Yok mulai\u2026</p>
<h2>1. Menghapus duplikat data pada Array</h2>
<p>Ada 2 cara</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> uniqueAnimals <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uniqueAnimals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ['tiger', 'elephant', 'monkey', 'ant']</span>

<span class="token keyword">let</span> uniqueAnimals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uniqueAnimals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ['tiger', 'elephant', 'monkey', 'ant']</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>2. Replace value tertentu pada Array</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

animals<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'dog'</span><span class="token punctuation">,</span> <span class="token string">'snake'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ['cat', 'dog', 'snake', 'tiger', 'ant', 'monkey']</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>3. Map array tanpa menggunakan .map()</h2>
<p>terkadang kita sering menggunakan <code>.map</code> untuk memanipulasi data dengan cara <code>looping</code> array nya. Berikut ini cara lain tanpa menggunakan <code>.map</code></p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'tiger'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">6</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'octopus'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'chicken'</span><span class="token punctuation">,</span> legs<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> animalNames <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>animals<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animalNames<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["tiger", "elephant", "monkey", "ant", "octopus", "chicken"]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>4. Mereset atau mengosongkan array</h2>
<p>Biasanya kita pakai sintaks begini untuk me reset / mengosongkan isi array</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js">array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kalian juga bisa coba sintaks dibawah ini</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

animals<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>5. Konversi dari Array ke Object</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> animalsObject <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>animals <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animalsObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123; 0: "tiger", 1: "elephant", 2: "monkey", 3: "ant" &#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>6. Mengisi array dengan function .fill()</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> newArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'wow'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArray<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["wow", "wow", "wow", "wow", "wow"]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>7. Menggabungkan beberapa array</h2>
<p>Misalkan kita punya beberapa array yang pengen digabungin, kalian bisa coba cara berikut ini.</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> flowers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'rose'</span><span class="token punctuation">,</span> <span class="token string">'jasmine'</span><span class="token punctuation">,</span> <span class="token string">'orchid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'carrot'</span><span class="token punctuation">,</span> <span class="token string">'tomato'</span><span class="token punctuation">,</span> <span class="token string">'spinach'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> mergedArrays <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>animals<span class="token punctuation">,</span> <span class="token operator">...</span>flowers<span class="token punctuation">,</span> <span class="token operator">...</span>vegetables<span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mergedArrays<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["tiger", "elephant", "monkey", "rose", "jasmine", "orchid", "carrot", "tomato", "spinach"]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>8. Mengambil data yang sama pada array yang berbeda</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> array2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'chicken'</span><span class="token punctuation">,</span> <span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> duplicatedValues <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span>
  array2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>duplicatedValues<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 'tiger', 'elephant' ]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>9. Menghapus falsy value</h2>
<p>Misal kita pengen menghapus semua falsy data (null, undefined, dll) pada sebuah array, kita bisa coba cara berikut ini.</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">var</span> mixedArray <span class="token operator">=</span> <span class="token punctuation">[</span>\u201Ctiger\u201D<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> \u201Ccat\u201D<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> trueArray <span class="token operator">=</span> mixedArray<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>trueArray<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns [\u201Ctiger\u201D, 10, true, \u201Ccat\u201D]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>10. Mengambil data random</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> randomAnimal <span class="token operator">=</span> animals<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> animals<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>randomAnimal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 'monkey'</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>11. Membalikkan data dari depan ke belakang</h2>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tiger'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">,</span> <span class="token string">'monkey'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> reversed <span class="token operator">=</span> animals<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reversed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["ant", "monkey", "elephant", "tiger"]</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>12. Menjumlah semua nilai pada array</h2>
<p>Dalam hal ini, cara yang paling benar adalah menggunakan reduce</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kalian bingung dengan penggunaan reduce, coba ubah kode diatas menjadi seperti berikut ini</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'x : '</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'y : '</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span></code>`}<!-- HTML_TAG_END --></pre>
<hr>
<p>Nah demikian yang bisa saya sajikan, jika ada tambahan dari temen - temen, silakan tulis du kolom komentar :D</p>
<p>source : <a href="${"https://dev.to/duomly/13-useful-javascript-array-tips-and-tricks-you-should-know-2jfo"}" rel="${"nofollow"}">https://dev.to/duomly/13-useful-javascript-array-tips-and-tricks-you-should-know-2jfo</a></p>`
  })}`;
});
var tipsDanTrikArrayPadaJavascript = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Tips_dan_trik_array_pada_javascript,
  metadata: metadata$u
});
var metadata$t = {
  "draft": false,
  "title": "Membuat RBAC Sendiri : Konsep - Part 1",
  "date": "2019-02-02T23:34:11.000Z",
  "tags": ["opini", "tips"],
  "description": "RBAC menggunakan library orang lain itu ga keren. Yuk kita bikin RBAC dengan konsep kita sendiri...",
  "slug": "membuat-rbac-sendiri-konsep-part-1"
};
var Membuat_rbac_sendiri_konsep_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$t), {}, {
    default: () => `<p>RBAC (Role Based Access Control) adalah fitur wajib yang harus ada di sebuah web aplikasi. RBAC ini sendiri berfungsi untuk membatasi suatu user dalam mengakses sebuah / beberapa fitur dalam sebuah aplikasi. Misalkan contoh yang paling gampang, dalam aplikasi yang akan kita buat membutuh kan 4 menu, yakni master barang, master user, transaksi penjualan, dan invoice. Sedangkan untuk user nya kita punya Andi, Budi, dan Candra.</p>
<ol><li>Andi seorang Manager, dia bisa melakukan CRUD di menu master barang dan master user saja. Dan dia juga bisa memantau data transaksi penjualan, tetapi dia ga bisa melakukan create / update / delete.</li>
<li>Budi seorang Marketing, dia bisa melakukan CRUD di menu penjualan saja, tetapi dia juga bisa melihat data barang (tanpa bisa create / update / delete data).</li>
<li>Candra seorang Admin Penagihan, tugas nya hanya bikin invoice saja.</li></ol>
<p>Nah dari contoh kasus diatas, mari kita buat sebuah table user untuk handle kasus seperti ini</p>
<table><thead><tr><th>username</th>
<th>password</th>
<th>write_menu</th>
<th>readonly_menu</th></tr></thead>
<tbody><tr><td>andi</td>
<td>anditampan</td>
<td></td>
<td></td></tr>
<tr><td>budi</td>
<td>budibiasa</td>
<td></td>
<td></td></tr>
<tr><td>candra</td>
<td>candrajelek</td>
<td></td>
<td></td></tr></tbody></table>
<p>Pada table diatas, ada field yang bernama write_menu dan readonly_menu. Untuk write_menu ini nanti isinya adalah sebuah string yang berisi id menu yang dia bisa melakukan CRUD. Sedangkan readonly_menu berisi id menu apa saja yang dia hanya bisa lihat (tanpa create / update / delete).</p>
<h2>Simulasi</h2>
<p>Mari kita simulasi kan, pertama kita bikin table menu nya dulu, kemudian pada table user bisa langsung kita lengkapi. Oh iya, disini untuk table jabatan tidak saya buat, agar kita bisa fokus pada table user dan menu nya saja.</p>
<p>Pertama bikin table Menu</p>
<table><thead><tr><th>id</th>
<th>title</th>
<th>url</th></tr></thead>
<tbody><tr><td>1</td>
<td>Master Barang</td>
<td>/goods</td></tr>
<tr><td>2</td>
<td>Master User</td>
<td>/users</td></tr>
<tr><td>3</td>
<td>Transaksi Penjualan</td>
<td>/sales</td></tr>
<tr><td>4</td>
<td>Invoice</td>
<td>/invoices</td></tr></tbody></table>
<p>Simple saja, diatas ini adalah table menu. Untuk url nanti kita gunakan untuk redirect ke halaman itu ketika menu selesai di render (di frontend), sementara kita abaikan dulu field url nya.</p>
<p>Kedua bikin table User</p>
<table><thead><tr><th>id</th>
<th>username</th>
<th>password</th>
<th>write_menu</th>
<th>readonly_menu</th></tr></thead>
<tbody><tr><td>1</td>
<td>andi</td>
<td>anditampan</td>
<td>1,2</td>
<td>3</td></tr>
<tr><td>2</td>
<td>budi</td>
<td>budibiasa</td>
<td>3</td>
<td>1</td></tr>
<tr><td>3</td>
<td>candra</td>
<td>candrajelek</td>
<td>4</td>
<td></td></tr></tbody></table>
<p>Nah table diatas sudah bisa kita gunakan sebagai dasar untuk RBAC kita. Tinggal bagaimana kita melakukan rendering di frontend nya.</p>
<h2>Kesimpulan</h2>
<p>Tulisan diatas ini hanyalah konsep saja, untuk backend teman - teman bebas bisa pakai framework atau bahasa apa saja. Tugas untuk di backend ini adalah bagaimana kita bisa menyimpan / mengupdate data user dengan menu akses seperti diatas. Kemudian, pada fitur login, ketika user berhasil login maka backend akan mengirimkan (response) data yang berupa data user, misal seperti username, nama, jabatan, dan menu apa saja yang boleh diakses / cuma di read doang. Contoh response nya seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token punctuation">&#123;</span>
  <span class="token string">'name'</span><span class="token operator">:</span> <span class="token string">'Andi Sangat Tamvan'</span><span class="token punctuation">,</span>
  <span class="token string">'username'</span><span class="token operator">:</span> <span class="token string">'andi'</span><span class="token punctuation">,</span>
  <span class="token string">'password'</span><span class="token operator">:</span> <span class="token string">'anditampan'</span><span class="token punctuation">,</span>
  <span class="token string">'jabatan'</span><span class="token operator">:</span> <span class="token string">'Manager'</span><span class="token punctuation">,</span>
  <span class="token string">'write_menu'</span><span class="token operator">:</span> <span class="token string">'1,2'</span><span class="token punctuation">,</span>
  <span class="token string">'readonly_menu'</span><span class="token operator">:</span> <span class="token string">'3'</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah dari response diatas, maka tugas frontend adalah me render menu apa saja yang bisa diakses oleh si Andi, Menu mana saja yang Andi bisa melakukan CRUD, dan menu mana saja yang si Andi hanya boleh read data.</p>
<hr>
<p>Sekian konsep yang saya paparkan, next post insya allah akan saya bahas cara rendering menu menu nya di frontend (pakai Nuxtjs ya :D ). Untuk backend saya rasa tidak perlu dipaparkan, karena sudah sangat jelas flow nya. Tinggal bikin login, kemudian return response seperti json diatas (jika sukses login), selain itu create data user nya juga sudah jelas banget bagaimana cara nya. Semoga ga bingung sama penjelasan diatas, kalau bingung bisa tulis di kolom komentar. Thanks, moga bermanfaat XD</p>`
  })}`;
});
var membuatRbacSendiriKonsepPart1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Membuat_rbac_sendiri_konsep_part_1,
  metadata: metadata$t
});
var metadata$s = {
  "title": "Mengenal Route di Laravel 5 - Part 1",
  "date": "2017-11-28T15:58:19.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Routing adalah salah satu fitur terpenting yang disediakan oleh Laravel. Kita wajib memahami penggunaan route ini, karena ketika proses development, route akan sangat sering diakses.",
  "slug": "mengenal-route-di-laravel-5-part-1"
};
var Mengenal_route_di_laravel_5_part_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$s), {}, {
    default: () => `<p>Kebanyakan para programmer yang baru mencoba suatu framework pasti kebingungan harus mulai darimana, sentuh yang mana dulu, harus ngapain dulu, dll. Dari dasar itulah saya bikin postingan ini mulai dari yang paling dasar banget (dari post sebelumnya).</p>
<p>Sekarang ini kita akan belajar mengenal apa itu routing. Route adalah salah satu bagian paling penting yang ada di Laravel, tanpa adanya route request yang diminta oleh user tidak akan sampai ke dalam sistem. Nah URI yang akan diaksees harus kita cantumkan terlebih dahulu di file routes/web.php atau routes/api.php untuk bikin web API. Jika route sudah di definisikan didalam file routes tersebut (ambil contoh web.php), maka request yang diminta user akan diproses lebih lanjut oleh sistem Laravel.</p>
<br>
<h2>Routing Dasar</h2>
<p>Sebelum melangkah jauh, mari kita mengenal route lebih dekat dengan melihat contoh sederhana dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Route::get(&#39;home&#39;, function() &#123;
  return &#39;ini adalah halaman home&#39;;
&#125;);</code>`}<!-- HTML_TAG_END --></pre>
<p>Mari kita pelajari susunan dari satu route diatas</p>
<ol><li>Pertama kita wajib memberi kata \u201CRoute::\u201D diawal route nya.</li>
<li>Kemudian kita tentukan method nya. Didalam route ini ada beberapa method yang bisa digunakan, diantaranya get, post, put / patch, delete, resource, view, dll. (Akan saya jabarkan satu persatu di postingan mendatang, Inshallah).</li>
<li>Setelah itu kita masukkan URI nya, dalam contoh kasus ini menggunakan \u201Chome\u201D.</li>
<li>Function akan menjalankan hasil return yang berisi kata \u201Cini adalah halaman home\u201D.</li></ol>
<p>Nah dari sini, ketika temen temen mengakses web dengan url \u201Clocalhost/home\u201D maka akan tampil tulisan \u201Cini adalah halaman home\u201D.</p>
<br>
<h2>Redirect Routes</h2>
<p>Redirect route ini berfungsi untuk mengarahkan url pertama ke URL kedua. Contoh kasus nya seperti ini, misalnya kita punya halaman post yang memiliki jumlah viewer tinggi dengan url nusendra.com/post-bagus. Nah karena halaman ini sudah terindeks google dan rate nya bagus, url dan judul jangan sampai berubah karena nanti berpengaruh pada SEO. Jika kita ingin merubah url nya (misalkan), kita membutuhkan redirect route ini. Jadi ketika si user mengakses nusendra.com/post-bagus, maka otomatis akan dialihkan ke url lain misalnya nusendra.com/post-baru. Berikut ini syntax nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Route::redirect(&#39;/post-bagus&#39;,&#39;/post-baru&#39;);</code>`}<!-- HTML_TAG_END --></pre>
<br>
<h2>View Routes</h2>
<p>Route ini berfungsi untuk mengarahkan route langsung ke view. Di Laravel versi 5.4, view routes ini masih belum ada. Di Laravel 5.5 kebawah, untuk menjalankan view route ini harus dengan syntax berikut</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Route::get(&#39;home&#39;, function() &#123;
  return view(&#39;halaman_home&#39;);
&#125;);</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah kalo di Laravel 5.5 sudah di sederhanakan lag menggunakan view route</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Route::view(&#39;home&#39;, &#39;halaman_home&#39;);</code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kita pengen passing variable ke tampilan view melalui view route ini, bisa menggunakan syntax dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Route::view(&#39;home&#39;, &#39;halaman_home&#39;,[&#39;var&#39; =&gt; &#39;Ini variable&#39;]);</code>`}<!-- HTML_TAG_END --></pre>
<p>Segini dulu part pertama ini tentang masalah route. Di part selanjutnya akan dibahas lebih detail lagi. Semoga bermanfaat temen temen :-)</p>`
  })}`;
});
var mengenalRouteDiLaravel5Part1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Mengenal_route_di_laravel_5_part_1,
  metadata: metadata$s
});
var metadata$r = {
  "title": "Mengenal Route di Laravel 5 - Part 2",
  "date": "2017-11-29T13:27:53.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Part lanjutan dari pembahasan route di Laravel ini akan sedikit masuk kedalam samudra routing nya Laravel. Yuk mari kita simak biar kita pinter :-)",
  "slug": "mengenal-route-di-laravel-5-part-2"
};
var Mengenal_route_di_laravel_5_part_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$r), {}, {
    default: () => `<p>Lanjutan dari postingan sebelumnya Mengenal Route di Laravel 5 - Part 1 yang membahas tentang routing dasar. Kali ini kita akan sedikit masuk kedalam palung Laravel untuk mempelajari rahasia apa aja sih yang bisa dimanfaatkan di route ini.</p>
<h2>Segment pada Route</h2>
<p>Segment ini berfungsi untuk mem pass / melempar parameter (variable) kedalam suatu method di controller, atau bisa juga langsung digunakan pada fungsi di route. Contohnya seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'home/&#123;nama&#125;'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token variable">$nama</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Script diatas ketika dijalankan di browser dengan url <code>localhost/home/nusendra</code> maka akan menghasilkan tampilan \u201Cnusendra\u201D di browser.</p>
<p>Jika ingin passing variable dengan escape string, bisa pakai cara seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'home/&#123;nama?&#125;'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token variable">$nama</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jika kita coba url <code>localhost/home/nusendra&amp;kamu-iyakamu</code> maka akan muncul tampilan \u201Cnusendra&amp;kamu-iyakamu\u201D. Kenapa kita perlu menambahkan tanda \u201D?\u201D ? Karena aturan dalam segment route ini tidak boleh menggunakan tanda / simbol yang aneh aneh. untuk pemisah kalimat bisa menggunakan \u201D_\u201D, kalo pake \u201D-\u201D pasti ditolak.</p>
<h2>Memberi Nama pada Route</h2>
<p>Aplikasi besar pasti akan membutuhkan banyak baris script route. Nah untuk memudahkan kita mengakses route dan agar kita mudah mengingatnya, kita bisa memberi nama pada masing - masing route.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'home'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman home"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Bagaimana cara men generate url route di php? Gampang, tinggal kita ketik seperti ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// maka pada variable $url akan berisi localhost/home</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Prefix pada Route</h2>
<p>Dengan menggunakan prefix group, kita bisa lebih menyederhanakan kodingan kita. Coba bandingkan syntax dibawah ini.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin/kategori'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman kategori"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'kategori'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin/post'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman post"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin/portofolio'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman portofolio"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'portofolio'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Bandingkan dengan</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'kategori'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
         <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman kategori"</span><span class="token punctuation">;</span>
     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'kategori'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
         <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman post"</span><span class="token punctuation">;</span>
     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'portofolio'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
         <span class="token keyword">return</span> <span class="token string double-quoted-string">"ini halaman portofolio"</span><span class="token punctuation">;</span>
     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'portofolio'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jelas lebih teratur syntax nomor 2 kan? hehe.</p>
<hr>
<p>Demikian part route ini berakhir, semoga berguna buat temen temen yang sedang belajar Laravel 5 :-)</p>`
  })}`;
});
var mengenalRouteDiLaravel5Part2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Mengenal_route_di_laravel_5_part_2,
  metadata: metadata$r
});
var metadata$q = {
  "title": "Berkenalan Lebih Dekat dengan PWA",
  "date": "2019-05-05T15:29:00.000Z",
  "description": "Mengenal lebih dekat dengan Progressive Web App",
  "tags": ["opini", "pwa"],
  "draft": false,
  "slug": "berkenalan-lebih-dekat-dengan-pwa"
};
var Berkenalan_lebih_dekat_dengan_pwa = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$q), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/46c4ts1tskv22sdav81j9c69-wpengine.netdna-ssl.com/wp-content/uploads/sites/33/2018/02/cbb9dba164838b28c748310da3d4c188.png"}" style="${"width:100%;height:auto;"}">
<br>
<p>Artikel kali ini akan memulai seri baru yang akan membahas topik mengenai Progressive Web App (PWA). Langsung saja, PWA adalah sebuah website / aplikasi web yang dibangun diatas teknologi berbasis web modern (html, css dan js) yang berperilaku layaknya mobile native apps. Konsep PWA ini dikeluarkan oleh Google pada tahun 2015, saya sendiri tahu konsep ini dari mas Yohan Totting ketika pertama kali bikin challenge di <a href="${"https://medium.com/wwwid/tantangan-web-developer-untuk-membuat-aplikasi-web-bisa-digunakan-kurang-dari-5-detik-70bb7431741d"}" rel="${"nofollow"}">Artikel Medium</a> ini.</p>
<p>Tujuan utama dari konsep PWA ini adalah untuk meningkatkan dan memberikan pengalaman pengguna yang lebih baik, sama seperti ketika menggunakan aplikasi native. Bagi yang pengen benar - benar mendalami PWA, bisa langsung merujuk ke official page nya <a href="${"https://developers.google.com/web/progressive-web-apps/"}" rel="${"nofollow"}">disini</a></p>
<h2>PROS</h2>
<h3>Responsive Layout</h3>
<p>Pada PWA wajib untuk menggunakan layout yang responsif, sehingga ketika aplikasi dibuka di device manapun, tidak akan ada kebocoran tampilan yang bisa merembet ke kanan layar (Kalau masih bisa scroll ke kanan, berarti engga responsif). Apalagi pada PWA ini pengembangannya harus <em>mobile first design</em> sehingga aplikasi yang dibuat bisa beradaptasi di ukuran layar manapun.</p>
<h3>Offline Mode</h3>
<p>Ketika web pertama kali di load di browser, maka browser akan menyimpan file file asset dan halaman html kedalam cache. Ketika kita memuat web tersebut tanpa koneksi internet, yang tampil pada halaman web tersebut bukanlah gambar dinosaurus (Downsaurus), melainkan halaman yang sudah berhasil masuk ke dalam cache. Dengan begini sudah tidak ada lagi tampilan downsaurus ketika tidak ada internet di device kalian.</p>
<h3>Add to Homescreen (A2HS)</h3>
<p>Sama seperti halnya pada aplikasi native yang sudah berhasil di install di device, pasti da icon launcher yang tersedia di home screen / menu ponsel nya. Begitupun dengan PWA, dengan PWA kita bisa membuat sebuah fitur untuk menambahkan icon launcher kedalam device / ponsel kita. Add to Homescreen juga bisa berjalan offline. Jadi ketika membuka aplikasi PWA melalui icon A2HS, yang muncul adalah sebuah aplikasi (seperti native) yang berjalan di atas webview browser.</p>
<h3>Push Notification</h3>
<p>Kita bisa menambahkan fitur push notification yang berfungsi untuk memberikan notifikasi kepada pengguna. Fitur ini biasanya dipakai ketika ada postingan blog terbaru ataupun ada produk yang ingin kita tawarkan kepada pengguna.</p>
<h3>Development yang Murah</h3>
<p>Bagi pengembang aplikasi berbasis web, PWA adalah solusi bagi para developer untuk mmebuat aplikasi serasa native yang bisa dibuat menggunakan teknologi web modern. Alih - alih harus belajar bahasa baru untuk membuat sebuah aplikasi native, kan mending bikin aplikasi yang kita sudah kuasai bahasa nya :)</p>
<h3>Ga Makan Tempat</h3>
<p>Sisi negatif dari native app adalah berada di ukuran / kapasitas aplikasi dan data nya. Sering kali ponsel dengan kapasitas minim akan menjerit dengan memunculkan sebuah notifikasi bahwa kapasitas di ponsel nya sudah hampir penuh. Dengan PWA, kita ga perlu di bingungkan lagi dengan ukuran yang besar, karena PWA pada dasarnya adalah aplikasi yang berjalan di atas web browser. Maka disini PWA tidak membutuhkan space yang besar di device.</p>
<p>Poin - poin tersebut diatas adalah beberapa fitur / kelebihan yang paling utama, tentunya masih banyak kelebihan yang lain (mungkin akan terjawab pada postingan blog berikutnya, ketika implementasi).</p>
<h2>CONS</h2>
<h3>Membutuhkan Peramban yang Modern</h3>
<p>Saat artikel ini ditulis, PWA hanya bisa dijalankan pada browser modern, sejauh yang saya tahu hanya Chrome saja yang mampur menjalankan PWA secara sempurna. Sedangkan browser lain seperti Firefox dan Opera masih ada beberapa yang dalam tahap pengembangan.</p>
<h3>Wajib HTTPS</h3>
<p>Bukan wajib lagi sih kalau yang ini, melainkan fardhu\u2019ain haha. Untuk menjalankan PWA ini membutuhkan koneksi jaringan yang aman (Secure TL Connection / SSL). Hal ini untuk mengakomodasi kebutuhan keamanan dan push notification (misalnya).</p>
<h3>Masih Dini</h3>
<p>Konsep PWA ini baru saja keluar, maka disini masih banyak lagi yang perlu di explore dan kembangkan. Beberapa fitur yang terdapat di ponsel pun masih belum sepenuhnya bisa di implementasikan di PWA (Tidak seperti native yang sudah full support untuk mengakses beberapa API yang terdapat pada device / ponsel).</p>
<hr>
<p>Mungkin segini dulu pada seri pertama ini, sengaja bikin artikel yang singkat tapi langsung <em>to the point</em> biar ga bikin pembaca bosan :)</p>`
  })}`;
});
var berkenalanLebihDekatDenganPwa = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Berkenalan_lebih_dekat_dengan_pwa,
  metadata: metadata$q
});
var metadata$p = {
  "title": "Bagaimana Saya Mengatur Waktu sebagai Developer",
  "date": "2019-07-20T08:18:00.000Z",
  "description": "Sebagai seorang developer, apalagi seorang freelancer wajib punya time management agar work-life balance nya berjalan dengan baik",
  "tags": ["opini"],
  "draft": false,
  "slug": "bagaimana-saya-mengatur-waktu-sebagai-developer"
};
var Manajemen_waktu_sebagai_developer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$p), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://cdn.statically.io/img/d3tvpxjako9ywy.cloudfront.net/blog/content/uploads/2018/11/Time_Management_Apps_You_Should_Start_Using_Yesterday_1-896x518.jpg"}" style="${"width:100%;height:auto;"}">
<br>
<h2>Why we need a time management?</h2>
<p>Manajemen waktu adalah bagaimana kita mengatur waktu sehingga di setiap aktivitas nya mendapatkan porsi / bagian waktu yang sesuai dengan kebutuhan. Bayangkan jika kita tidak punya manajemen waktu yang baik, hidup mu ga akan berjalan teratur dan yang terjadi malah kesehatanmu juga bakal terganggu.</p>
<p>Bagi developer kantoran sih hal ini aman aman saja ya. Karena waktu kerja nya sudah pasti, berangkat jam 8 dan pulang jam 4 sore. Ntar dirumah terserah mau ngapain. Tidur pun terserah jam berapa. Nah bagi pekerja yang seperti ini, pulang ngantor trus nyantai, gaji dan skill nya juga biasanya nyantai, alias nyantai ga naik naik jajaja.</p>
<p>Nah bagi seorang freelancer, time management ini sangat sangat penting sekali. Kalau sampai ga nurut, bisa <em>keteteran</em> hidup lu. Biasa nya seorang freelancer tiap bulannya punya beberapa project yang harus digarap, sehingga dia harus bener bener bisa bagi waktu kapan harus ngerjain proyek A, kapan harus ngerjain proyek B. Gak mau kan kalau si client teriak teriak mulu?</p>
<h2>Seringnya lupa waktu</h2>
<p>Bangsat si nusendra, sok sok an ceramah padahal diri nya juga sering lupa waktu. Saya pribadi, <em>currently</em> ketika artikel ini ditulis lagi pegang 3 project (malahan ini ada masuk 1 lagi, tapi cuman company profile aja sih, ez). Kadang kewalahan dengan pembagian waktu nya. Saking capek nya, kadang niat ngoding sampe malam eh ketiduran di sofa / bed. Padahal sebelum sebelumnya ga bakal bisa tidur sebelum jam 12an. Fisik mulai menurun kali ya haha.</p>
<p>Nah karena amburadul nya waktu, ini juga lagi berusaha untuk memastikan bahwa time management nya berjalan dengan teratur dan baik. Biar ga nakal lagi buang buang waktu buat hal - hal yang ga penting.</p>
<h2>Terlambat tidur, terlambat bangun</h2>
<p>Pernah liat ada meme yang <em>nyinggung</em> kalo developer tuh, susah tidur, tapi susah bangun juga. Tidur jam 12 malem, bangun jam 8 pagi haha. Parah sih kalo ini.</p>
<p><img src="${"https://media.giphy.com/media/xT8qBvH1pAhtfSx52U/giphy.gif"}" alt="${"ngantuk"}"></p>
<p>Mayoritas para programmer yang doyan ngoding, doi ga akan tidur sebelum masalah nya terselesaikan. Kalau kerjaan nya belum kelar, atau bahkan masih penasaran kenapa kode nya ga <em>work</em>, dijamin dah ga bakal mampir ke tempat tidur sebelum bener bener beres. baru ntar pengen tidur kalau udah pas mentok banget dan udah males lanjut haha.</p>
<p>Akibat nya, telat tidur, telat juga bangun nya. Telat sholat subuh juga cooyy.</p>
<h2>How i manage my time</h2>
<p>Oh iya, perlu diingat ya. Hidup ku dan hidup mu berbeda, kita punya masalah masing - masing. Jadi lu ga bisa telan mentah mentah tulisan ini.</p>
<p>Oke saya telaah dulu kondisi saya. Seorang freelancer yang saat ini ngerjain 3 project. Maka time management yang akan saya terapkan adalah..</p>
<ol><li>Pagi, ngantor dengan jarak 30 menit dari rumah. Ngerjain project kantor dari jam 08:30 - 16:30.</li>
<li>Pulang nya, nyampe rumah rehat bentar, makan dan lainnya. Baru mulai gas lagi project kedua mulai jam 19:00 malam sampe jam 20:00. Habis itu wajib tidur.</li>
<li>Bangun jam 4, lanjut ngoding lagi (untuk project kedua) sampe jam 07:00 / 07:30.</li>
<li>Karena hari sabtu di kantor cuma setengah hari. Maka sisa nya bisa untuk ngerjain project ke 3 mulai dari sabtu siang sampai minggu malam.</li></ol>
<p>Loh gak ada jam santai nya? Emang gak ada. Ingat bro, di dunia itu bukan waktu nya untuk bersantai santai, di dunia itu waktu nya kerja (kerja juga pahala kan?), nanti istirahat benerannya ketika udah di alam setelah dunia. (alesan aja ini mah, aslinya no life banget haha).</p>
<p>NB : Padahal kenyataannya susaaaahhhh banget controlling my daily life kaya diatas. kadang ada beberapa waktu yang kelewatan, karena kecapean :(</p>
<p><img src="${"https://media.giphy.com/media/LTYT5GTIiAMBa/giphy.gif"}" alt="${"managing time"}"></p>`
  })}`;
});
var manajemenWaktuSebagaiDeveloper = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Manajemen_waktu_sebagai_developer,
  metadata: metadata$p
});
var metadata$o = {
  "draft": false,
  "title": "Menggunakan Knexjs di Express App",
  "date": "2019-01-26T12:53:35.000Z",
  "tags": ["expressjs"],
  "description": "Menggunakan Knexjs di Express App untuk memudahkan penulisan query di database.",
  "slug": "menggunakan-knexjs-di-express-app"
};
var Menggunakan_knexjs_di_express_app = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$o), {}, {
    default: () => `<p>Ketika kita membangun sebuah aplikasi dengan Express js, seringkali kita dihadapkan dengan sebuah pertanyaan besar, ORM mana yang akan kita pakai untuk memudahkan penulisan query database. Di MongoDB kita bisa menggunakan mongoose, di dunia RDBMS kita bisa pakai Sequelize, Knexjs, node-orm2, dll. Nah kali ini saya akan jelaskan bagaimana cara mudah pakai Knexjs di proyek aplikasi kita.</p>
<blockquote><p>Sebelumnya saya ingin menginformasikan bahwa disini saya pakai typescript dan express, untuk database saya pakai PostgreSQL. Bagi temen - temen yang pakai javascript ES5++ bisa menyesuaikan sendiri ya</p></blockquote>
<h2>Install Knexjs dan driver</h2>
<p>Pertama kuy kita install dulu Knexjs dan driver nya.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn global add knex</code>`}<!-- HTML_TAG_END --></pre>
<p>Diatas ini berfungsi untuk memasang knexjs secara global di local environment kita, sehingga nanti nya kita bisa menginisiasi file config knexjs di project kita. Selanjutnya mari install knex dan driver nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add knex pg</code>`}<!-- HTML_TAG_END --></pre>
<p>Diatas akan menginstall knex dan driver postgres di project kita. Kalau temen temen pakai mysql, bisa pakai <code>mysql2</code>.</p>
<h2>Setup</h2>
<p>Masuk ke folder project kita dan buka terminal disana, ketik seperti dibawah ini untuk generate file konfigurasi Knexjs</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ knex init</code>`}<!-- HTML_TAG_END --></pre>
<p>Maka nanti di root project kalian akan muncul satu file baru bernama knexfile.js. Silakan temen temen setup sesuai dengan kebutuhan.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  development<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    client<span class="token operator">:</span> <span class="token string">'postgresql'</span><span class="token punctuation">,</span>
    connection<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      host<span class="token operator">:</span> localhost<span class="token punctuation">,</span>
      port<span class="token operator">:</span> <span class="token number">5432</span><span class="token punctuation">,</span>
      database<span class="token operator">:</span> database_saya<span class="token punctuation">,</span>
      user<span class="token operator">:</span> postgres<span class="token punctuation">,</span>
      password<span class="token operator">:</span> rahasiadong
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    pool<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      min<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      max<span class="token operator">:</span> <span class="token number">10</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    migrations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      tableName<span class="token operator">:</span> <span class="token string">'knex_migrations'</span><span class="token punctuation">,</span>
      directory<span class="token operator">:</span> <span class="token string">'./database/migrations'</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    useNullAsDefault<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Saya contohkan config development env saya seperti diatas. Untuk file migrations saya taruh di folder <code>/database/migrations</code>.</p>
<blockquote><p>Jika temen temen pernah bermain dengan Laravel / Lumen / AdonisJS, maka kalian gak akan kesulitan dengan ORM ini.</p></blockquote>
<h2>Migrations</h2>
<p>Migration disini memudahkan kita untuk membuat table di database kita, juga bisa berfungsi sebagai version control terhadap desain database kita. Untuk mulai membuat file migration, masuk ke root folder dan buka terminal kemudian ketikkan dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ knex migrate:make user</code>`}<!-- HTML_TAG_END --></pre>
<p>Perintah diatas berfungsi untuk membuat file migration yang akan digunakan untuk membuat table bernama user (atau users). Silakan masuk ke folder /database/migrations yang tadi sudah dibuat dan disana kalian akan menemukan sebuah file migration yang bernama user. Yuk kita modif file nya sehingga kita bisa pakai untuk membuat table.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">exports<span class="token punctuation">.</span><span class="token function-variable function">up</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">knex<span class="token punctuation">,</span> Promise</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> knex<span class="token punctuation">.</span>schema<span class="token punctuation">.</span><span class="token function">createTable</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">,</span> <span class="token parameter">table</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    table<span class="token punctuation">.</span><span class="token function">increments</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notNullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notNullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'phone'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">'register_date'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defaultTo</span><span class="token punctuation">(</span>knex<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">'address'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">boolean</span><span class="token punctuation">(</span><span class="token string">'status'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    table<span class="token punctuation">.</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">down</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">knex<span class="token punctuation">,</span> Promise</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> knex<span class="token punctuation">.</span>schema<span class="token punctuation">.</span><span class="token function">dropTable</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk mengetahui schema / tipe data apa saja yang bisa kita pakai, silakan langsung cek ke docs nya Knex karena disana udah lengkap banget. Nih link nya <a href="${"https://knexjs.org/#Schema-Building"}" rel="${"nofollow"}">https://knexjs.org/#Schema-Building</a></p>
<p>Oh iya, di file migration tadi ada Promise juga yang berfungsi semacam transaction. yang artinya kita bisa menjalankan migrasi lebih dari satu table didalam Promise itu. Dan jika terdapat salah satu table migrasi yang gagal, maka knex akan membatalkan keseluruhan proses migrasi di file itu (Pelajari transaction di Database). Tapi untuk best practice nya, dalam satu file migrasi, kita usahakan untuk dipakai oleh satu table saja.</p>
<p>Kemudian kita jalankan migration nya agar table nya terbentuk, ketik perintah</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ knex migrate:latest</code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk menghapus migrasi sebelumnya, bisa pakai</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ knex migrate:rollback</code>`}<!-- HTML_TAG_END --></pre>
<p>Konsep nya sama dengan Laravel hahaha.</p>
<h2>Menggunakan Knexjs</h2>
<p>Pertama buat sebuah file konfigurasi untuk menghubungkan knex dan file knexfile nya (belibet yak ngomongnya haha). Buat sebuah folder baru di <code>/database/config</code> dan beri nama knex.js</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">const</span> env <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> <span class="token string">'development'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'../../knexfile.js'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>env<span class="token punctuation">]</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'knex'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian pada apps kita (Bisa berada di index.js, controller, atau router. Bebas teman teman taruh mana) kita import knex nya dan kita jalankan. Pada kasus berikut ini saya pakai controller menggunakan typescript.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Request<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> NextFunction <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> knex <span class="token keyword">from</span> <span class="token string">'../../database/config/knex.js'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">index</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    knex<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token parameter">response</span> <span class="token operator">=></span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> UserController<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Diatas adalah query untuk memanggil semua data users.</p>
<hr>
<p>Demikian adalah pengenalan singkat tentang Knexjs, untuk penggunaan selanjut nya insya allah akan saya sampaikan di postingan berikut nya. Semoga bermanfaat buat temen temen, jika masih ada pertanyaan atau tambahan mohon untuk di tulis di kolom komentar dibawah ya. Thanks for stopping by..</p>`
  })}`;
});
var menggunakanKnexjsDiExpressApp = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Menggunakan_knexjs_di_express_app,
  metadata: metadata$o
});
var metadata$n = {
  "title": "Mengenal Middleware di Laravel 5",
  "date": "2017-12-01T16:23:55.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Mengenal middleware di Laravel 5 wajib dilakukan, karena fitur ini sangat berguna untuk melakukan aksi filter request ke Controller. Yuk simak pembahasannya berikut ini",
  "slug": "mengenal-middleware-di-laravel-5"
};
var Mengenal_middleware_di_laravel_5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$n), {}, {
    default: () => `<p>Setelah mengenal sistem routing, sekarang kita belajar bareng - bareng tentang Middleware. Apa itu middleware? Middleware adalah  jembatan antara validasi request terhadap controller. Bahasa gampang nya sih Middleware itu sama seperti Polisi yang ada di Laravel. Perumpamaan nya, ketika ada razia para pengendara harus menunjukkan surat - surat kendaraan bermotor, kalo ada yang gak lengkap ya kena tilang. Sedangkan yang bawa surat - surat nya lengkap, dia boleh melanjutkan perjalanan.</p>
<p>Alur kerja nya seperti berikut ini. User memanggil Route 1, kemudian Middleware akan memproses apakah user sudah tervalidasi (login) atau belum. Jika sudah login maka request akan dilanjutkan ke Controller. Sedangkan jika user belum tervalidasi, maka akan dialihkan / redirect ke route lain.</p>
<h2>Membuat Middleware</h2>
<p>Untuk membuat sebuah middleware, bisa langsung create new file di <code>app/Http/Middleware</code>, atau yang paling gampang melalui artisan command.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">php artisan make:middleware UserAuth</code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu silakan temen temen buka file middleware yang barusan dibuat, kemudian edit file nya seperti dibawah ini (sesuaikan dengan kondisi temen temen sekalian)</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Middleware</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Closure</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation"></span>Support<span class="token punctuation"></span>Facades<span class="token punctuation"></span>Auth</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserAuth</span>
<span class="token punctuation">&#123;</span>
   <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Closure</span> <span class="token variable">$next</span><span class="token punctuation">)</span>
   <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name static-context">Auth</span><span class="token operator">::</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//Proses check otentikasi</span>
      <span class="token punctuation">&#123;</span>
         <span class="token comment">//user terauthentikasi, boleh lanjut ke controller</span>
      <span class="token punctuation">&#125;</span><span class="token keyword">else</span>
      <span class="token punctuation">&#123;</span>
         <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// User tidak terotentikasi, redirect ke route lain</span>
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">return</span> <span class="token variable">$next</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu silakan temen temen buka file Kernel di <code>app/Http/Kernel.php</code>, kemudian tambahkan kode dibawah ini di property $routeMiddleware.</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token string single-quoted-string">'UserAuth'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation"></span>App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Middleware<span class="token punctuation"></span>UserAuth</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu kita tinggal taruh saja pak polisi (middleware) nya di file route. Oh iya, untuk middleware ini sebaiknya kita bikinkan route group saja, dengan tujuan agar kode kita lebih simple dan minimalis</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'Home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'middleware'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'UserAuth'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
   <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/admin'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'AdminController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/posts'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Contoh diatas jika kita baca. Semua route yang akan melewati \u2018/admin\u2019 dan \u2018/posts\u2019 akan diperiksa terlebih dahulu oleh Middleware UserAuth. Jika user sudah login, maka user bisa mengakses controller AdminController dan PostController. Sebaliknya jika user ternyata belum terotentifikasi (login), maka akan di redirect ke route \u2019/\u2019 Home.</p>
<hr>
<p>Sekian pembahasan singkat middleware, jika ada yang temen temen perlu tanyakan, silakan komentar di bawah ya..</p>`
  })}`;
});
var mengenalMiddlewareDiLaravel5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Mengenal_middleware_di_laravel_5,
  metadata: metadata$n
});
var metadata$m = {
  "title": "Jabber / XMPP menggunakan Nodejs",
  "date": "2018-08-26T22:08:54.000Z",
  "tags": ["javascript", "nodejs"],
  "draft": false,
  "description": "Mari belajar membuat Jabber / XMPP client menggunakan Nodejs. XMPP ini adalah sebuah protocol komunikasi yang berbasis XML",
  "slug": "jabber-xmpp-menggunakan-nodejs"
};
var Jabber_xmpp_menggunakan_nodejs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$m), {}, {
    default: () => `<p>Jabber atau yang sekarang disebut dengan XMPP ini adalah sebuah protocol komunikasi yang berbasis XML. Perusahaan yang memakai protocol XMPP untuk bertukar text atau komunikasi adalah Google Talk (Hangout), Live Journal, dan Ovi. Facebook chat juga memperbolehkan XMPP untuk mengaksees protocol komunikasi mereka. Ya intinya begini, kalau dulu kita mengenal Yahoo Messenger, karena sekarang sudah mati maka komunikasi kebanyakan memainkan protocol XMPP ini.</p>
<p>Nah kali ini kita akan belajar bareng gimana sih cara bikin XMPP client untuk melakukan aktifitas chatting atau saling berkomunikasi melalui XMPP, dengan menggunakan Nodejs. Library yang akan kita pakai adalah <a href="${"https://github.com/simple-xmpp/node-simple-xmpp"}" rel="${"nofollow"}">simple-xmpp</a>. Pertama siapkan dulu npm init nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm init</code>`}<!-- HTML_TAG_END --></pre>
<p>kemudian silakan isi sesuai kebutuhan saja. Setelah itu kita install dulu simple-xmpp nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm install simple-xmpp</code>`}<!-- HTML_TAG_END --></pre>
<p>Lanjut lagi. Kita siapkan file index.js untuk tempat kita ngoding xmpp nya. Jika sudah selesai bikin file nya, mari kita isi dengan script kita</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token comment">// Import library simple-xmpp</span>
<span class="token keyword">var</span> xmpp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'simple-xmpp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Connect ke server XMPP</span>
xmpp<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	jid<span class="token operator">:</span> <span class="token string">'xmpp_saya@jabbim.com'</span><span class="token punctuation">,</span>
	password<span class="token operator">:</span> <span class="token string">'testing123'</span><span class="token punctuation">,</span>
	host<span class="token operator">:</span> <span class="token string">'jabbim.com'</span><span class="token punctuation">,</span>
	port<span class="token operator">:</span> <span class="token number">5222</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Kirim pesan ke penerima</span>
xmpp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'xmpp_penerima@jabbim.com'</span><span class="token punctuation">,</span> <span class="token string">'Ini adalah pesan testing yang dikirim dari xmpp_saya ke xmpp_penerima'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Jika xmpp client kita berhasil terhubung / login ke xmpp server, maka tampilkan pesan berikut</span>
xmpp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'online'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Terkoneksi dengan Jabber ID : '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>jid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Jika ada error di xmpp, munculkan pesannya</span>
xmpp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token comment">// Jika ada yang melakukan permintaan pertemanan, kita accept secara otomatis</span>
xmpp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'subscribe'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>from <span class="token operator">+</span> <span class="token string">' ingin menambahkan anda sebagai teman'</span><span class="token punctuation">)</span>
	xmpp<span class="token punctuation">.</span><span class="token function">acceptSubscription</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>from <span class="token operator">+</span> <span class="token string">' telah ditambahkan sebagai teman'</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token comment">// Tampilkan pesan jika ada pesan masuk (terima pesan)</span>
xmpp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'chat'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">from<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk menjalankan script diatas, kalian hanya perlu buka terminal di folder root project kalian, kemudian jalankan</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ node index.js</code>`}<!-- HTML_TAG_END --></pre>
<p>Ngomong dari tadi kita ngomongin XMPP client melulu, lalu untuk XMPP server apa ya? Nah XMPP server ini tempat / host untuk kita melakukan komunikasi. XMPP server ini banyak tersebar dimana mana, bahkan kita sendiri pun bisa membangun nya dengan mudah. Jadi kalau kita analogikan, XMPP server ini bisa jadi seperti Facebook chat, Line, whatsapp, telegram, dll. Dan kita bisa berkomunikasi dari whatsapp ke akun telegram, dan seterusnya. Nah kalian bisa coba daftar ke <a href="${"https://www.jabbim.com/"}" rel="${"nofollow"}">Jabbim.com</a>.</p>
<p>FYI, saya menggunakan XMPP / Jabber ini untuk kebutuhan bertukar pesan ketika melakukan transaksi pulsa H2H, dan yang jelas script nya tidak sesimple diatas ya hehehe.</p>
<hr>
<p>Nah itu tadi sekilas tentang bagaimana cara bikin XMPP client buatan kita sendiri. Selamat mencoba dan semoga bermanfaat, makasih udah mampir.</p>`
  })}`;
});
var jabberXmppMenggunakanNodejs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Jabber_xmpp_menggunakan_nodejs,
  metadata: metadata$m
});
var metadata$l = {
  "draft": false,
  "title": "Membangun Komunitas SurabayaJS",
  "date": "2019-04-29T17:11:00.000Z",
  "description": "Cerita singkat membangun komunitas IT di surabaya yang bernama SurabayaJS",
  "tags": ["opini"],
  "slug": "membangun-komunitas-surabayajs"
};
var Membangun_komunitas_surabayajs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$l), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/raw.githubusercontent.com/nusendra/blog/master/blog/2019/gator.png"}" style="${"width:auto;height:200px;"}">
<p>Sudah bukan rahasia lagi bahwa seseorang yang bergerak di bidang IT, hidupnya ga akan jauh jauh dari yang namanya forum / group chat komunitas. Bayangin aja, ketika dia stuck ngoding kemana lagi dia akan bertumpu? Kalo ga google ya stackoverflow. Itu adalah solusi pasif, yang mana kita ga akan bisa secara aktif berdiskusi dan ga bisa dapet jawaban yang cepat. Kalau pengen solusi yang lebih cepat, ya gabung ke suatu komunitas tentang teknologi tertentu di group aplikasi bertukar pesan, seperti Telegram.</p>
<p>Di Surabaya sendiri sudah ada komunitas besar yang bernama SurabayaDEV, yang mana komunitas ini aktif ngadain meetup bulanan buat ngebahas berbagai sisi teknologi. Tapi yang namanya komunitas general, bahasannya akan lebih melebar dan engga terlalu dalam. Selain itu, di Surabaya mayoritas progremer masih berkutat di bahasa <code>pehape</code>. Dari bawah ke atas, atas kebawah, <code>pehape</code> mulu yang dipake.</p>
<p>Nah karena penting nya sebuah komunitas ini bagi kehidupan bersosialisasi para kodinger di Indonesia (yang mana, you know lah progremer itu mayoritas introvert) khususnya Surabaya, maka saya berinisiasi untuk coba membangun sebuah komunitas yang bakal bahas JavaScript dari luar dan dalam, bernama SurabayaJS #poof</p>
<h2>But, Why ?</h2>
<p>Kenapa harus JavaScript? Ga lain dan ga bukan, karena namanya JavaScript = Java Script = Jawa Bahasa = Bahasa Jawa = Aksara Jawa. haha, bad jokes. Serius, ya karena JS akhir akhir ini mulai menggila. Liat aja, mulai dari Frontend, Backend, Mobile Apps, bahkan Machine Learning bisa diselesaikan dengan JS. Maka dari itu komunitas ini berusaha untuk membawa anak anak Surabaya agar lebih <em>aware</em> dan bisa ngikutin perkembangan jaman, khususnya dengan JavaScript.</p>
<p>Selain itu, sudah ada beberapa komunitas JS di berbagai kota, seperti JakartaJS, BandungJS, JogjaJS, BaliJS, LombokJS, dll. Nah Surabaya sendiri masih belum ada, maka ini waktu yang tepat untuk menginisiasi komunitas ini.</p>
<h2>Kapan ? Dan Siapa aja?</h2>
<p>Apanya yang kapan? haha</p>
<p>Kapan dibangun komunitas ini? Komunitas ini saya inisiasikan di bulan November 2018 dengan membuat group Telegram SurabayaJS. Pengurus awalnya hanya bertiga, saya, Lucky Pradana dan Royyan Bachtiar. Sekarang (saat artikel ini ditulis) pengurus nya sudah ada 5, nambah mas Yuda Mahendra dan Griko Nibras.</p>
<h2>Tujuan</h2>
<p>Komunitas ini dibangun untuk mempersenjatai developer yang ada di Surabaya dengan beberapa materi dan topik mengenai JavaScript. Yang mana JS saat ini merupakan bahasa yang (harusnya) wajib untuk dipelajari karena tuntutan dunia teknologi yang makin berkembang. Liat saja pergolakan nya, kita baru aja belajar React, eh udah muncul Vue, baru mau mulai belajar Vue, eh muncul lagi Svelte, dst. Ga akan ada habis nya kalau kita mau bicara JavaScript.</p>
<p>Jangankan di sisi client, bahkan di sisi server pun bisa dihandle oleh JavaScript. Express, Fastify, Hapi, Adonis, dll adalah beberapa framework untuk membangun API services. Apa lagi? Machine Learning? Bisa pakai Tensorflowjs. Mobile Apps? Bisa pakai React Native, Nativescript, dll. Masih ragu untuk belajar JS?</p>
<h2>Kegiatan</h2>
<p>Saat ini kita hanya fokus pada meetup bulanan yang bakal bawain materi - materi seputar JavaScript. Ga menutup kemungkinan kedepannya bakal ada Workshop dan kegiatan keren lainnya.</p>
<hr>
<p>Informasi lanjut tentang komunitas ini, barangkali pengen join silakan :-)</p>
<ul><li><a href="${"https://www.instagram.com/surabaya.js/"}" rel="${"nofollow"}">Instagram</a></li>
<li><a href="${"https://t.me/surabayajs"}" rel="${"nofollow"}">Telegram</a></li>
<li><a href="${"https://surabayajs.org"}" rel="${"nofollow"}">Official Web</a></li></ul>`
  })}`;
});
var membangunKomunitasSurabayajs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Membangun_komunitas_surabayajs,
  metadata: metadata$l
});
var metadata$k = {
  "title": "Menyematkan Data pada Vue Slot",
  "date": "2020-03-26T06:00:00.000Z",
  "description": "Catatan singkat tentang cara menyematkan sebuah attribute atau data kedalam vue slot",
  "tags": ["vuejs", "javascript'"],
  "draft": false,
  "slug": "menyematkan-data-pada-vue-slot"
};
var Menyematkan_data_pada_vue_slot = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$k), {}, {
    default: () => `<p>Kali ini mau ngebahas singkat aja nih, tentang bagaimana cara menyematkan sebuah attribute atau data kedalam vue slot, karena fitur ini sering kali terdapat perubahan di sisi sintaks vue nya, jadi rasanya perlu saya catat juga di blog ini. Kenapa perlu dicatat? Karena saya sendiri ga pernah menghafal sintaks.</p>
<p>Nah kasus nya kemarin lagi develop app pake vue dan membutuhkan slot, secara konsep paham dan langsung tulis aja sintaks nya, eh ternyata dapet error karena sintaks salah. Haha yaudah deh langsung buka gugel buat beresin problem ini. Eh masalah baru muncul, kebanyakan artikel mengenai vue slot ini tidak konsisten versi vue nya, ada yang dibawah 2.6, ada yang 2.6 dll. Ternyata masih ada blog yang tidak di update dari sisi sintaks nya, yang mana sintaks itu udah <em>deprecated</em>.</p>
<h2>Basic Slot</h2>
<p>Fitur slot pada Vue ini merupakan fitur tingkat lanjut yang terkadang para pemula / pendatang baru di dunia vue merasa sering kebingungan tentang kegunaan nya. Intinya fungsi dari vue slot ini adalah untuk menyematkan sebuah element / component kedalam child component. Bingung? Langsung ke kodingan nya aja yak.</p>
<pre class="${"language-vue"}"><!-- HTML_TAG_START -->${`<code class="language-vue">&lt;!-- Child Component --&gt;
&lt;template&gt;
  &lt;div&gt;
    &lt;span&gt;Saya adalah child component&lt;/span&gt;
    &lt;div&gt;
      &lt;span&gt;Dibawah ini adalah slot&lt;/span&gt;
      &lt;slot /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian pada component yang sedang kita kerjakan</p>
<pre class="${"language-vue"}"><!-- HTML_TAG_START -->${`<code class="language-vue">&lt;!-- Parent Component --&gt;
&lt;template&gt;
  &lt;child&gt;
    &lt;button&gt;Hajar kak&lt;/button&gt;
  &lt;child&gt;
&lt;/template&gt;

&lt;script&gt;
import Child from &quot;@/components/child&quot;;

export default &#123;
  components: &#123; Child &#125;
&#125;
&lt;/script&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah jika temen temen lihat, didalam child component itu saya sematkan sebuah button, yang mana button itu akan di <em>inject</em> atau disematkan kedalam child component. Nah nanti ketika di render akan jadi seperti ini</p>
<pre class="${"language-vue"}"><!-- HTML_TAG_START -->${`<code class="language-vue">&lt;!-- Child Component --&gt;
&lt;template&gt;
  &lt;div&gt;
    &lt;span&gt;Saya adalah child component&lt;/span&gt;
    &lt;div&gt;
      &lt;span&gt;Dibawah ini adalah slot&lt;/span&gt;
      &lt;button&gt;Hajar kak&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Dari sini paham ya? Awas kalau masih belom paham, lu yang gue hajar haha.</p>
<h2>Scoped Slot</h2>
<p>Scoped slot ini berfungsi untuk melempar / <em>passing</em> data / attribute dari slot ke parent nya. Langsung ke contoh aja yak biar makain paham.</p>
<pre class="${"language-vue"}"><!-- HTML_TAG_START -->${`<code class="language-vue">&lt;!-- Child Component --&gt;
&lt;template&gt;
  &lt;div&gt;
    &lt;span&gt;Saya adalah child component&lt;/span&gt;
    &lt;div&gt;
      &lt;span&gt;Dibawah ini adalah slot pertama&lt;/span&gt;
      &lt;slot :data=&quot;pertamax&quot; /&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;span&gt;Dibawah ini adalah slot kedua&lt;/span&gt;
      &lt;slot :data=&quot;keduax&quot; name=&quot;kedua&quot; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default &#123;
  data: () =&gt; (&#123;
    pertamax: &quot;ini slot pertamax&quot;,
    keduax: &quot;ini slot keduax&quot;
  &#125;)
&#125;;
&lt;/script&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Parent component nya seperti ini</p>
<pre class="${"language-vue"}"><!-- HTML_TAG_START -->${`<code class="language-vue">&lt;!-- Parent Component --&gt;
&lt;template&gt;
  &lt;child&gt;
    &lt;template slot-scope=&quot;props&quot;&gt;
      &lt;span&gt;&#123;&#123; props.data &#125;&#125;&lt;/span&gt;
    &lt;/template&gt;
    &lt;template slot=&quot;kedua&quot; slot-scope=&quot;props&quot;&gt;
      &lt;span&gt;&#123;&#123; props.data &#125;&#125;&lt;/span&gt;
    &lt;/template&gt;
  &lt;child&gt;
&lt;/template&gt;

&lt;script&gt;
import Child from &quot;@/components/child&quot;;

export default &#123;
  components: &#123; Child &#125;
&#125;
&lt;/script&gt;</code>`}<!-- HTML_TAG_END --></pre>
<p>Maka nanti ketika di render, attribute yang ada pada child component akan di lemparkan / di sematkan ke parent component nya. Saya juga tambahkan disitu contoh penggunaan default slot dan named slot ya, semoga tidak bingung.</p>
<p>Contoh kasus nyata penggunaan dari scoped slot ini adalah, misalkan kita punya table component yang mana table ini di tiap tiap halaman pasti punya perilaku yang berbeda beda. Nah slot ini cocok dipakai untuk melengkapi table component tersebut sesuai dengan kriteria nya. Misalkan pada halaman user pada component table kita sematkan button edit, kemudian pada halaman transaksi kita sematkan button hapus, dll.</p>
<p>Nah proses button ini kan juga perlu mengambil data di tiap tiap row yang ada di table component kan? Maka scoped slot sangat membantu disini.</p>
<hr>
<p>Sekian dulu postingan singkat ini, semata - mata untuk catatan pribadi saja yang kadang kelupaan dengan sintaks nya slot (vue slot sering gonta ganti sintaks bro haha). Oh iya, vue disini pakai versi terbaru ya, yakni 2.6++. Semoga bermanfaat bagi temen temen yang mampir kesini, thanks..</p>`
  })}`;
});
var menyematkanDataPadaVueSlot = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Menyematkan_data_pada_vue_slot,
  metadata: metadata$k
});
var metadata$j = {
  "title": "Pengenalan Dasar tentang Lumen",
  "date": "2018-01-07T12:14:49.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Untuk mulai membuat RESTful API, Pengenalan Dasar tentang Lumen sangat perlu dan penting untuk dipelajari agar nantinya kita lebih mudah dalam membuat sebuah API service.",
  "slug": "pengenalan-dasar-tentang-lumen"
};
var Pengenalan_dasar_tentang_lumen = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$j), {}, {
    default: () => `<p>Sebagai selingan kita dalam belajar Laravel, mari kita mengenal Lumen lebih jauh. Pengenalan dasar tentang Lumen perlu dan penting untuk diperhatikan bagi yang pengen belajar lebih jauh tentang lumen. Sebagai informasi, artikel ini juga sudah saya pakai untuk kuliah telegram di group Laravel Indonesia. Mari kita mulai ..</p>
<p>Bahasan pertama saya akan bahas sekilas tentang lumen. Apa sih lumen? lumen adalah microframework yang khusus menangani API service sama seperti Slim dan Silex. Lumen ini juga bisa dikatakan sebagai adik kecil nya laravel, jadi kalian inshallah pasti langsung paham dengan struktur dan cara mengimplementasikan lumen.</p>
<h2>WHY LUMEN ?</h2>
<p>Sebelum menentukan framework PHP yang akan kita pakai, kita sebaiknya tentukan dulu teknologi dan sistem seperti apa yang akan kita bangun.</p>
<p>Jika web sederhana tanpa banyak melibatkan frontend framework JS misalnya, kita gunakan saja Laravel. Pakai Laravel dengan dipadukan frontend JS juga bisa, misalnya saja Vuejs yang udah include di fresh instalasi nya laravel. Jika web yang membedakan repository project, misalkan untuk backend pakai php, sedangkan frontend pakai full JS maka kita perlu yang namanya API. Bisa juga sih API kita pakai Laravel, tapi sangat disarankan untuk tidak memakai Laravel kalau hanya untuk kebutuhan API saja karena Laravel mempunyai banyak fitur, yang nantinya fitur fitur ini tidak terpakai karena kita hanya memanfaatkan API nya saja. So, kita perlu framework yang khusus untuk API.</p>
<p>Nah why lumen? Kenapa bukan yang lain misalnya Silex / Slim?? Sah sah saja kalau mau pakai selain lumen, tapi berdasarkan benchmark, Lumen lebih mantap daripada Slim. (Benchmark ya, bukan vote)
<a href="${"https://www.gajotres.net/best-available-php-restful-micro-frameworks/"}" rel="${"nofollow"}">https://www.gajotres.net/best-available-php-restful-micro-frameworks/</a></p>
<p>Karena disini yang di rekomendasikan adalah Slim, Lumen, Silex, Phalcon. Maka benchmark nya dibawah ini
<a href="${"https://symfony.fi/entry/symfony-benchmarks-microkernel-silex-lumen-and-slim"}" rel="${"nofollow"}">https://symfony.fi/entry/symfony-benchmarks-microkernel-silex-lumen-and-slim</a></p>
<h2>INSTALASI</h2>
<p>untuk instalasi, gak perlu saya jelaskan panjang lebar. Hampir sama dengan instalasi laravel yang udah saya bahas di post awal tentang Laravel, disini</p>
<p><a href="${"https://nusendra.com/post/cara-install-laravel-melalui-composer"}" rel="${"nofollow"}">https://nusendra.com/post/cara-install-laravel-melalui-composer</a></p>
<p>Cara instalasi nya sangat mudah</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ composer create-project --prefer-dist laravel/lumen blog</code>`}<!-- HTML_TAG_END --></pre>
<p>untuk running server nya kita ga bisa pakai php artisan serve, tapi pake built-in php dev server nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php -S localhost:8000 -t public</code>`}<!-- HTML_TAG_END --></pre>
<h2>CONFIG DASAR</h2>
<p>pada lumen fresh install, dia bener bener ringan. tapi jika kita pengen pake kekuatan yang ada di laravel (seperti eloquent, facades, middleware, dll) untuk dipakai di lumen, kita harus mengaktifkan nya di file <code>bootstrap/app.php</code>.
Uncomment baris kode dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token variable">$app</span><span class="token operator">-></span><span class="token function">withFacades</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//untuk mengaktifkan fitur facade (sangat disarankan)</span>
<span class="token variable">$app</span><span class="token operator">-></span><span class="token function">withEloquent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//untuk mengaktifkan fitur eloquent (optional)</span>
<span class="token variable">$app</span><span class="token operator">-></span><span class="token function">routeMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">'auth'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation"></span>Http<span class="token punctuation"></span>Middleware<span class="token punctuation"></span>Authenticate</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//untuk mengaktifkan middleware di route (untuk auth)</span>
<span class="token variable">$app</span><span class="token operator">-></span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation"></span>Providers<span class="token punctuation"></span>AppServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//untuk memakai service provider</span>
<span class="token variable">$app</span><span class="token operator">-></span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation"></span>Providers<span class="token punctuation"></span>AuthServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//untuk auth</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>COMPOSER : LARAVEL VS LUMEN</h2>
<p>Ketika kalian mengetik php artisan di terminal, pada laravel akan muncul banyak opsi, sebaliknya di lumen kalian hanya akan menemukan sedikit. karena lumen ini lebih banyak menggunakan teknik manual daripada otomatisasi seperti di laravel. Jika di laravel kita bisa bikin model dan controller lewat artisan, di lumen kita ga bisa melakukan hal tersebut. So, di lumen kita harus create file nya manual.</p>
<h2>ROUTE DI LUMEN</h2>
<p>Di Laravel, kita bisa mengetikkan route seperti ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>atau dengan resource</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>tapi di Lumen 5.5 berbeda, seperti dibawah ini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token variable">$router</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'PostController@index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>dan satu lagi, di lumen kita ga bisa pakai fitur resource..</p>
<h2>API VERSIONING DI LUMEN</h2>
<p>Saya dulu gak paham dengan api versioning ini. Kebingungan ini merasuk ke dalam jiwa #lol ketika mencari perbedaan antara URI localhost/api/v1/post dengan localhost/post. Karena keduanya sama aja di response nya, gak ada perbedaan sama sekali. Lantas apa gunanya api version? akhirnya googling sendiri dan nemu artikel ini
<a href="${"https://dzone.com/articles/rest-api-versioning-is-there-a-right-answer"}" rel="${"nofollow"}">https://dzone.com/articles/rest-api-versioning-is-there-a-right-answer</a>
Jadi ada 2 kondisi :</p>
<p>Jika api yang dibangun hanya untuk kebutuhan internal, maka kita tidak perlu api versioning Jika api kita merupakan public API yang mana kita gak bisa mengontroll di sisi client, maka kita perlu melakukan api versioning.</p>
<p>Silakan kunjungi artikel tersebut, baca di awal awal postingan saja. insyallah paham.</p>
<hr>
<p>Nah segini dulu pembukaan untuk pembahasan dasar lumen. Semoga berguna bagi temen - temen yang mungkin mau coba nerapin RESTful API pakai Lumen..</p>`
  })}`;
});
var pengenalanDasarTentangLumen = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Pengenalan_dasar_tentang_lumen,
  metadata: metadata$j
});
var metadata$i = {
  "title": "Groupby Array pada JavaScript",
  "date": "2019-09-13T10:38:00.000Z",
  "description": "Catatan / snippet singkat tentang bagaimana cara membuat fungsi groupby array pada JavaScript",
  "tags": ["opini", "snippet"],
  "draft": false,
  "slug": "groupby-array-pada-javascript"
};
var Groupby_array_pada_javascript = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$i), {}, {
    default: () => `<p>Kadangkala kita menemukan suatu kondisi yang mengharuskan kita untuk melakukan group by pada koleksi didalam data array kita. Nah cara yang paling mudah adalah menggunakan lodash. Tapi masa iya sih hal yang begini saja harus pake lodash? Kalau bisa bikin sendiri, kenapa harus pake lodash? Betul ga?</p>
<p>Nah kali ini kita akan coba bikin fungsi group by sendiri. Katakanlah kita punya kasus seperti dibawah ini.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'satu'</span><span class="token punctuation">,</span> <span class="token string">'dua'</span><span class="token punctuation">,</span> <span class="token string">'tiga'</span><span class="token punctuation">,</span> <span class="token string">'empat'</span><span class="token punctuation">,</span> <span class="token string">'lima'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kita pengen huruf huruf diatas dikumpulkan berdasarkan jumlah karakter nya, jadi ekspektasi nya seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">hasil <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token number">3</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'dua'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token number">4</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'satu'</span><span class="token punctuation">,</span> <span class="token string">'tiga'</span><span class="token punctuation">,</span> <span class="token string">'lima'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token number">5</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'empat'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Atau mungkin yang lebih ke real case, seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Abdul'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Budi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Candra'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Dedy'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Eko'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Faruq'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Gibran'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Hadi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Malang'</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Dan ekspektasi nya seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">hasil <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  Surabaya<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Abdul"</span> <span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">"Surabaya"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Candra"</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">"Surabaya"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Dedy"</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">"Surabaya"</span> <span class="token punctuation">&#125;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  Sidoarjo<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Budi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Gibran'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  Gresik<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Eko'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Faruq'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  Malang<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Hadi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Malang'</span> <span class="token punctuation">&#125;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Pembuatan Function</h2>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">let</span> <span class="token function-variable function">groupBy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> element<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">(</span>value<span class="token punctuation">[</span>x<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">[</span>x<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Eksekusi</h2>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">let</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'satu'</span><span class="token punctuation">,</span> <span class="token string">'dua'</span><span class="token punctuation">,</span> <span class="token string">'tiga'</span><span class="token punctuation">,</span> <span class="token string">'empat'</span><span class="token punctuation">,</span> <span class="token string">'lima'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> array2 <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Abdul'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Budi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Candra'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Dedy'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Surabaya'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Eko'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Faruq'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Gresik'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Gibran'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Sidoarjo'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'Hadi'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'Malang'</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> groupArray1 <span class="token operator">=</span> <span class="token function">groupBy</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span> <span class="token string">'length'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> groupArray2 <span class="token operator">=</span> <span class="token function">groupBy</span><span class="token punctuation">(</span>array2<span class="token punctuation">,</span> <span class="token string">'city'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groupArray1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groupArray2<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Tambahan dikit, hasil diatas akan berbentuk object, jika kalian pengen object tersebut di convert ke array, bisa pakai fungsi dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">const</span> toArray1 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>groupArray1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> toArray2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>groupArray2<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Maka nanti hasil nya akan jadi array dan bisa di <code>looping</code>.</p>
<hr>
<p>Demikian snippet singkat, semoga membantu buat temen - temen yang mungkin butuh solusi seperti diatas :). Semoga bermanfaat dan silakan dicoba :D</p>`
  })}`;
});
var groupbyArrayPadaJavascript = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Groupby_array_pada_javascript,
  metadata: metadata$i
});
var metadata$h = {
  "title": "Manfaat dari berpikir negatif",
  "date": "2018-08-10T02:53:01.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "Gak selamanya berpikir negatif itu buruk, mari manfaatkan kekuatan dari berpikir negatif.",
  "slug": "manfaat-dari-berpikir-negatif"
};
var Manfaat_dari_berpikir_negatif = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$h), {}, {
    default: () => `<p>Gak selamanya berpikir negatif itu berakibat buruk, bahkan kita bisa mendapatkan manfaat jika mampu memanfaatkan dan mengendalikan si makhluk bernama negative thinking ini. Negative thinking ini sering kali berdampak buruk bagi kehidupan dan aktivitas kedepannya, contoh gampang nya :</p>
<ol><li>Pesimis untuk bisa mendapatkan peringkat 1 di sekolah</li>
<li>Ragu - ragu untuk mengambil kesempatan yang langka</li>
<li>Tidak yakin dengan kemampuan diri sendiri</li>
<li>dll</li></ol>
<p>Dampak dari negative thinking dari contoh yang saya sebutkan diatas salah satunya adalah turunnya atau bahkan hilang nya semangat yang akan kita pakai untuk beraktifitas. Misalnya saja, kita pesimis untuk bisa mengerjakan suatu project dalam waktu yang tepat, sehingga nanti nya ketika proses pengerjaan project itu akan terganggu karena semangat kita udah loyo duluan.</p>
<p>Contoh diatas tadi merupakan cara berpikir yang lemah, karena ga semua berpikir negatif itu buruk dan hanya menyerah pada pikiran yang itu itu saja. Jika kita mampu mengolah dan menggunakan seluruh logika kita, negative thinking itu malah bisa jadi sebuah keuntungan loh. Loh kok bisa??? </p>
<p>Memanfaatkan negative thinking untuk tindakan preventif itu sebuah kekuatan, bahkan nilai plus dari positive thinking. Secara pribadi, saya selalu berfikir negatif terlebih dahulu sebelum berfikir positif. Berfikir negative ini bukan yang pesimis seperti diatas tadi ya, tapi hanya memikirkan terjadi nya kemungkinan terburuk sehingga kita sudah siap untuk menghadapi nya dengan segala kemampuan.</p>
<p>Contoh gampang nya seperti ini, Saya dapat tawaran freelance untuk mengerjakan project sistem pemerintahan yang lumayan kompleks dengan jangka waktu 4 bulan (misalnya) dan tanpa team. Tentu nya jangka waktu seperti ini sangat singkat ya, otomatis biasanya freelancer menolak tawaran ini karena udah pesimis duluan karena project nya ga bakal kelar. Nah dari simulasi kasus seperti ini mari kita coba implementasikan teori yang kita bahas kali ini, yakni negatif dulu baru positif.</p>
<h2>PERTAMA</h2>
<p>Kita berpikir negatif dulu. Apa kira kira kemungkinan terburuk dari kondisi seperti ini?</p>
<ol><li>Project tidak selesai,</li>
<li>Pengerjaan yang buru buru, sehingga akan banyak bug yang muncul,</li>
<li>Kodingan gak rapi, susah maintenance kode,</li>
<li>dll</li></ol>
<h2>KEDUA</h2>
<p>Dari kemungkinan terburuk itu, kita jadi punya pegangan bagaimana cara menanggulangi / menghadapi kondisi kegagalan seperti itu (preventive), misalnya</p>
<ol><li>Memetakan dan membuat design system yang benar benar bagus dan jelas.</li>
<li>Manajemen waktu yang bagus, misalnya sehari wajib koding 12 - 13 jam :D.</li>
<li>Mulai bekerja dengan metode TDD (Test Driven Development).</li>
<li>Menggunakan Reusable code dan Don\u2019t Repeat Yourself.</li>
<li>dll</li></ol>
<h2>KETIGA</h2>
<p>Biarkan Positive thinking menghampiri anda. Dan satu lagi catatan penting, <em>jangan sampai negative thinking yang berlebihan menguasai dan menggerogoti semangat anda.</em></p>
<hr>
<p>Semoga artikel yang sok bijak kali ini bisa bermanfaat buat teman - teman pembaca sekalian.</p>
<p>Thanks for stopping by</p>
<p>Sumber  :  Otak kanan saya \u2026</p>`
  })}`;
});
var manfaatDariBerpikirNegatif = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Manfaat_dari_berpikir_negatif,
  metadata: metadata$h
});
var metadata$g = {
  "title": "How to Setup My Personal Vim",
  "date": "2019-08-04T19:12:00.000Z",
  "description": "Langkah - langkah installasi sampai konfigurasi vim seperti milik saya",
  "tags": ["opini", "vim"],
  "draft": false,
  "slug": "how-to-setup-my-personal-vim"
};
var How_to_setup_my_personal_vim = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$g), {}, {
    default: () => `<p><img src="${"https://ik.imagekit.io/nusendra/Screenshot_20190804_191653_hgQ-O1VD_.png"}" alt="${"nusendra vim"}"></p>
<br>
<p>Ya, saya adalah pengguna Vim, lebih tepatnya sekarang udah pindah dari vim 8 ke Neovim (nvim). Kenapa ga pake vscode? Males banget sih pake editor yang berat gitu, electron wkwk. Yuhuu, kali ini mau berbagi bagaimana pertama kali instalasi / menggunakan NVim, dan bagaimana instalasi plugin - plugin yang diperlukan.</p>
<h2>Install NVim</h2>
<p>Yes, pertama install nvim dulu. Kalian bisa merujuk ke alamat <a href="${"https://neovim.io/"}" rel="${"nofollow"}">https://neovim.io/</a> ini ya. Ketikkan ini di terminal kalian</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo apt-get install software-properties-common</code>`}<!-- HTML_TAG_END --></pre>
<p>trus abis itu jalanin dibawah ini ye</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">sudo add-apt-repository ppa:neovim-ppa/stable
sudo apt update
sudo apt install neovim
sudo apt-get install python-dev python-pip python3-dev python3-pip</code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau udah selesai, coba kalian ketik <strong>nvim</strong> atau di beberapa distro linux udah bisa langsung ketik <strong>vim</strong>.</p>
<h2>Set Konfigurasi NVim</h2>
<p>Kalau di vim 8, file konfigurasi nya terletak di <strong>~/.vimrc</strong>. Nah kalau di nvim ini berbeda, letak konfigurasi nya berada di <strong>~/.config/nvim/init.vim</strong>. Coba cek apakah sudah ada file tersebut di komputer kalian, jika belum ada silakan langsung buat file tersebut terlebih dahulu.</p>
<h2>Install Plugins</h2>
<p>List plugin yang saya pakai dan bagaimana setup vim saya bisa langsung mampir ke repo ini <a href="${"https://github.com/nusendra/vimrc"}" rel="${"nofollow"}">https://github.com/nusendra/vimrc</a>.</p>
<pre class="${"language-vim"}"><!-- HTML_TAG_START -->${`<code class="language-vim"><span class="token keyword">set</span> <span class="token builtin">nocompatible</span>
<span class="token keyword">set</span> <span class="token builtin">tabstop</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token keyword">set</span> <span class="token builtin">shiftwidth</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token keyword">set</span> <span class="token builtin">expandtab</span>
<span class="token keyword">set</span> <span class="token keyword">number</span>
<span class="token keyword">set</span> <span class="token builtin">autoindent</span>
<span class="token keyword">set</span> <span class="token builtin">hlsearch</span>
<span class="token keyword">set</span> <span class="token builtin">background</span><span class="token operator">=</span>dark

<span class="token builtin">syntax</span> enable
<span class="token keyword">filetype</span> plugin indent <span class="token keyword">on</span>

<span class="token comment">" color theme</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"termguicolors"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">set</span> termguicolors
<span class="token keyword">endif</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>oceanic_next_terminal_bold <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>oceanic_next_terminal_italic <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>airline_theme<span class="token operator">=</span><span class="token string">'oceanicnext'</span>
<span class="token keyword">colorscheme</span> OceanicNext

<span class="token comment">" feature</span>
<span class="token builtin">autocmd</span> FileType php <span class="token keyword">setlocal</span> <span class="token builtin">shiftwidth</span><span class="token operator">=</span><span class="token number">4</span> <span class="token builtin">tabstop</span><span class="token operator">=</span><span class="token number">4</span>
<span class="token comment">" autocmd vimenter * NERDTree</span>
<span class="token builtin">autocmd</span> FileType vue <span class="token builtin">syntax</span> sync fromstart
<span class="token builtin">autocmd</span> FileType html <span class="token keyword">setlocal</span> <span class="token builtin">sw</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">sts</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token builtin">autocmd</span> BufRead<span class="token punctuation">,</span>BufNewFile <span class="token operator">*</span><span class="token operator">.</span>svelte <span class="token keyword">setlocal</span> <span class="token builtin">ft</span><span class="token operator">=</span>html
<span class="token builtin">autocmd</span> BufNewFile<span class="token punctuation">,</span>BufRead <span class="token operator">*</span><span class="token operator">.</span>vue <span class="token keyword">set</span> <span class="token builtin">ft</span><span class="token operator">=</span>vue
<span class="token builtin">autocmd</span> BufNewFile<span class="token punctuation">,</span>BufRead <span class="token operator">*</span><span class="token operator">.</span><span class="token keyword">ts</span> <span class="token keyword">setlocal</span> <span class="token keyword">filetype</span><span class="token operator">=</span>typescript
<span class="token builtin">autocmd</span> QuickFixCmdPost <span class="token operator">*</span><span class="token keyword">grep</span><span class="token operator">*</span> <span class="token keyword">cwindow</span>
<span class="token keyword">set</span> <span class="token builtin">runtimepath</span>^<span class="token operator">=~</span><span class="token operator">/</span><span class="token operator">.</span><span class="token keyword">vim</span><span class="token operator">/</span>bundle<span class="token operator">/</span>ctrlp<span class="token operator">.</span><span class="token keyword">vim</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>prettier#autoformat <span class="token operator">=</span> <span class="token number">0</span>

<span class="token comment">"ale</span>
<span class="token keyword">let</span> <span class="token keyword">b</span><span class="token punctuation">:</span>ale_fixers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'prettier'</span><span class="token punctuation">,</span> <span class="token string">'eslint'</span><span class="token punctuation">]</span>

<span class="token comment">" custom</span>
<span class="token keyword">let</span> mapleader <span class="token operator">=</span> <span class="token string">","</span>
<span class="token comment">" let g:javascript_plugin_jsdoc = 1</span>

<span class="token comment">" indentLine</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>indentLine_color_term <span class="token operator">=</span> <span class="token number">239</span>

<span class="token comment">" Plugins</span>
<span class="token keyword">set</span> <span class="token builtin">rtp</span><span class="token operator">+=</span>~<span class="token operator">/</span><span class="token operator">.</span><span class="token keyword">vim</span><span class="token operator">/</span>bundle<span class="token operator">/</span>Vundle<span class="token operator">.</span><span class="token keyword">vim</span>
<span class="token keyword">set</span> <span class="token builtin">rtp</span><span class="token operator">+=</span>~<span class="token operator">/</span><span class="token operator">.</span>fzf

<span class="token keyword">call</span> vundle#<span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Plugin <span class="token string">'VundleVim/Vundle.vim'</span>
Plugin <span class="token string">'pangloss/vim-javascript'</span>
Plugin <span class="token string">'tpope/vim-fugitive'</span>
Plugin <span class="token string">'scrooloose/nerdtree'</span>
Plugin <span class="token string">'ajh17/spacegray.vim'</span>
Plugin <span class="token string">'posva/vim-vue'</span>
Plugin <span class="token string">'digitaltoad/vim-pug'</span>
Plugin <span class="token string">'vim-airline/vim-airline'</span>
Plugin <span class="token string">'vim-airline/vim-airline-themes'</span>
Plugin <span class="token string">'gorodinskiy/vim-coloresque'</span>
Plugin <span class="token string">'prettier/vim-prettier'</span>
Plugin <span class="token string">'tpope/vim-commentary'</span>
Plugin <span class="token string">'wakatime/vim-wakatime'</span>
Plugin <span class="token string">'w0rp/ale'</span>
Plugin <span class="token string">'junegunn/fzf.vim'</span>
Plugin <span class="token string">'Valloric/YouCompleteMe'</span>
Plugin <span class="token string">'Yggdroot/indentLine'</span>
Plugin <span class="token string">'leafgarland/typescript-vim'</span>
Plugin <span class="token string">'bronson/vim-trailing-whitespace'</span>
Plugin <span class="token string">'Raimondi/delimitMate'</span>
Plugin <span class="token string">'Xuyuanp/nerdtree-git-plugin'</span>
Plugin <span class="token string">'airblade/vim-gitgutter'</span>
Plugin <span class="token string">'tiagofumo/vim-nerdtree-syntax-highlight'</span>

<span class="token comment">" vim code formatter</span>
Plugin <span class="token string">'google/vim-maktaba'</span>
Plugin <span class="token string">'google/vim-codefmt'</span>
Plugin <span class="token string">'google/vim-glaive'</span>
<span class="token keyword">call</span> vundle#<span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">call</span> glaive#<span class="token function">Install</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">filetype</span> plugin indent <span class="token keyword">on</span>

<span class="token comment">" Map NerdTree</span>
map <span class="token operator">&lt;</span>C<span class="token operator">-</span><span class="token keyword">b</span><span class="token operator">></span> <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span>

<span class="token comment">" Map Toggle IndentLine</span>
map <span class="token operator">&lt;</span>C<span class="token operator">-</span>i<span class="token operator">></span> <span class="token punctuation">:</span>IndentLinesToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span>

<span class="token keyword">function</span><span class="token operator">!</span> <span class="token function">NERDTreeHighlightFile</span><span class="token punctuation">(</span>extension<span class="token punctuation">,</span> fg<span class="token punctuation">,</span> <span class="token builtin">bg</span><span class="token punctuation">,</span> guifg<span class="token punctuation">,</span> guibg<span class="token punctuation">)</span>
 exec <span class="token string">'autocmd filetype nerdtree highlight '</span> <span class="token operator">.</span> a<span class="token punctuation">:</span>extension <span class="token operator">.</span><span class="token string">' ctermbg='</span><span class="token operator">.</span> a<span class="token punctuation">:</span><span class="token builtin">bg</span> <span class="token operator">.</span><span class="token string">' ctermfg='</span><span class="token operator">.</span> a<span class="token punctuation">:</span>fg <span class="token operator">.</span><span class="token string">' guibg='</span><span class="token operator">.</span> a<span class="token punctuation">:</span>guibg <span class="token operator">.</span><span class="token string">' guifg='</span><span class="token operator">.</span> a<span class="token punctuation">:</span>guifg
 exec <span class="token string">'autocmd filetype nerdtree syn match '</span> <span class="token operator">.</span> a<span class="token punctuation">:</span>extension <span class="token operator">.</span><span class="token string">' #^s+.*'</span><span class="token operator">.</span> a<span class="token punctuation">:</span>extension <span class="token operator">.</span><span class="token string">'$#'</span>
<span class="token keyword">endfunction</span>

<span class="token comment">" NerdTree Highlight File Color</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeFileExtensionHighlightFullName <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeExactMatchHighlightFullName <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreePatternMatchHighlightFullName <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment">" keymap Split</span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>J<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token operator">&lt;</span>C<span class="token operator">-</span>J<span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>K<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token operator">&lt;</span>C<span class="token operator">-</span>K<span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>L<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token operator">&lt;</span>C<span class="token operator">-</span>L<span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>H<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token operator">&lt;</span>C<span class="token operator">-</span>H<span class="token operator">></span>

<span class="token comment">" FZF exclude files based on .gitignore</span>
nnoremap <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">p</span><span class="token operator">></span> <span class="token punctuation">:</span>GFiles<span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span>

<span class="token comment">" Window Tab</span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span><span class="token keyword">N</span><span class="token operator">></span> <span class="token punctuation">:</span><span class="token keyword">tabnew</span><span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>Up<span class="token operator">></span> <span class="token punctuation">:</span><span class="token keyword">tabprevious</span><span class="token operator">&lt;</span>CR<span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>C<span class="token operator">-</span>Down<span class="token operator">></span> <span class="token punctuation">:</span><span class="token keyword">tabnext</span><span class="token operator">&lt;</span>CR<span class="token operator">></span>

<span class="token comment">" syntastic</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_always_populate_loc_list<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_error_symbol<span class="token operator">=</span><span class="token string">'\u2717'</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_warning_symbol<span class="token operator">=</span><span class="token string">'\u26A0'</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_style_error_symbol <span class="token operator">=</span> <span class="token string">'\u2717'</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_style_warning_symbol <span class="token operator">=</span> <span class="token string">'\u26A0'</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_auto_loc_list<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_aggregate_errors <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment">" Autoformatting using codefmt</span>
augroup autoformat_settings
  <span class="token builtin">autocmd</span> FileType bzl AutoFormatBuffer buildifier
  <span class="token builtin">autocmd</span> FileType <span class="token keyword">c</span><span class="token punctuation">,</span>cpp<span class="token punctuation">,</span>proto<span class="token punctuation">,</span>javascript AutoFormatBuffer clang<span class="token operator">-</span>format
  <span class="token builtin">autocmd</span> FileType dart AutoFormatBuffer dartfmt
  <span class="token builtin">autocmd</span> FileType <span class="token keyword">go</span> AutoFormatBuffer gofmt
  <span class="token builtin">autocmd</span> FileType gn AutoFormatBuffer gn
  <span class="token builtin">autocmd</span> FileType html<span class="token punctuation">,</span>css<span class="token punctuation">,</span>sass<span class="token punctuation">,</span>scss<span class="token punctuation">,</span>less<span class="token punctuation">,</span>json AutoFormatBuffer <span class="token builtin">js</span><span class="token operator">-</span>beautify
  <span class="token builtin">autocmd</span> FileType java AutoFormatBuffer google<span class="token operator">-</span>java<span class="token operator">-</span>format
  <span class="token builtin">autocmd</span> FileType <span class="token keyword">python</span> AutoFormatBuffer yapf
  <span class="token comment">" Alternative: autocmd FileType python AutoFormatBuffer autopep8</span>
  <span class="token builtin">autocmd</span> FileType vue AutoFormatBuffer prettier
augroup END

<span class="token keyword">set</span> <span class="token builtin">splitbelow</span>
<span class="token keyword">set</span> <span class="token builtin">splitright</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Konfigurasi diatas bisa kalian langsung copy-paste ke dalam folder / file ini ya guys <strong>~/.config/nvim/init.vim</strong>.</p>
<p>Pertama kali yang harus dilakukan setelah instalasi nvim dan membuat file konfig nya adalah meng-install Plugin Manager, disini saya menggunakan Vundle <a href="${"https://github.com/VundleVim/Vundle.vim"}" rel="${"nofollow"}">https://github.com/VundleVim/Vundle.vim</a></p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau udah instalasi seperti diatas, silakan masuk ke vim lagi dengan mengetikkan <strong>vim</strong> kemudian ketikkan berikut ini <code>:PluginInstall</code>. Nah disini, si Vundle akan mengunduh semua plugin yang ada di list di file konfigurasi tersebut. Namun perlu dicatat, tidak semua nya bakal terinstall otomatis, ada beberapa plugin yang harus kita install manual di local machine kita.</p>
<p>Kalau kita lihat di list tersebut, yang perlu kita install manual adalah YouCompleteMe dan FZF. Mari kita hajar satu satu.</p>
<h3>Install YouCompleteMe</h3>
<p>Ketik berikut ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo apt install build-essential cmake python3-dev
$ sudo apt install cmake
$ cd ~/.vim/bundle/YouCompleteMe
$ python3 install.py</code>`}<!-- HTML_TAG_END --></pre>
<p>yeah, as simple as that.</p>
<h3>Install FZF</h3>
<p>Langsung hajar seperti dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
$ ~/.fzf/install</code>`}<!-- HTML_TAG_END --></pre>
<p>Beres. Coba masuk ke vim lagi, trus ketik CTRL+P, harusnya fitur file searching nya udah muncul. Kalau belum muncul bisa dicoba lagi untuk jalanin <code>:PluginInstall</code></p>
<h3>Setup Color Scheme</h3>
<p>Pastinya colorscheme / tema dari vim kita juga perlu di setting dong. Saya lebih suka style oceanic next, kalau temen temen ada preferensi lain silakan untuk di setup sendiri. Nah karena kali ini kita coba untuk pakai Oceanic Next, kuy langsung mulai setup nya.</p>
<p>Pertama bikin folder disini <code>~/.config/nvim/colors</code> trus bikin file dengan nama OceanicNext.vim, kemudian copy-paste <a href="${"https://raw.githubusercontent.com/mhartington/oceanic-next/master/colors/OceanicNext.vim"}" rel="${"nofollow"}">https://raw.githubusercontent.com/mhartington/oceanic-next/master/colors/OceanicNext.vim</a> ini kedalam file tersebut. Kalau udah silakan restart vim temen temen dan coba perhatikan perubahan dari style vim nya.</p>
<p><img src="${"https://ik.imagekit.io/nusendra/Screenshot_20190805_063407_PeO6dPKoF.png"}" alt="${"nusendra's vim"}"></p>
<p>Oh iya, settingan diatas jangan langsung di telen bulet bulet ya, plugin nya wajib dipelajari satu satu biar kita tau apa tuh fungsi nya. Contohnya wakatime, kalau temen temen pakai wakatime, ntar setelah jalanin <code>:PluginInstall</code> bakal di minta untuk masukin API Key nya wakatime. Kalau temen temen ga pakai wakatime, bisa di hapus saja dari daftar list.</p>
<hr>
<p>Yes, segitu dulu. Sebetulnya tulisan ini untuk konsumsi pribadi sih, biar ntar kalau pakai OS baru bisa langsung install vim nya dengan enak dan nyaman. Thanks udah mampir bre, moga bermanfaat :)</p>`
  })}`;
});
var howToSetupMyPersonalVim = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": How_to_setup_my_personal_vim,
  metadata: metadata$g
});
var metadata$f = {
  "title": "Konfigurasi Dasar Laravel 5",
  "date": "2017-11-28T02:31:58.000Z",
  "tags": ["laravel", "php"],
  "draft": false,
  "description": "Sebelum melangkah lebih jauh dalam mengarungi lautan Laravel, kita perlu melakukan konfigurasi dasar terlebih dahulu. Agar nanti kita ngoding nya lebih nyaman",
  "slug": "konfigurasi-dasar-laravel-5"
};
var Konfigurasi_dasar_laravel_5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$f), {}, {
    default: () => `<p>Sebelum melangkah lebih jauh dalam mengarungi samudra Laravel, temen temen harus melakukan konfigurasi dasar terlebih dahulu. Gak mau kan kalo pas nanti udah terlanjut ngoding sampe tengah jalan, eh ternyata konfigurasi nya gak sesuai dengan kebutuhan kita. Nah berikut ini akan saya sebutkan poin - poin nya.</p>
<p><em>Karena kita akan melakukan konfigurasi di Laravel, maka nanti kita akan sering bergulat di folder config</em></p>
<p>Yuk pertama kita masuk kedalam folder config dulu. Buka file app.php, gak banyak yang bisa kita modifikasi disini karena modifikasi yang sebenernya justru ketika melakukan pengembangan aplikasi (seiring berjalannya waktu). Tapi untuk memulai kita bisa modif seperlu nya saja.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">Ubah ini
&#39;timezone&#39; =&gt; &#39;UTC&#39;,
Menjadi ini
&#39;timezone&#39; =&gt; &#39;Asia/Jakarta&#39;,</code>`}<!-- HTML_TAG_END --></pre>
<p>Masih di file yang sama, dibagian bawah ada key array bernama \u201Cproviders\u201D dan \u201Caliases\u201D. Ini tidak perlu kita rubah, biarkan saja seperti itu. Nantinya providers dan aliases ini kita tambahin seiring berjalannya waktu (ketika kita memasang external packages di Laravel).</p>
<h2>Maintenance Mode</h2>
<p>Ketika kita lagi asik ngoding, eh tau tau ada user yang pengen nyobain app kita. Atau mungkin ketika app kita sedang mode production, eh tau tau ada bug parah yang mana user gak boleh akses aplikasi kita dulu. Nah dalam hal ini Laravel sudah punya cara untuk mensiasati nya. Yup, dibikin maintenance mode aja.</p>
<p>Ketik ini di terminal dan di direktori tempat project kalian berada.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php artisan down</code>`}<!-- HTML_TAG_END --></pre>
<p>Seketika ketika kita akses web, akan muncul tulisan \u201CBe right back\u201D. Kalau bug sudah kita bereskan, saat nya mode production lagi, ketik ini di terminal kalian</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php artisan up</code>`}<!-- HTML_TAG_END --></pre>
<h2>File .env</h2>
<p>Untuk mengatur koneksi ke database kita, kita bisa mengkonfigurasi nya di file .env ini</p>
<p>File .env ini terletak di root folder aplikasi kita. Jika file ini tidak ada, anda bisa coba untuk unhide folder (Kalau di Ubuntu bisa pakai CTRL + H untuk menampilkan file yang tersembunyi. Tapi kalau file .env masih gak ketemu juga, temen temen bisa ubah nama .env.example menjadi .env saja).</p>
<p>Silakan temen temen sesuaikan settingan pada file .env dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=nama_database
DB_USERNAME=nama_user
DB_PASSWORD=password_user</code>`}<!-- HTML_TAG_END --></pre>
<p>Selesai deh pengaturan dasar Laravel nya. Memang sangat simple, tapi nanti ketika ngoding udah berjalan, kemudian kita install banyak package ke project kita, maka nanti kita juga akan melakukan konfigurasi pelengkapnya saja. Sekian dari saya, semoga bermanfaat bagi temen temen sekalian :-).</p>`
  })}`;
});
var konfigurasiDasarLaravel5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Konfigurasi_dasar_laravel_5,
  metadata: metadata$f
});
var metadata$e = {
  "title": "Struktur Folder pada Laravel 5.5",
  "date": "2017-11-27T06:34:50.000Z",
  "description": "Setiap framework memiliki struktur direktori / folder yang berbeda, nah memahami struktur folder di Laravel pun sangat wajib diketahui bagi para pengguna Laravel",
  "tags": ["laravel", "php"],
  "draft": false,
  "slug": "struktur-folder-pada-laravel-55"
};
var Struktur_folder_laravel_55 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$e), {}, {
    default: () => `<p>Sebelum benar benar menggunakan Laravel (saat postingan ini dibuat, Laravel masih di versi 5.5 LTS), kita harus memahami betul apa aja sih kegunaan dan fungsi dari masing - masing foldernya. Dengan memahami kegunaan dan struktur folder yang ada di Laravel, kita nantinya akan sangat mudah dalam membangun sebuah aplikasi. mari kita mulai \u2026</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">app
|--Console
|--Exceptions
|--Http
|  |--Controllers
|  |  |--Auth
|  |--Middleware
|--Providers
bootstrap
|--cache
config
database
|--factories
|--migrations
|--seeds
public
|--css
|--js
resource
|--assets
|  |--js
|  |  |--components
|  |--sass
|--lang
|--views
routes
storage
|--app
|  |--public
|--framework
|  |--cache
|  |--sessions
|  |--testing
|  |--views
|--logs
tests
|--Feature
|--Unit
vendor</code>`}<!-- HTML_TAG_END --></pre>
<h2>app/Http/Controllers</h2>
<p>Seperti biasanya framework PHP yang berbasis MVC (Model, View, Controller), di folder inilah nantinya seluruh controller ditempatkan. Di dalam folder Controllers ini sendiri kita juga bisa bikin sub folder lagi untuk memilah milah controller sesuai dengan kebutuhan.</p>
<h2>app/Http/Controllers/Auth</h2>
<p>Folder Auth ini bawaan dari Laravel. Ketika kita membuat sistem authentifikasi milik laravel, nanti nya controller yang dipakai terletak di folder ini.</p>
<h2>app/Http/Middleware</h2>
<p>Middleware bisa dikatakan sebagai jembatan yang menghubungkan antara request yang masuk dengan controller. Jadi request tidak langsung menuju ke controller, akan tetapi akan di filter dulu di Middleware. Contoh singkat nya, Untuk mengakses Post Controller diharuskan user untuk login ke sistem terlebih dahulu, jika user belum terauthentifikasi, maka halaman akan di redirect ke halaman lain / home. Biasanya middleware ini dijadikan gerbang untuk mengakses controller utama, jadi user harus login terlebih dahulu untuk bisa menggunakan fitur khusus di web (backend).</p>
<h2>config</h2>
<p>Folder ini berisi konfigurasi dari sistem core Laravel maupun package tambahan. Misalnya file app.php yang akan sering di akses untuk mendaftarkan package tambahan di laravel.</p>
<h2>database/factories</h2>
<p>Namanya aja pabrik, jadi model factories ini berfungsi sebagai pembuatan data dummy (fake). Biasa nya digunakan ketika dalam masa pengembangan aplikasi yang membutuhkan data dummy.</p>
<h2>database/migrations</h2>
<p>Biasanya kita kalo bikin table kan langsung pake terminal / command, terkadang juga bikinnya via SQL Client. Nah kalo di Laravel sendiri ada fitur migrations yang berfungsi untuk bikin table table di database.</p>
<h2>database/seeds</h2>
<p>sub folder ini berisi file database seeder. Biasanya digunakan untuk mengisi data awal di dalam database. Misalnya mendaftarkan user admin didalam table, agar user bisa langsung memakai aplikasi (kalau sudah production).</p>
<h2>public/js dan public/css</h2>
<p>Setiap web aplikasi pasti membutuhkan javascript dan css. Nah di folder inilah nantinya berbagai file js dan css ditempatkan. Selain file js dan css, temen temen juga bisa nyimpen berbagai gambar di sub folder ini.</p>
<h2>resource/assets</h2>
<p>Jika kita menggunakan Laravel Mix, file - file yang perlu di compile harus di letakkan di folder ini. Jadi nanti semua file yang ada di sub folder ini akan di compile oleh Laravel Mix yang kemudian akan di letakkan di folder public ketika selesai di kompilasi. Bagi pengguna VueJS, folder ini akan sering diakses untuk menempatkan file component (.vue)</p>
<h2>resource/views</h2>
<p>Nah ini dia salah satu anggota MVC, yup dia adalah View. Semua file yang berhubungan dengan view (blade.php) akan di tempatkan di folder ini.</p>
<h2>routes</h2>
<p>Folder ini berisi file routing, yang mana route itu sendiri bisa diartikan sebagai sebuah jalur yang meneruskan request ke controller yang dituju. Selain itu, untuk membuat API routes juga diletakkan disini.</p>
<h2>storage</h2>
<p>File ini berfungsi sebagai tempat penyimpanan dari proses yang terjadi di Laravel. Contohnya untuk menempatkan file backup Laravel, bisa juga sebagai tempat backup database, sebagai tempat menyimpan file logs error di Laravel dan yang terakhir berfungsi sebagai tempat index yang berasal dari bentukan Laravel Scout.</p>
<h2>tests</h2>
<p>Di folder ini tersimpan data data yang diperlukan untuk unit testing. Laravel sudah mem-bundle package nya dengan PHPUnit yang memudahkan para developer untuk mengembangkan aplikasi berbasis automated testing maupun TDD (Test-Driven Development).</p>
<h2>vendor</h2>
<p>Folder ini berisi seluruh file file composer package untuk mendukung development web di Laravel.</p>
<p>Setelah baca baca beberapa point diatas, pasti temen temen pada bertanya tanya, mana nih folder Model nya? Jika kita membuat sebuah model melalui terminal.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ php artisan make:model Post</code>`}<!-- HTML_TAG_END --></pre>
<p>Maka nanti file model tersebut akan diletakkan di folder app. Dari sini bisa diketahui bahwa file model terletak di folder app. Misalnya kita tadi bikin model Post, maka lokasi nya seperti ini \u201Capp/User.php\u201D</p>
<p>Demikian yang bisa saya share untuk struktur folder di Laravel ini. Silakan bertanya tanya di kolom komentar ya temen temen :)</p>`
  })}`;
});
var strukturFolderLaravel55 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Struktur_folder_laravel_55,
  metadata: metadata$e
});
var metadata$d = {
  "title": "Goodbye MobX, Welcome RemX",
  "date": "2018-08-06T14:42:50.000Z",
  "tags": ["javascript", "reactnative"],
  "draft": false,
  "description": "Selamat tinggal MobX, selamat datang RemX. State management minimalis untuk React Native",
  "slug": "goodbye-mobx-welcome-remx"
};
var Goodbye_mobx_welcome_remx = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$d), {}, {
    default: () => `<p>Dalam framework Javascript, kita membutuhkan yang namanya state management sebagai pusat data yang nantinya bisa di konsumsi oleh banyak component, sehingga data yang dijadikan acuan bisa konsisten. Dalam dunia Vuejs, kita mengenal Vuex sebagai state management nya, sedangkan di dunia React mayoritas menggunakan Redux.</p>
<p>Saya sudah lama berkecimpung di dunia Vuex, jadi untuk urusan state management insyaallah ga akan ada hambatan dalam memahami nya. Namun ketika masuk ke dunia mobile dengan React Native, saya diperkenalkan dengan Redux. Oh iya sebelumnya mungkin perlu diketahui, saya ga suka pake ReactJS. Sebenernya pake React native pun juga terpaksa, karena memang di framework Vuejs sendiri masih belum ada mobile native (yang mumpuni), adanya cuma Weex, Nativescript-Vue, dan yang paling baru Vue-Native (nama doang ada native nya, padahal transpile dari React Native).</p>
<p>Nah karena umum banget pake Redux di React Native, ketika saya coba baca baca dan liat kode nya langsung, kok gak ada ketertarikan sama redux, haha. Akhirnya saya coba alternatif lain, pilihan jatuh kepada MobX. Pertama pake MobX keren sih, gampang setup nya dan sangat mudah dipahami. Namun kesenangan ini hanya sementara, yakni sampai React Native versi 0.55.4 saja, ketika ada update ke versi 0.56.0, entah mengapa MobX gak bisa jalan. Habis gugling juga dapet solusi nya sih, tapi kayak nya agak memaksakan. Akhir nya terpaksa beralih ke solusi lain, RemX. Yeaaaaa</p>
<p>Di halaman github nya <a href="${"https://github.com/wix/remx"}" rel="${"nofollow"}">remx</a>, sedkit banget docs nya. Bahkan cara instalasi lewat npm pun gak ada haha. Tapi tenang aja, disana udah ada example nya kok, tinggal liat package.json nya trus install deh. Cara install nya gampang, tinggal ketik <code>npm install remx</code> kemudian bikin store sesuai dengan yang ada di example nya.</p>
<p>Oke daripada ngalor ngidul langsung aja kita praktek. Pertama buka terminal kamu, masuk ke directory project dan ketik berikut ini untuk instalasi remx.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm install remx</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian bikin folder di root project nya, susunan nya seperti ini</p>
<p><code>projectKamu/src/store/user/index.js</code></p>
<p>Setelah itu pada file store index.js nya isikan sebagai berikut</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> remx <span class="token keyword">from</span> <span class="token string">'remx'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  nama<span class="token operator">:</span> <span class="token string">'nusendra'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> state <span class="token operator">=</span> remx<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> getters <span class="token operator">=</span> remx<span class="token punctuation">.</span><span class="token function">getters</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token function">getNama</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> state<span class="token punctuation">.</span>nama
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token operator">...</span>getters
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian pada file App.js isi seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> connect <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'remx'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> store <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./src/store/user/index'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>View<span class="token operator">></span>
        <span class="token operator">&lt;</span>Text<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>selectedNama<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">mapStateToProps</span><span class="token punctuation">(</span><span class="token parameter">ownProps</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    selectedNama<span class="token operator">:</span> store<span class="token punctuation">.</span><span class="token function">getNama</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Setelah itu, di hasil akhirnya silakan jalankan project anda, misalnya kita pake android maka ketik</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ react-native run-android</code>`}<!-- HTML_TAG_END --></pre>
<p>Tadaaa, kalian akan mendapati nama nusendra di aplikasi mobile kalian. Artikel ini hanya tutorial bagaimana cara memulai menggunakan remx, dan disini hanya memakai method getters aja. Kalau pengen lebih advance, silakan main main ke halaman github nya. Insya allah kalau ada waktu, saya akan lanjutkan bahas remx di artikel selanjutnya. Aamiiinnn</p>
<hr>
<p>Terima kasih temen - temen yang udah mau mampir dan baca baca.</p>`
  })}`;
});
var goodbyeMobxWelcomeRemx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Goodbye_mobx_welcome_remx,
  metadata: metadata$d
});
var metadata$c = {
  "title": "SurabayaJS Meetup Perdana #1",
  "date": "2019-07-30T07:00:00.000Z",
  "description": "Cerita singkat mengenai meetup perdana komunitas SurabayaJS",
  "tags": ["opini"],
  "draft": false,
  "slug": "surabayajs-meetup-perdana-1"
};
var Surabayajs_meetup_perdana = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$c), {}, {
    default: () => `<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9573_JXOGuftT3.jpg"}" alt="${"surabayadev meetup #1"}"></p>
<br>
<p>Sebenernya udah telat banget sih mau publish postingan ini, masih di draft aja dan lupa keurus hehe. Yep, ceritanya saya inisiasi komunitas SurabayaJS yang berfokus pada pembahasan / materi seputar programming menggunakan JavaScript. Alasan kenapa JavaScript, silakan mampir ke post saya yang pertama kesini <a href="${"https://nusendra.com/post/membangun-komunitas-surabayajs"}" rel="${"nofollow"}">https://nusendra.com/post/membangun-komunitas-surabayajs</a>. Sedikit informasi, meetup perdana ini dilaksanakan di DiLo Surabaya yang bertempat di AJBS Surabaya pada hari Jum\u2019at jam 18:00 WIB.</p>
<h2>Materi</h2>
<p>Pada meetup pertama ini saya akan memanggil 2 pemateri yang masing - masing punya waktu sekitar 1jam untuk menyampaikan ilmu nya.</p>
<h3>Royyan Bachtiar</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9501_nD_CA18y9.jpg"}" alt="${"royyan bachtiar at surabayajs"}"></p>
<p>Pemateri pertama adalah mas Royyan Bachtiar, beliau ini adalah seorang frontend developer yang bekerja di Bukalapak. Materi yang disampaikan kali ini berjudul JavaScript at Scale: Things to do and things to avoid. Membahas tentang apa saja yang wajib dilakukan oleh developer ketika ngoding pake JS, bagaimana agar kode kita rapih, <em>readable</em> dan <em>maintenable</em>, ya pokoknya clean code lah.</p>
<h3>Mochammad Lucky \u201CAmpersanda\u201D Pradana</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9540_Qv9BYO99Q.jpg"}" alt="${"mochamad Lucky Pradana at surabayajs"}"></p>
<p>Pemateri kedua adalah mas Ampersanda (begitu saya memanggilnya, sesuai dengan nickname nya haha). Teman baru saya, yang menurut saya rare banget. Ilmu yang dikuasai nya juga aneh aneh dan anti mainstream, seperti ClojureScript, p5js, dll. Materi yang dibawakan adalah Doing Art with Code: Introduction to Processing using p5js. Disini doi ngebahas gimana sih cara bikin suatu gambar atau animasi bergerak dengan hanya menggunakan javascript. Pada meetup ini doi men-demo-kan cara membuat animasi jam dinding menggunakan p5js.</p>
<h3>Audience</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9551_0wOoJ__Dc.jpg"}"></p>
<p>Peserta yang datang pun lumayan banyak, dari tiket eventbrite yang kita buka (65 tiket) terkumpul audience sekitar 40 orang lebih. Permasalahannya, entah letaknya ada dimana, entah di materi yang ketinggian kah? Atau karena peserta nya pada malu malu, ketika ditanya sangat minim sekali response yang terjadi pada mereka. Ini bisa bikin suasana jadi tegang dan sedikit krik krik hehe. Tapi ya ga parah parah amat sih, ada beberapa yang tanya tanya juga.</p>
<hr>
<p>Overall, acara berjalan lancar dan diakhiri dengan foto foto bersama :).</p>
<p>Bagi yang pengen liat foto foto nya, bisa mampir kemari <a href="${"https://www.icloud.com/sharedalbum/#B0f5VaUrztHqbNx"}" rel="${"nofollow"}">https://www.icloud.com/sharedalbum/#B0f5VaUrztHqbNx</a>.</p>`
  })}`;
});
var surabayajsMeetupPerdana = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Surabayajs_meetup_perdana,
  metadata: metadata$c
});
var metadata$b = {
  "title": "SurabayaJS Meetup Ketiga #3",
  "date": "2019-08-16T20:00:00.000Z",
  "description": "Cerita singkat mengenai meetup ketiga komunitas SurabayaJS",
  "tags": ["opini"],
  "draft": false,
  "slug": "surabayajs-meetup-ketiga"
};
var Surabayajs_meetup_ketiga = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$b), {}, {
    default: () => `<p><img src="${"https://ik.imagekit.io/nusendra/IMG_9844_2iisN9goH.jpg"}" alt="${"surabayajs meetup #3"}"></p>
<br>
<p>Yaiy, meetup ketiga yang berlangsung di bulan Juli. Menghadirkan dua pembicara senior yakni mas Artha Nugraha Jonar dan Royyan Bachtiar. Meetup kali ini berjudul Data Synchronization on offline-first app dan Going sane with Javascript: Browser API Edition.</p>
<h2>Materi</h2>
<p>Pada meetup ini saya akan memanggil 2 pemateri yang masing - masing punya waktu sekitar 1jam untuk menyampaikan ilmu nya.</p>
<h3>Royyan Bachtiar</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9801_ErbqzXGlM.jpg"}" alt="${"royyan bachtiar at surabayajs"}"></p>
<p>Berhasil ngerampok mas Royyan untuk kembali hadir berbagi ilmu di event meetup kali ini, mumpung doi nya lagi pulang ke Surabaya haha. Mas Royyan ngebahas hal - hal waras yang seharusnya bisa dilakukan dengan javascript, seperti yang seharusnya tuh kayak gini, engga kayak gitu, harusnya tuh begini dan ga begitu, dan seterusnya, lanjutin sendiri haha. Dan juga doi ngejelasin beberapa hal tentang API yang bisa kita pakai di Browser. Memang ya, pekerja Bukalapak satu ini pantas untuk berbagi pengalaman, ilmu nya banyak breee :D.</p>
<h3>Artha Nugraha Jonar</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9821_dIV2ruE3p.jpg"}" alt="${"artha nugraha at surabayajs"}"></p>
<p>Mas Artha, seorang business Developer seorang Logistician, tanya apapun tentang logistik, doi ahlinya. Materi yang disampaikan adalah bagaimana data kita bisa tetap sinkron dengan server dimana pun dan kapanpun kita berada. Contohnya saja, seorang kurir sudah pasti tugas nya mengirim barang sampai ke pelosok - pelosok, dan disitu ga ada jaminan terdapat internet yang mumpuni untuk <em>push update</em> data ke server mengenai pengiriman barang. Nah disinilah ilmu Offline-first app dipakai. Ketika pada kondisi tidak ada internet, atau tidak mumpuni untuk push data ke server, maka data akan disimpan di device local terlebih dahulu, ketika terdeteksi adanya internet yang mumpuni, maka data tersebut langsung di push ke server secara realtime.</p>
<hr>
<p>Overall, acara berjalan lancar dan diakhiri dengan foto foto bersama :).</p>
<p>Bagi yang pengen liat foto foto nya, bisa mampir kemari <a href="${"https://www.icloud.com/sharedalbum/#B0f55Z2WMsx9Hp7"}" rel="${"nofollow"}">https://www.icloud.com/sharedalbum/#B0f55Z2WMsx9Hp7</a>.</p>`
  })}`;
});
var surabayajsMeetupKetiga = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Surabayajs_meetup_ketiga,
  metadata: metadata$b
});
var metadata$a = {
  "title": "Berkenalan dengan PugJS",
  "date": "2018-08-23T14:20:46.000Z",
  "tags": ["javascript"],
  "draft": false,
  "description": "Pug hadir untuk menyederhanakan format html kalian sehingga kode html kalian bisa lebih mudah dan enak dibaca",
  "slug": "berkenalan-dengan-pugjs"
};
var Berkenalan_dengan_pugjs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$a), {}, {
    default: () => `<p>Pernahkah kalian pusing melihat baris kode html yang berjejer tak beraturan? Saya sering haha. Ribet nya koding html kini bisa di sederhanakan berkat kehadiran <strong>Pugjs</strong>. Pugjs merupakan template engine yang akan membaca template yang berformat <em>lang=\u201Cpug\u201D</em> dan mengkonversikan nya kedalam format html. Lebih jelas nya silakan mampir e <a href="${"https://pugjs.org/api/getting-started.html"}" rel="${"nofollow"}">official site</a> nya.</p>
<p>Saya secara pribadi sangat membenci menulis kode dummy html, karena memang kode html itu banyak, bejibun, kadang ga beraturan. Beruntung ketika saya kenal Javascript framework (Vuejs), hal tersebut sudah bisa diminimalisir dengan memanfaatkan directive dan component nya. Namun saya rasa hal itu masih kurang efektif, saya butuh sesuatu yang bisa menyederhanakan format html saya. Nah ternyata ketemu juga yang namanya <strong>pugjs</strong>. Langsung deh tanpa ba bi bu, saya install tuh si anjing, eh pug (nama ras anjing) maksudnya hehehe.</p>
<p>Untuk nyobain si pug ini, kita coba implementasi di Vuejs dan Nuxtjs. Pertama, ketik ini di terminal root folder project kalian.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm install pug pug-loader --save-dev</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian pada component kalian</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>ubah menjadi</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">"pug"</span><span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sebelum kita lanjut ke contoh kasus, kita pelajari dulu bagaimana cara menggunakan pug dan apa saja kelebihannya.</p>
<h2>TANPA CLOSING TAG</h2>
<p>Biasanya di html kita akan menuliskan seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>Isi dibawah ini<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Maka di pug, kita hanya menuliskan seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">"pug"</span><span class="token operator">></span>
  <span class="token punctuation">.</span>row
    p Isi dibawah ini
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sangat simple bukan ?</p>
<h2>ELEMEN DENGAN ATTRIBUTE</h2>
<p>Untuk attribut biasa kita ketik seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"buttonClicked"</span><span class="token operator">></span>
      Simpan
    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Maka di pug jadi seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">"pug"</span><span class="token operator">></span>
  <span class="token punctuation">.</span>row
    <span class="token function">button</span><span class="token punctuation">(</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"buttonClicked"</span><span class="token punctuation">)</span> Simpan
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Mantep kan?</p>
<p>Untuk penggunaan lebih lanjut, silakan kunjungi official web nya saja. Tetapi pada umumnya, pug akan menggunakan format seperti diatas. Oh iya, pasti temen temen ada yang bertanya, bagaimana cara membedakan bahwa button adalah anak dari elemen div (lihat contoh diatas)? Gampang, pug menggunakan indent spacing yang mana akan mengkonversi anak dari elemen berdasarkan indentasi spasi nya.</p>
<p>Coba lihat template berikut</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-lg-8"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"panel panel-default"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"panel-heading"</span><span class="token operator">></span>
          Kategori Baru
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"panel-body"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>rules<span class="token operator">=</span><span class="token string">"rules"</span> status<span class="token operator">-</span>icon label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"150px"</span><span class="token operator">></span>
            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"Nama Kategori"</span> prop<span class="token operator">=</span><span class="token string">"nama"</span><span class="token operator">></span>
              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.nama"</span><span class="token operator">/</span><span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>
            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"Tipe Barang"</span><span class="token operator">></span>
              <span class="token operator">&lt;</span>el<span class="token operator">-</span>radio<span class="token operator">-</span>group v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.tipe_barang"</span><span class="token operator">></span>
                <span class="token operator">&lt;</span>el<span class="token operator">-</span>radio <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>Raw Material<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>radio<span class="token operator">></span>
                <span class="token operator">&lt;</span>el<span class="token operator">-</span>radio <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span>Bahan Baku<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>radio<span class="token operator">></span>
                <span class="token operator">&lt;</span>el<span class="token operator">-</span>radio <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>Barang Jadi <span class="token operator">/</span> Produk<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>radio<span class="token operator">></span>
                <span class="token operator">&lt;</span>el<span class="token operator">-</span>radio <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"4"</span><span class="token operator">></span>Aset<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>radio<span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>radio<span class="token operator">-</span>group<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>
            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"Keterangan"</span> prop<span class="token operator">=</span><span class="token string">"keterangan"</span><span class="token operator">></span>
              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.keterangan"</span> placeholder<span class="token operator">=</span><span class="token string">"..."</span><span class="token operator">/</span><span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"panel-footer"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"save('close')"</span><span class="token operator">></span>Save <span class="token operator">&amp;</span> Close<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>
          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"save('noClose')"</span><span class="token operator">></span>Save<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>
          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"reset"</span><span class="token operator">></span>Reset<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>
          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"cancel"</span><span class="token operator">></span>Cancel<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>
          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"clearfix"</span><span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kalau pakai pug, bisa jadi seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template lang<span class="token operator">=</span><span class="token string">"pug"</span><span class="token operator">></span>
  <span class="token punctuation">.</span>row
    <span class="token punctuation">.</span>col<span class="token operator">-</span>lg<span class="token operator">-</span><span class="token number">8</span>
      <span class="token punctuation">.</span>panel<span class="token punctuation">.</span>panel<span class="token operator">-</span><span class="token keyword">default</span>
        <span class="token punctuation">.</span>panel<span class="token operator">-</span>heading Kategori Baru
        <span class="token punctuation">.</span>panel<span class="token operator">-</span>body
          el<span class="token operator">-</span><span class="token function">form</span><span class="token punctuation">(</span>ref<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>rules<span class="token operator">=</span><span class="token string">"rules"</span> status<span class="token operator">-</span>icon label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"150px"</span><span class="token punctuation">)</span>
            el<span class="token operator">-</span>form<span class="token operator">-</span><span class="token function">item</span><span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">"Nama Kategori"</span> prop<span class="token operator">=</span><span class="token string">"nama"</span><span class="token punctuation">)</span>
              el<span class="token operator">-</span><span class="token function">input</span><span class="token punctuation">(</span>v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.nama"</span><span class="token punctuation">)</span>
            el<span class="token operator">-</span>form<span class="token operator">-</span><span class="token function">item</span><span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">"Tipe Barang"</span><span class="token punctuation">)</span>
              el<span class="token operator">-</span>radio<span class="token operator">-</span><span class="token function">group</span><span class="token punctuation">(</span>v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.tipe_barang"</span><span class="token punctuation">)</span>
                el<span class="token operator">-</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">)</span> Raw Material
                el<span class="token operator">-</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"2"</span><span class="token punctuation">)</span> Bahan Baku
                el<span class="token operator">-</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"3"</span><span class="token punctuation">)</span> Barang Jadi <span class="token operator">/</span> Produk
                el<span class="token operator">-</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">)</span> Aset
            el<span class="token operator">-</span>form<span class="token operator">-</span><span class="token function">item</span><span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">"Keterangan"</span> prop<span class="token operator">=</span><span class="token string">"keterangan"</span><span class="token punctuation">)</span>
              el<span class="token operator">-</span><span class="token function">input</span><span class="token punctuation">(</span>v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.keterangan"</span> placeholder<span class="token operator">=</span><span class="token string">"..."</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>panel<span class="token operator">-</span>footer
          el<span class="token operator">-</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"save('close')"</span><span class="token punctuation">)</span> Save <span class="token operator">&amp;</span> Close
          el<span class="token operator">-</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"save('noClose')"</span><span class="token punctuation">)</span> Save
          el<span class="token operator">-</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"reset"</span><span class="token punctuation">)</span> Reset
          el<span class="token operator">-</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pull-right"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> plain @click<span class="token operator">=</span><span class="token string">"cancel"</span><span class="token punctuation">)</span> Cancel
          <span class="token punctuation">.</span>clearfix
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Nah bagi temen - temen yang masih belum pake pug, yuk kita pake biar kodingan kita jadi lebih rapi dan enak dibaca. Terima kasih udah mampir dan baca, semoga bermanfaat buat temen - temen.</p>`
  })}`;
});
var berkenalanDenganPugjs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Berkenalan_dengan_pugjs,
  metadata: metadata$a
});
var metadata$9 = {
  "title": "Berkenalan dengan VueJS",
  "date": "2018-01-15T07:29:36.000Z",
  "tags": ["javascript", "vuejs"],
  "draft": false,
  "description": "Berkenalan dengan VueJS merupakan sebuah awal untuk menjalin cinta dengan si dia. Untuk mempelajari dan mendalami si dia (VueJS), maka kita perlu kenalan dulu sama si dia. Yuk belajar bareng..",
  "slug": "berkenalan-dengan-vuejs"
};
var Berkenalan_dengan_vuejs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$9), {}, { default: () => `<p>asdffdsaasdf</p>` })}`;
});
var berkenalanDenganVuejs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Berkenalan_dengan_vuejs,
  metadata: metadata$9
});
var metadata$8 = {
  "title": "Manfaat Menggunakan PWA",
  "date": "2019-05-10T06:18:00.000Z",
  "description": "Ada banyak sekali manfaat yang kita dapat dari menerapkan PWA di web kita",
  "tags": ["opini", "pwa"],
  "draft": false,
  "slug": "manfaat-menggunakan-pwa"
};
var Manfaat_menggunakan_pwa = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$8), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://cdn.staticaly.com/img/46c4ts1tskv22sdav81j9c69-wpengine.netdna-ssl.com/wp-content/uploads/sites/33/2018/02/cbb9dba164838b28c748310da3d4c188.png"}" style="${"width:100%;height:auto;"}">
<br>
<p>Episode kedua dari seri PWA kali ini adalah membahas tentang apa saja sih manfaat dari menggunakan PWA? Pasti banyak orang yang berfikir, emang apa sih kelebihan dari PWA ini dibanding native app / hybrid? Berikut ini penjelasan, semoga mudah dipahami :)</p>
<h2>The Characteristic of PWA</h2>
<p>Sebuah web bisa dikatakan sebagai PWA jika telah mengusung karakteristik - karakteristik dibawah ini:</p>
<ol><li><strong>Progressive</strong>: Bekerja dengan baik di semua pengguna karena peningkatan progresif pada web / aplikasi.</li>
<li><strong>Responsive</strong>: Bisa dijalankan di berbagai device (Desktop, mobile, dan tablet).</li>
<li><strong>App-like</strong>: Menggunakan PWA terasa seperti menggunakan app native, contohnya pada twitter.</li>
<li><strong>Connectivity Independent</strong>: Mampu berjalan di kondisi offline atau internet lambat.</li>
<li><strong>Up-to-date</strong>: Dengan bantuan dari service worker, app PWA akan selalu terudpate. Jika pada native app, anda harus download dulu melalui app store.</li>
<li><strong>Aman</strong>: Karena PWA hanya bisa berjalan sempurna di HTTPS, maka sekuritas akan selalu terjaga.</li>
<li><strong>Discoverable</strong>: PWA bisa diidentifikasi sebagai Application karena adanya web manifest dan service worker, sehingga memungkinkan google untuk mengenalinya.</li>
<li><strong>Installable</strong>: Dapat diinstall seperti native app, tetapi tanpa memakan ruang / space memory yang besar</li>
<li><strong>Easy to share</strong>: Pengen share aplikasi? Ga perlu repot repot upload ke app store (seperti native app), tinggal copas urlnya saja :D</li></ol>
<h2>Fitur PWA</h2>
<h3>Fast</h3>
<p>Respon yang didapat oleh pengguna sangat cepat, dengan adanya animasi yang halus dan pemuatan halaman yang cepat mampu memberikan pengalaman yang lebih baik di sisi user.</p>
<h3>Integrated</h3>
<p>Pengguna tidak perlu repot repot membuka browser untuk mulai menggunakan aplikasi, tinggal buka icon yang tersedia di Homescreen (fitur Add to Homescreen) maka aplikasi akan langsung terbuka. Sama seperti native bukan? Bedanya ini web app. Selain itu PWA memanfaatkan kemampuan dari perangkat untuk menciptakan pengalaman yang nyata.</p>
<h3>Reliable</h3>
<p>Memuat halaman dengan instan, kalian ga bakal nemuin lagi tuh halaman Downsaur ketika berada dalam keadaan offline / jaringan yang lagi ga stabil.</p>
<h3>Engaging</h3>
<p>Nah karena aplikasi / web yang mengusung konsep PWA ini membuat para pengguna merasa nyaman dengan pengalaman - pengalaman yang keren, maka secara ga langsung akan membuat mereka kembali lagi menggunakan / mengunjungi halaman Anda.</p>
<hr>
<p>Rasanya segini dulu, dari artikel ini dengan artikel sebelumnya kita sudah bisa kenal dan paham apa itu PWA. Next time insyaallah langsung kita coba implementasi. Tengs udah mampir\u2026</p>`
  })}`;
});
var manfaatMenggunakanPwa = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Manfaat_menggunakan_pwa,
  metadata: metadata$8
});
var metadata$7 = {
  "title": "SurabayaJS Meetup Kedua #2",
  "date": "2019-08-16T19:00:00.000Z",
  "description": "Cerita singkat mengenai meetup kedua komunitas SurabayaJS",
  "tags": ["opini"],
  "draft": false,
  "slug": "surabayajs-meetup-kedua"
};
var Surabayajs_meetup_kedua = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$7), {}, {
    default: () => `<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9775_UiQRO-xjr.jpg"}" alt="${"surabayajs meetup #2"}"></p>
<br>
<p>Meetup kedua komunitas SurabayaJS kali ini membahas TypeScript tingkat pemula dan GatsbyJS untuk membangun static web. Ceritanya saya punya temen, orang Sidoarjo yang kerja sebagai CEO dan CTO di perusahaannya sendiri bernama Lumpang, sebuah software house yang terletak di Sidoarjo. Doi bernama mas Awan Kurniawan, seorang developer pro yang sehari hari nya main - main dengan javascript, <em>especially</em> TypeScript. Ya sudah, ga banyak omong langsung aja nih aku tawarin untuk nyepik buat ngisi acara meetup kedua ini.</p>
<p>Trus yang kedua datang dari mas Griko Nibras, salah satu admin SurabayJS. Kita punya tujuan agar para developer (khusus nya yang ada di Surabaya) punya landing page sendiri - sendiri. Masa iya seorang programmer ga punya landing page buat naruh hasil karya mereka? Ibarat kata seorang artist yang cuma sembunyi dibalik pintu (apaan si anjir).</p>
<h2>Materi</h2>
<p>Pada meetup ini saya akan memanggil 2 pemateri yang masing - masing punya waktu sekitar 1jam untuk menyampaikan ilmu nya.</p>
<h3>Awan Kurniawan (Awank)</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9746_PK5YXJPFw.jpg"}" alt="${"awank at surabayajs"}"></p>
<p>Pemateri pertama adalah mas Awan Kurniawan (saya manggilnya Awank). Materi yang disampaikan sangat - sangat mudah dicerna, karena materi yang doi bawakan memanglah hal yang sangat sangat dasar sekali. Menariknya, hampir waktu nya habis dipakai mas awank, karena audience juga sangat aktif sehingga batas waktu untuk bagian pertama ini hampir jebol haha. Tapi saya biarkan saja, karena memang audience sedang asyik tanya jawab.</p>
<h3>Griko Nibras</h3>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9766_LBamPLEbd.jpg"}" alt="${"griko nibras at surabayajs"}"></p>
<p>Yang kedua, mas Griko Nibras ngebahas gimana sih cara mudah (bahkan hanya kisaran 5 menit) untuk deploy ke production dari environment local kita dengan menggunakan layanan dari Zeit Now. Jadi disini mas Griko ngebahas tentang landing page menggunakan GatsbyJS yang kemudian dengan mudah di deploy ke layanan Zeit Now sampai web kita bisa diakses secara online. Nah materi awal ini insya allah jadi cikal bakal untuk workshop GatsbyJS kedepannya.</p>
<h3>Muhammad Amirul Ihsan</h3>
<p>Nah mas Amirul dari Kawan Koding juga bagi bagi kaos gratis kepada para audience yang aktif disini. Sungguh baik dan mulia sekali ya junjungan kita yang satu ini. Semoga lancar rejeki dan jodohnya hehehe :P</p>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9773_urphGAV4Y.jpg"}" alt="${"amirul at surabayajs"}"></p>
<p><img src="${"https://ik.imagekit.io/nusendra/_MG_9772_vReCgQDlX.jpg"}" alt="${"amirul at surabayajs"}"></p>
<hr>
<p>Overall, acara berjalan lancar dan diakhiri dengan foto foto bersama :).</p>
<p>Bagi yang pengen liat foto foto nya, bisa mampir kemari <a href="${"https://www.icloud.com/sharedalbum/#B0fGf693Zsgwax6"}" rel="${"nofollow"}">https://www.icloud.com/sharedalbum/#B0f5VaUrztHqbNx</a>.</p>`
  })}`;
});
var surabayajsMeetupKedua = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Surabayajs_meetup_kedua,
  metadata: metadata$7
});
var metadata$6 = {
  "title": "VIM Keyboard Cheatsheet",
  "date": "2020-10-14T06:00:00.000Z",
  "description": "Bagi yang sering lupa shortcut yang ada di VIM",
  "tags": ["Code Editor"],
  "draft": false,
  "slug": "vim-keyboard-cheatsheet"
};
var Vim_keyboard_cheatsheet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$6), {}, {
    default: () => `<p>VIM adalah editor yang paling bikin kita pusing, apalagi dengan shortcut keyboard dari VIM yang aneh aneh kadang juga bikin kita pusing, ga jarang juga banyak yang lupa.</p>
<p>Nah kali ini saya mau share cheatsheet VIM. Silakan menikmati</p>
<table><thead><tr><th>Shortcut</th>
      <th>Deskripsi</th></tr></thead>
  <tbody><tr><td>Esc</td>
      <td>Command Mode</td></tr>
    <tr><td>i</td>
      <td>Insert Mode</td></tr>
    <tr><td>:ter</td>
      <td>Membuka terminal window didalam VIM</td></tr>
    <tr><td>h</td>
      <td>Berpindah kursor kekiri sebanyak 1 karakter</td></tr>
    <tr><td>j</td>
      <td>Berpindah kursor ke bawah sebanyak 1 line</td></tr>
    <tr><td>k</td>
      <td>Berpindah kursor ke atas sebanyak 1 line</td></tr>
    <tr><td>l</td>
      <td>Berpindah kursor kekanan sebanyak 1 karakter</td></tr>
    <tr><td>0</td>
      <td>Memindahkan kursor ke paling kiri / awal dari line saat ini</td></tr>
    <tr><td>$</td>
      <td>Memindahkan kursor ke paling kanan / akahir dari line saat ini</td></tr>
    <tr><td>^</td>
      <td>Memindahkan kursor ke awal line, tepat diawal karakter / teks</td></tr>
    <tr><td>w</td>
      <td>Memindahkan kursor ke kata berikutnya</td></tr>
    <tr><td>W</td>
      <td>Memindahkan kursor ke kata berikutnya (tanpa spasi)</td></tr>
    <tr><td>3w</td>
      <td>Memindahkan kursor ke 3 kata berikutnya</td></tr>
    <tr><td>b</td>
      <td>Memindahkan kursor ke kata sebelumnya</td></tr>
    <tr><td>B</td>
      <td>Memindahkan kursor ke kata sebelumnya (tanpa spasi)</td></tr>
    <tr><td>3b</td>
      <td>Memindahkan kursor ke 3 kata sebelumnya </td></tr>
    <tr><td>gg</td>
      <td>Memindahkan kursor ke awal file</td></tr>
    <tr><td>G</td>
      <td>Memindahkan kursor ke akhir file</td></tr>
    <tr><td>(</td>
      <td>Memindahkan kursor ke kalimat sebelumnya</td></tr>
    <tr><td>)</td>
      <td>Memindahkan kursor ke kalimat berikutnya</td></tr>
    <tr><td>a</td>
      <td>Masuk ke mode insert setelah kursor</td></tr>
    <tr><td>A</td>
      <td>Masuk ke mode insert ke akhir line</td></tr>
    <tr><td>i</td>
      <td>Masuk ke mode insert sebelum kursor</td></tr>
    <tr><td>o</td>
      <td>Masuk ke mode insert ke line berikutnya</td></tr>
    <tr><td>O</td>
      <td>Masuk ke mode insert ke line sebelumnya (keatas)</td></tr>
    <tr><td>x</td>
      <td>Menghapus karakter di kursor saat ini</td></tr>
    <tr><td>dw</td>
      <td>Menghapus kata kekanan</td></tr>
    <tr><td>d0</td>
      <td>Menghapus text sampai ke paling awal line</td></tr>
    <tr><td>d$</td>
      <td>Menghapus text sampai ke paling akhir line</td></tr>
    <tr><td>d)</td>
      <td>Menghapus text ke paragraf sebelumnya</td></tr>
    <tr><td>dgg</td>
      <td>Menghapus text sampai ke awal file</td></tr>
    <tr><td>dG</td>
      <td>Menghapus text sampai ke akhir file</td></tr>
    <tr><td>dd</td>
      <td>Menghapus line saat ini</td></tr>
    <tr><td>3dd</td>
      <td>Menghapus 3 line kebawah</td></tr>
    <tr><td>r<text></text></td>
      <td>Menimpa 1 karakter, kemudian insert pada kursor dengan text</td></tr>
    <tr><td>R</td>
      <td>Menimpa karakter dengan text</td></tr>
    <tr><td>yy</td>
      <td>Copy line saat ini (disimpan ke buffer)</td></tr>
    <tr><td>p</td>
      <td>Paste text yang ada di buffer ke karakter / line berikutnya</td></tr>
    <tr><td>P</td>
      <td>Paste text yang ada di buffer ke karakter / line sebelumnya</td></tr>
    <tr><td>u</td>
      <td>Undo</td></tr>
    <tr><td>CTRL + r</td>
      <td>Redo</td></tr>
    <tr><td>/<text></text></td>
      <td>Mencari text di file saat ini (maju)</td></tr>
    <tr><td>?<text></text></td>
      <td>Mencari text di file saat ini (mundur)</td></tr>
    <tr><td>n</td>
      <td>Berpindah ke text pencarian berikutnya (maju)</td></tr>
    <tr><td>N</td>
      <td>Berpindah ke text pencarian sebelumnya (mundur)</td></tr>
    <tr><td>:%s/[original]/[replacement]</td>
      <td>Cari text original pertama dan me-replace nya dengan text replacement</td></tr>
    <tr><td>:%s/[original]/[replacement]/g</td>
      <td>Cari semua text original dan me-replace nya dengan text replacement</td></tr>
    <tr><td>:%s/[original]/[replacement]/gc</td>
      <td>Cari semua text original dan me-replace nya dengan text replacement, tetapi membutuhkan konfirmasi terlebih dahulu</td></tr>
    <tr><td>v</td>
      <td>Masuk ke mode Visual per karakter (seleksi karakter)</td></tr>
    <tr><td>V</td>
      <td>Masuk ke mode Visual per line (seleksi line)</td></tr>
    <tr><td>~</td>
      <td>Mengubah text menjadi lower case / upper case</td></tr>
    <tr><td>&gt;</td>
      <td>Mengatur indentasi ke kanan</td></tr>
    <tr><td>&lt;</td>
      <td>Mengatur indentasi ke kiri</td></tr>
    <tr><td>:q</td>
      <td>Keluar dari VIM (masa iya jaman sekarang ga bisa keluar dari VIM?)</td></tr>
    <tr><td>:w</td>
      <td>Menyimpan file (save)</td></tr>
    <tr><td>:w <nama file></nama></td>
      <td>menyimpan file dengan nama (save as)</td></tr>
    <tr><td>:wq</td>
      <td>Simpan file, kemudian keluar dari VIM</td></tr>
    <tr><td>:q!</td>
      <td>Keluar dari VIM (force)</td></tr>
    <tr><td>ZZ</td>
      <td>Sama seperti :wq</td></tr>
    <tr><td>ZQ</td>
      <td>Sama seperti :q!</td></tr></tbody></table>
<p>Mungkin ada beberapa key yang belum masuk, tapi diatas ini udah banyak banget. Masa iya mau nambah key yang lain buat dihafal? muahahaha</p>
<p>Semoga bermanfaat ya gais, thanks for stopping by</p>`
  })}`;
});
var vimKeyboardCheatsheet = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Vim_keyboard_cheatsheet,
  metadata: metadata$6
});
var metadata$5 = {
  "title": "MomentJS dengan NuxtJS",
  "date": "2018-08-09T04:52:31.000Z",
  "tags": ["javascript", "nuxtjs"],
  "draft": false,
  "description": "Menggunakan Momentjs di Nuxtjs untuk memanipulasi dan menampilkan tanggal dengan keren",
  "slug": "momentjs-dengan-nuxtjs"
};
var Momentjs_dengan_nuxtjs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$5), {}, {
    default: () => `<p>Hari ini mau post yang ringan ringan, yaitu menggunakan Momentjs di Nuxtjs. Sebelumnya saya jelaskan dahulu secara singkat kegunaan momentjs. Momentjs ini berfungsi untuk memparse, memanipulasi, dan menampilkan tanggal / waktu dengan mudah.</p>
<p>Contoh kita biasanya menggunakan format tanggal dengan new Date() yang kemudian kita get data nya sesuai dengan kebutuhan kita. Contoh sederhana seperti ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2018</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Jadi kalau pengen dapat format tanggal 2018-08-09 kita harus ribet seperti dibawah ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Panjang kan? hehehe</p>
<p>Selain itu kalau kita pengen buat tampilan seperti notifikasi <code>2 hours ago</code> atau <code>5 days ago</code> kita harus pikirkan kembali logic nya.</p>
<p>Nah disini Momentjs hadir untuk menyederhanakan semua itu. Oke langsung saja kita mulai instalasi moment di Nuxtjs. Pertama install moment menggunakan npm, buka terminal kalian dan ketik seperti dibawah ini</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ npm i moment @nuxtjs/moment</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian tambahkan module nya</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token punctuation">&#123;</span>
  modules<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">'@nuxtjs/moment'</span><span class="token punctuation">,</span>
 <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk settingan lebih lengkap silakan mampir kemari</p>
<p>Setelah itu kita coba implementasi momentjs di vue component.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span>div<span class="token operator">></span>
    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> tanggal <span class="token operator">|</span> moment <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>

<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  filters<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token function">moment</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$moment</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token string">"YYYY-MM-DD"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    tanggal<span class="token operator">:</span> <span class="token string">"2018-01-01"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>`}<!-- HTML_TAG_END --></pre>
<p>Script diatas tidak akan menampilkan tanggal <code>2018-01-01</code>, melainkan <code>7 months ago</code></p>
<hr>
<p>Nah itu tadi cara mudah memanfaatkan  Momentjs di Nuxtjs, semoga bermanfaat bagi temen - temen yang udah mampir kemari..</p>`
  })}`;
});
var momentjsDenganNuxtjs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Momentjs_dengan_nuxtjs,
  metadata: metadata$5
});
var metadata$4 = {
  "title": "Setting Vhost di Nginx",
  "date": "2019-06-15T10:36:00.000Z",
  "description": "Virtual Host berguna untuk membuat domain lokal pada mesin kita untuk memudahkan proses development",
  "tags": ["devops"],
  "draft": false,
  "slug": "setting-vhost-di-nginx"
};
var Setting_vhost_di_nginx = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$4), {}, {
    default: () => `<img class="${"center-image-post"}" src="${"https://www.nginx.com/wp-content/uploads/2018/08/NGINX-logo-rgb-large.png"}" style="${"width:100%;height:auto;"}">
<br>
<h2>WTF is Nginx?</h2>
<p>Nginx adalah sebuah lightweight web server yang saya tahu saat ini paling banyak digunakan, performa nya yang mantap mampu mengalahkan apache. Nah Nginx ini sendiri punya banyak segudang fitur, tetapi yang akan saya bahas kali ini adalah fitur vhost nya. Apa itu Vhost? Adalah Virtual Host (ealaaaahh). Gampang nya, biasanya ketika kita development web app, akses ke web nya kan biasa pakai <strong><em>http://localhost</em></strong> atau <strong><em><a href="${"http://127.0.0.1"}" rel="${"nofollow"}">http://127.0.0.1</a></em></strong> atau <strong><em>http://localhost:8000</em></strong>, dst.</p>
<p>Nah Vhost ini nanti akan kita manfaatkan agar kita bisa mengakses web local menggunakan domain seperti <strong><em><a href="${"http://local.test"}" rel="${"nofollow"}">http://local.test</a></em></strong> atau <strong><em><a href="${"http://blabla.test"}" rel="${"nofollow"}">http://blabla.test</a></em></strong> pada mesin lokal kita.</p>
<h2>How To \u2026</h2>
<p>Sebelum melangkah lebih jauh, akan saya terangkan terlebih dahulu kondisi yang akan kita setup. Pertama saya ga akan bahas setup php-frm misalnya, saya akan pakai proxy_pass saja. Sederhana. Kedua saya menggunakan OS Debian dan Nginx versi terbaru (saat artikel ini ditulis 1.16), silakan sesuaikan dengan OS kalian masing - masing ya..</p>
<p>Domain vhost yang akan kita pakai <code>local1.test</code> dan <code>local2.test</code>. Jika temen temen pengen pakai domain lain silakan sesuaikan sendiri.</p>
<p>Pertama silakan install nginx nya terlebih dahulu</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo apt install nginx</code>`}<!-- HTML_TAG_END --></pre>
<p>Di setiap OS, kadang struktur folder pada Nginx nya bisa beda. Setahu saya di Debian gak ada folder <code>sites-available</code> dan <code>sites-enabled</code>, sedangkan di Ubuntu ada. Entah ini karena perbedaan OS atau beda versi Nginx nya, belum saya cek sampai sejauh itu. Tapi yang jelas konsep nya sama saja. pada Nginx yang engga ada <code>sites-available</code> nya, config nya disimpan di folder <code>conf.d/default.conf</code>.</p>
<p>Oke kita lanjut, setelah itu copy file default.conf nya ke direktori yang sama, namun dengan nama domain kita, yakni local1.test.conf dan local2.test.conf</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/local1.test.conf
$ sudo cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/local2.test.conf</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian edit file conf yang baru</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo vim /etc/nginx/conf.d/local1.test.conf</code>`}<!-- HTML_TAG_END --></pre>
<p>Karena kita hanya akan menggunakan reverse proxy nya saja (fokus ke penggunaan vhost), bagi temen temen yang pengen implementasi php-fpm misalnya, silakan di sesuaikan sendiri.</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">server &#123;
  listen 80;
  server_name local1.test;

  location / &#123;
    proxy_pass http://127.0.0.1:8000;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian pada vhost yang kedua</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo vim /etc/nginx/conf.d/local2.test.conf</code>`}<!-- HTML_TAG_END --></pre>
<p>dan isi nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">server &#123;
  listen 80;
  server_name local2.test;

  location / &#123;
    proxy_pass http://127.0.0.1:9000;
  &#125;
&#125;</code>`}<!-- HTML_TAG_END --></pre>
<h2>Config Hosts</h2>
<p>Edit file hosts nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo vim /etc/hosts</code>`}<!-- HTML_TAG_END --></pre>
<p>Kemudian tambahkan domain lokal kita</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">127.0.0.1 localhost
127.0.0.1 local1.test
127.0.0.1 local2.test</code>`}<!-- HTML_TAG_END --></pre>
<h2>Restart Nginx</h2>
<p>Setelah semua nya siap, silakan restart Nginx nya</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ sudo service nginx restart</code>`}<!-- HTML_TAG_END --></pre>
<p>Nah karena kita hanya reserve proxy, maka silakan jalankan app masing - masing, misalkan jalanin laravel di <strong><em>php artisan serve \u2014port=8000</em></strong> dan <strong><em>php artisan serve \u2014port=9000</em></strong>. Setelah itu jika kita akses <strong><em><a href="${"http://local1.test"}" rel="${"nofollow"}">http://local1.test</a></em></strong> maka web akan menampilkan aplikasi laravel dengan port 8000, sedangkan jika kita akses <strong><em><a href="${"http://local2.test"}" rel="${"nofollow"}">http://local2.test</a></em></strong> maka akan tampil laravel dengan port 9000.</p>
<p>Mungkin kalian akan bertanya tanya. Kenapa pada vhost semuanya menggunakan port 80? Apakah tidak bentrok? Jawabannya tidak akan bentrok karena masing - masing vhost punya domain yang berbeda. Justru jika tidak pakai port 80 di vhost nya, nanti nya ketika akses web harus mencantumkan port nya juga, misalnyaseperti <strong><em><a href="${"http://local1.test:81"}" rel="${"nofollow"}">http://local1.test:81</a></em></strong>.</p>
<hr>
<p>Demikian post sederhana ini mengenai vhost. Jika kalian menggunakan Mac, bisa menggunakan Laravel Valet yang mana fungsi nya sama seperti vhost ini. Semoga bermanfaat\u2026</p>`
  })}`;
});
var settingVhostDiNginx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Setting_vhost_di_nginx,
  metadata: metadata$4
});
var metadata$3 = {
  "draft": false,
  "title": "Auth Module di Nuxtjs",
  "date": "2018-11-02T21:58:52.000Z",
  "tags": ["nuxtjs"],
  "description": "Autentikasi jadi lebih mudah menggunakan Auth Module di Nuxtjs",
  "slug": "auth-module-di-nuxtjs"
};
var Auth_module_di_nuxtjs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$3), {}, {
    default: () => `<p>Hai hai mumpung lagi bikin project baru pake Nuxtjs, sekalian bikin postingan tentang auth module di Nuxtjs. Nah dari beberapa kasus ada temen temen yang tanya ke saya mengenai authentikasi di nuxtjs itu seperti apa, apakah dilakukan secara manual atau mungkin ada package / library yang bisa memudahkan? Saya bilang ada, silakan coba install Auth module nya Nuxtjs. Silakan baca docs dulu <a href="${"https://auth.nuxtjs.org/"}" rel="${"nofollow"}">kesini</a>.</p>
<p><img src="${"https://cdn.staticaly.com/img/cdn-images-1.medium.com/max/800/0*Jd5jjU4iiJcaCrXd"}"></p>
<p>Alasan kenapa saya bikin postingan ini adalah karena mungkin bagi para pemula Nuxtjs kadang ketika pake module ini agak kebingungan harus bagaimana cara pake nya. Saya akan coba untuk jelasin gimana sih package ini bekerja, dan saya akan jelasin sesederhana mungkin ya, untuk settingan yang lebih advance bisa langsung coba sendiri sambil ber eskperimen. </p>
<p>Auth module ini bekerja secara global (bisa juga per component sih), ketika kita berpindah halaman maka secara otomatis auth module ini menjalankan auth middleware nya dengan cara memeriksa apakah user sudah login atau belum (token disimpan di cookies), jika di cookies kosong (ga ada token, atau mungkin expired) maka module ini secara otomatis akan me-redirect kita ke halaman login. Nah mungkin ada yang bertanya, trus data data user nya disimpan dimana? Bebas disimpan dimana, tapi untuk saya pribadi lebih suka simpan di vuex, jadi ketika user melakukan refresh halaman, auth module ini melakukan get data user yang kemudian datanya disimpan di vuex.</p>
<h2>Cara setting nya</h2>
<p>Pertama install dulu dong</p>
<pre class="${"language-undefined"}"><!-- HTML_TAG_START -->${`<code class="language-undefined">$ yarn add @nuxtjs/auth @nuxtjs/axios</code>`}<!-- HTML_TAG_END --></pre>
<p>Kenapa kok install axios juga? Yap karena auth module menggunakan axios untuk proses authentication nya. Kemudian di file nuxt.config.js tambahin ini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">modules<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">'@nuxtjs/axios'</span><span class="token punctuation">,</span> <span class="token string">'@nuxtjs/auth'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
router<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  middleware<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'auth'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Sampai sini settingan dasar udah beres, setelah itu kita atur mau pakai strategi yang bagaimana. Strategi yang paling gampang begini aja sih, silakan kalau temen temen mau kustomisasi lebih jauh lagi</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">auth<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  redirect<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    login<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>
    home<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>
    logout<span class="token operator">:</span> <span class="token string">'/login'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  strategies<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    local<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      endpoints<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        login<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/api/login'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>
          propertyName<span class="token operator">:</span> <span class="token string">'api_token'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        user<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/api/user/details'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>
          propertyName<span class="token operator">:</span> <span class="token string">'user'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        logout<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          url<span class="token operator">:</span> <span class="token string">'/api/logout'</span><span class="token punctuation">,</span>
          method<span class="token operator">:</span> <span class="token string">'post'</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  token<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'token'</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  cookie<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'token'</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Penjelasannya sebagai berikut</p>
<p>Pada element redirect, tentukan dimana halaman login, home, logout nya. Jadi ketika user belum terotentikasi, maka diarahkan ke halaman login. Jika user sudah terotentikasi, langsung lempar ke halaman home. Dan juga kalau user udah berhasil logout, langsung diarahkan ke halaman login lagi.</p>
<p>Pada strategies, saya menggunakan local yang mana authentikasi nya memakai backend kita sendiri. Kalau pengen pake OAuth juga bisa, cek aja sendiri di docs nya :D. Disini terbagi menjadi 3 endpoint, yaitu</p>
<ol><li>Endpoint login berfungsi untuk melakukan proses login, yang mana propertyName ini adalah nama variable token yang didapat dari response login nya. Untuk method nya kita pake post (masa iya pake put).</li>
<li>Endpoint user berfungsi untuk get data user yang sedang login. Misalnya ketika kita refresh halaman, karena kita udah terotentikasi (udah login), maka kita pengen dapatin data data user seperti nama, alamat, jabatan, dll. Method nya pake get dan propertyName nya bebas, disini saya pake user aja.</li>
<li>Endpoint logout bisa pakai get dan bisa pakai post. Bebas</li></ol>
<h2>Bikin Vuex Store</h2>
<p>Kenapa perlu bikin vuex store? Karena Auth module ini akan bekerja dengan menggunakan vuex untuk menyimpan state auth nya. Bikin simple saja untuk awal, nanti bisa dikembangkan sendiri.</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">createStore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token comment">// ini tempate module / getter / setter / state / actions</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> createStore<span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<h2>Cara pake nya</h2>
<p>Untuk proses login, pake method begini</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$auth
<span class="token punctuation">.</span><span class="token function">loginWith</span><span class="token punctuation">(</span><span class="token string">"local"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span>
    password<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'gagal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk logout tinggal gini aja, easy..</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Untuk ngambil data yang didapat dari backend (masih inget gak? Ketika refresh kan kita dapet tuh data data user nya).</p>
<pre class="${"language-javascript"}"><!-- HTML_TAG_START -->${`<code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$auth<span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Catatan : Auth module akan selalu memeriksa <code>this.$auth.user</code> , so pastikan ketika kalian fetch user data, return response nya harus didalam elemen user. Sebagai contoh jika kalian menggunakan Laravel di backend nya. Return response nya harus begini</p>
<pre class="${"language-php"}"><!-- HTML_TAG_START -->${`<code class="language-php"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span> <span class="token operator">=></span> <span class="token class-name static-context">Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}<!-- HTML_TAG_END --></pre>
<p>Kalo <code>this.$auth.user</code> ga ada isinya, maka auth module ini akan menganggap bahwa kalian belum login, jadi kalian akan selalu di redirect ke halaman login.</p>
<hr>
<p>Nah demikian postingan kali ini, singkat sih dan sederhana. Kalau temen temen pembaca pengen mengimplementasikan yang lebih pro lagi, silakan mampir aja di docs nya. Yang penting kita tau dulu gimana cara kerjanya module ini dan gimana cara pake nya sesederhana mungkin. Suwun wes mampir rek :D</p>`
  })}`;
});
var authModuleDiNuxtjs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Auth_module_di_nuxtjs,
  metadata: metadata$3
});
var metadata$2 = {
  "title": "Perubahan Jam Tidur",
  "date": "2020-05-21T01:00:00.000Z",
  "description": "Terjadi perubahan jam tidur setelah fulltime kerja dirumah",
  "tags": ["Story"],
  "draft": false,
  "slug": "perubahan-jam-tidur"
};
var Perubahan_jam_tidur = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$2), {}, {
    default: () => `<a><img src="${"https://asset-a.grid.id//crop/0x0:0x0/700x465/photo/2019/04/12/2975484616.jpg"}" title="${"source: https://asset-a.grid.id"}"></a>
<p>Sudah bukan rahasia kalau freelancer atau remote worker bisa kerja dimana dan kapan aja, untuk hal \u201Ckapan aja\u201D nya ini ga bisa terjadi di semua perusahaan, karena sistem tiap pekerjaan beda beda, ada yang pake tracker yang mana buat nge-track wajib kerja mulai pukul 9 sampai 5 sore misalkan. Dan ada juga perusahaan yang menerapkan asalkan task kamu selesai, yaudah, entah itu cuma makan waktu 3 jam.</p>
<p>Nah 2 bulan yang lalu kerjaan saya dobel dobel (sampai sekarang sih), bahkan ngehajar beberapa project sekaligus, pagi nya ngantor malem nya ngerjain project lain. Nah karena kecapean juga karena harus ngantor, akhir nya kuputuskan untuk resign dan memilih untuk fokus fulltime di remote working (freelance juga pastinya).</p>
<p>Nah karena jam kerja remote working nya ini sebenernya pagi sampai sore, cuman ga terlalu ketat juga, jadi terkadang kalau pagi / siang kerja dan lagi suntuk, yaudah ga perlu dipaksain, ngerjain project yang lain sembari refreshing.</p>
<p>2 bulan ini lagi padet padet nya kerjaan, bahkan sampai ga aktif di beberapa komunitas. Karena dobel dobel nya kerjaan ini, membuat <strong>tidur</strong> bukan untuk dijadikan penghilang lelah, tetapi hanya untuk penghilang pusing kepala.</p>
<p>Nah jam tidur saya yang telah berubah adalah seperti ini. Aktivitas / kerja di mulai jam 8, kadang jam 9 juga tergantung bangun nya jam berapa haha. Kemudian mulai kerja sampai sore jam 5an. Setelah itu rehat sebentar, main sama anak, dsb. Setelah Isya baru mampir ke tempat tidur buat tidur bentar, dan diniatkan untuk bangun di sekitar jam 10.</p>
<p>Jam 10 bangun, mulai ke meja kerja lagi ngoding sampe subuh. Setelah subuh baru mulai tidur lagi dan bangun di jam 8an. Justru ngoding malam ini yang paling super, entah kenapa di jam jam malam begini badan terasa fresh, otak mikir nya juga lancar banget, mungkin karena suasana hening malam yang ngebantu aktivitas malam ini.</p>
<p>Note : Jangan tanya kapan jam makan, mandi, sholat, dan buang air nya :D</p>`
  })}`;
});
var perubahanJamTidur = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Perubahan_jam_tidur,
  metadata: metadata$2
});
var metadata$1 = {
  "draft": false,
  "title": "Migrasi ke VIM",
  "date": "2018-11-13T06:46:35.000Z",
  "tags": ["opini"],
  "description": "Cerita singkat kenapa saya akhirnya migrasi ke VIM, yang awalnya memakai Atom dan Visual Studio Code",
  "slug": "migrasi-ke-vim"
};
var Migrasi_ke_vim = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata$1), {}, {
    default: () => `<p>Cerita singkat kenapa saya akhirnya migrasi ke VIM, yang awalnya memakai Atom dan Visual Studio Code. VSCode adalah sebuah text editor yang saat ini lagi hits banget, siapa sih programmer yang belum pernah pake ini? Mayoritas orang orang banyak yang pake editor ini, karena memang fitur fitur yang ditawarkan disini sangatlah lengkap, apalagi didukung oleh plugin - plugin yang kece. Postingan kali ini kita bahas vscode ama vim doang yak, Atom gak ikut soalnya udah lama ga pake Atom :D.</p>
<p>VScode dengan segala kekerenannya punya segudang fitur yang udah tersedia, jika masih kurang atau butuh plugin kita juga bisa install sendiri. Singkat nya, VSCode ini udah include Git control, syntax highlighting, code completion, code refactoring dan snippets. Kalo pengen tampilan yang beda, bisa install berbagai macam tema, kalo pengen munculin code map, tinggal install, dll. Enak kan? butuh apa apa langsung install, udah lengkap banget. Terus kenapa saya migrasi ke vim? Apa alasannya ?</p>
<p><img src="${"https://cdn.staticaly.com/img/farm2.staticflickr.com/1964/30912919047_1394ebe190_b.jpg"}"></p>
<h2>Latar Belakang</h2>
<p>Haha latar belakang, udah kayak ngerjain skripsi aja. Oke, pertama alasan kenapa pindah ke vim, karena VSCode berat. Maklum lah ya, karena emang dia dibikin pake Electron. Saya pribadi sebagai orang yang ga suka app berat berat harus mikir gimana cara biar ga berat, bahkan laptop pun di install Debian tanpa UI yang menarik haha. </p>
<p>Alasan kedua, Meminimalisir penggunaan mouse. Kadang ribet juga pas enak enak ngoding, harus switch pake mouse buat klik ini itu. Ya memang sih ada shortcut keyboard nya, tapi saya ga mau menuh menuhin otak untuk ngehafalin shortcut key yang engga penting.</p>
<p>Yang ketiga, buat keren kerenan aja haha.</p>
<h2>Plugin yang saya pake</h2>
<p>Karena saya emang bener bener baru di vim, jadi plugin yang saya install juga masih sederhana, yang penting udah cukup buat kebutuhan ngoding saya.</p>
<ol><li><a href="${"https://github.com/VundleVim/Vundle.vim"}" rel="${"nofollow"}">Vundle</a>. Plugin yang satu ini berguna untuk memanajemen berbagai plugin. Plugin yang memanajemen plugin, bingung gak? Cobain aja biar ga bingung :D</li>
<li><a href="${"https://github.com/pangloss/vim-javascript"}" rel="${"nofollow"}">vim-javascript</a>. Bagi javascript developer, wajib install plugin ini. berfungsi untuk indentation dan syntax support.</li>
<li><a href="${"https://github.com/tpope/vim-fugitive"}" rel="${"nofollow"}">vim-fugitive</a>. Sebagai Git wrapper, kamu bisa melakukan aktivitas git menggunakan plugin ini.</li>
<li><a href="${"https://github.com/scrooloose/nerdtree"}" rel="${"nofollow"}">Nerdtree</a>. File explorer berbentuk tree di sebelah kiri / kanan vim. Fitur ini umum dipakai di semua editor.</li>
<li><a href="${"https://github.com/ajh17/Spacegray.vim"}" rel="${"nofollow"}">Spacegrey-vim</a>. Colorscheme yang saya pake di vim, warna nya kalem dan enak dimata.</li>
<li><a href="${"https://github.com/posva/vim-vue"}" rel="${"nofollow"}">Vim-vue</a>. Syntax highlighting untuk Vuejs</li>
<li><a href="${"https://github.com/digitaltoad/vim-pug"}" rel="${"nofollow"}">Vim-pug</a>. Bagi pengguna Pugjs, wajib install ini. Berfungsi untuk syntax highlighting di vuejs yang pakai pug.</li>
<li><a href="${"https://github.com/vim-airline/vim-airline"}" rel="${"nofollow"}">Vim-airlines</a>. Status bar untuk VIM</li>
<li><a href="${"https://github.com/gko/vim-coloresque"}" rel="${"nofollow"}">Vim-coloresque</a>. Color highlighter, fungsi nya kalau ada kodingan warna, dia akan muncul warna di kodingan itu. Bingung cara jelasinnya haha.</li>
<li><a href="${"https://github.com/prettier/vim-prettier"}" rel="${"nofollow"}">Vim-prettier</a>. Prettier untuk VIM</li>
<li><a href="${"https://github.com/tpope/vim-commentary"}" rel="${"nofollow"}">Vim-commentary</a>. Untuk bikin komentardi vim</li>
<li><a href="${"https://github.com/wakatime/vim-wakatime"}" rel="${"nofollow"}">Vim-wakatime</a>. Buat tracking aktivitas ngoding.</li>
<li><a href="${"https://github.com/w0rp/ale"}" rel="${"nofollow"}">ale</a>. Linting di vim, saya pake buat deteksi kalau ada kesalahan koding.</li>
<li><a href="${"https://github.com/junegunn/fzf"}" rel="${"nofollow"}">FZF</a>. Berfungsi untuk pencarian file di vim.</li>
<li><a href="${"https://valloric.github.io/YouCompleteMe/"}" rel="${"nofollow"}">YouCompleteMe</a>. Code completion di vim</li>
<li><a href="${"https://github.com/Yggdroot/indentLine"}" rel="${"nofollow"}">IndentLine</a>. Untuk menampilkan indent line</li></ol>
<h2>Kesan pake VIM</h2>
<p>Karena masih awal banget pake vim, ga banyak keyboard shortcut yang dipake di vim. Hanya beberapa yang sering saya pake untuk kebutuhan ngoding sederhana. Males banget sih kalau harus nonton youtube atau baca key shortcut cheatsheet untuk cari tau key nya. Mending langsung pake aja, kalau bingung pengen ngapain ya gugling bentar buat cari tau key shortcut yang dibutuhkan. Selama seminggu ini pake vim masih agak meraba raba shortcut nya, tapi udah lumayan lancar sih. Enak banget pake nya, udah ga ngurusin mouse lagi. Ngoding jadi lebih efisien dan cepat, serta yang paling enak performa nya mantep, ga lemot kaya si vscode.</p>
<h2>Yang belum ada di VIM</h2>
<p>Mungkin di luar sana sudah ada plugin yang siap untuk dipakai, saya belum nemu aja sih dan juga belum butuh. Seperti code mapping (sama seperti di vscode dan atom), snippet yang udah siap untuk templating awal, dll. Saya yakin udah ada plugin nya, dan saya belum nemu aja. Nanti seiring berjalannya waktu, VIm saya akan lengkap sesuai dengan kebutuhan saya :D.</p>
<p>Kalo pengen liat setting dofile .vimrc saya, silakan mampir <a href="${"https://gist.github.com/nusendra/0a2a27ea7b0b657276c12c44e99ebb3c"}" rel="${"nofollow"}">kesini</a></p>
<p>Segitu aja postingan singkat ini, semoga bermanfaat bagi temen - temen pembaca.</p>`
  })}`;
});
var migrasiKeVim = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Migrasi_ke_vim,
  metadata: metadata$1
});
var metadata = {
  "title": "SPA vs MPA",
  "date": "2018-01-25T00:43:46.000Z",
  "tags": ["opini"],
  "draft": false,
  "description": "SPA vs MPA wajib untuk diketahui, karena untuk membuat project web kita harus memilih salah satu yang paling cocok dengan kebutuhan dan spesifikasi project yang akan kita bangun.",
  "slug": "spa-vs-mpa"
};
var Spa_vs_mpa = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(MarkdownLayout, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign($$props, metadata), {}, {
    default: () => `<p>Seperti yang sudah saya janjikan sebelumnya untuk jelasin SPA vs MPA. Apa sih SPA itu? Dan apa pula nih MPA? SPA adalah Single Page Application sedangkan MPA adalah Multi Page Application atau biasa yang disebut traditional web app. Masing - masing metode punya kelebihan dan kekurangan, tergantung kebutuhan kita apakah sistem yang akan kita buat perlu menerapkan SPA atau MPA.</p>
<p>Sebelum lanjut membaca postingan ini, saya sarankan untuk membaca blog post saya sebelum ini <a href="${"https://nusendra.com/post/menentukan-teknologi-yang-tepat-sebelum-membuat-project"}" rel="${"nofollow"}">disini</a> untuk menentukan sistem dan metode apa yang cocok untuk aplikasi yang akan temen - temen bangun. Sekali lagi saya tekankan, SPA dan MPA punya kelebihan dan kekurangan masing - masing, pakailah yang sesuai dengan situasi dan kondisi yang temen - temen butuhkan. Diharapkan setelah membaca blog post ini, temen - temen bisa menentukan sebaiknya memakai SPA atau MPA untuk web app nya.</p>
<h2>SINGLE PAGE APPLICATION</h2>
<p>Oke, kita ke pembahasan pertama. Seperti namanya, Single Page yang berarti hanya ada 1 halaman aplikasi. Tapi ini bukan artian yang sesungguhnya ya, karena dalam real pengaplikasiannya ada beberapa halaman. maksudnya disini adalah kita gak akan menemukan reload browser ketika berpindah halaman, nah maka dari itu disebut single page #cmiiw.  Contoh nya single page application itu apa sihh??? Contohnya ada seperti di Gmail, Medium, Github, dll. Jadi detail nya seperti ini, ketika berpindah halaman, tidak semua elemen di page itu kita reload / muat ulang. Setiap kita berpindah halaman, yang di load ulang hanya elemen konten nya saja. Dengan demikian akses kedalam aplikasi ini sangat cepat dan tentunya tidak memakan banyak kuota internet.</p>
<h3>PROS (Kelebihan)</h3>
<p>SPA sangat cepat. Kita hanya meload halaman (html + css + js) diawal membuka aplikasi, kemudian setelah nya SPA ini hanya me load data nya saja, dan tentu saja tidak meload halaman web nya (selama halaman itu tidak di refresh, kalo di refresh ya jelas dong di load lagi halamannya).</p>
<p>Keuntungan bagi programmer, kita ga perlu sebuah web server untuk menjalankan SPA, kita hanya ngoding html, css dan js nya kemudian bisa langsung dijalankan via file (<code>file://uri</code>). Hal ini bisa dilakukan jika kita pakai framework javascript ya, kalau pakai framework PHP yang mengusung SPA, ya tentunya butuh web server.</p>
<p>SPA mudah di debug pakai Chrome. Jika kalian menggunakan VueJS maka ketika kalian menginstall Vue Devtools, anda bisa dengan mudah memantau data, component, route, state management, dll di Chrome DevTools. Keren !!</p>
<p>Tentu nya ketika kalian selesai dengan project javascript yang mengusung metode SPA ini, anda akan dengan mudah membuat aplikasi mobile nya. Aplikasi mobile disini adalah aplikasi yang berbasis javascript seperti React Native, Nativescript-Vue, atau Weex. Ketiga nya ini dibangun dengan memanfaatkan javascript.</p>
<p>SPA bisa menyimpan data di cache atau local storage. Jadi jika kalian berada di kondisi offline, web app kalian masih bisa berjalan dengan baik karena SPA disimpan di ci cache / local storage. Selain itu pemanfaatan PWA (Progressive Web App) juga akan sangat membantu</p>
<h3>CONS (Kekurangan)</h3>
<p>Sangat sulit sekali untuk optimasi SEO di SPA, karena SPA hanya meload file javascript saja. Tetapi jika ingin menerapkan SEO optimization, bisa mencoba teknik SSR (Server Side Rendering). SSR adalah merender halaman javascript menjadi html yang di proses di server, kemudian server menyajikan halaman html ke client side. Jika kalian menggunakan VueJS untuk frontend, maka alternatif SSR yang terbaik bisa mencoba NuxtJS.</p>
<p>Jika aplikasi yang dibangun tergolong besar, maka pada load awal akan memakan waktu. Tidak jarang pula aplikasi SPA ini membutuhkan memory yang lebih besar. Tetapi ini bukan masalah besar yang dihadapi jika kalian memakai NuxtJS. Karena di Nuxt, apa yang ada di halaman itu saja yang di load, jadi sangat meringankan beban memory di sisi client.</p>
<p>Javascript di browser harus enabled. Tetapi di jaman sekarang, mana ada sih yang menonaktifkan javascript nya?</p>
<h2>MULTI PAGE APPLICATION</h2>
<p>MPA kebalikan dari SPA. Jika pada SPA kita mengenal single page, maka di MPA ini kita mengenal multi page (<code>#ya iyalah</code>). MPA juga disebut dengan tradisional web app. Seperti yang sudah kita ketahui, website jaman old dulu masih menggunakan MPA yakni ketika berganti ke halaman baru di web itu, maka website nya akan meload ulang seluruh elemen di halaman itu. Yang artinya ketika kita ingin melihat konten blog, maka website akan me load ulang seluruh elemen web (header, sidebar, dan footer) yang mana hal itu tidak kita inginkan, karena kita hanya ingin melihat konten nya saja. Otomatis hal ini juga berpengaruh dengan performa loading web, selain itu juga menyedot kuota internet lebih banyak. Contoh sederhanaweb MPA adalah Google.com , ketika kita pindah ke halaman 2, google akan meload ulang header nya.</p>
<h3>PROS (Kelebihan)</h3>
<p>Sangat bagus untuk SEO. Karena di tiap halaman kita bisa menaruh keyword yang berbeda. Selain itu google crawler juga bisa langsung merayapi halaman kita, karena halaman kita sudah ter render ke mode html.</p>
<h3>CONS (Kekurangan)</h3>
<p>Bagi user, membutuhkan banyak kuota internet karena setiap berpindah halaman, harus mendownload ulang seluruh elemen halaman, yang mana ini bukan sangat tidak efisien.</p>
<p>Jika memakai framework, frontend dan backend menjadi satu project / repository. Hal ini menyebabkan proses maintenance akan lebih menyusahkan, bahkan untuk kerja tim kadang juga ada kendala. Tapi ini bukan masalah besar sih jika project sudah di manage dengan baik.</p>
<p>Kesusahan dalam membuat frontend / UI yang interaktif. Bisa aja sih di frontend nya kita include kan framework JS, tapi ketika kalian mencoba nya sendiri, hal ini sama sekali tidak efisien.</p>
<hr>
<h2>Kesimpulan</h2>
<p>Jika temen temen pengen membuat sebuah blog, yang mana membutuhkan SEO agar google bisa dengan mudah merayapi konten kita, maka pakailah MPA. Jika kalian membuat sebuah web app untuk internal kantor misalnya, atau sistem informasi di sebuah perkantoran / sekolah, halaman dashboard user, dan lainnya, temen temen bisa pakai SPA yang mana web app ini tidak membutuhkan SEO.</p>
<p>Nah, sekarang apakah sudah ada pandangan harus pake teknologi dan metode seperti apa di project yang akan datang? :-)</p>
<p>Jika ada tambahan dan koreksi, silakan tulis di kolom komentar yaa. Mohon maaf kalau ada kesalahan penulisan atau kurang tepat dalam menuliskan blog ini. Semoga bermanfaat bagi temen - temen pembaca.</p>`
  })}`;
});
var spaVsMpa = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Spa_vs_mpa,
  metadata
});

// .svelte-kit/netlify/entry.js
init();
async function handler(event) {
  const { path: path2, httpMethod, headers, rawQuery, body, isBase64Encoded } = event;
  const query = new URLSearchParams(rawQuery);
  const encoding = isBase64Encoded ? "base64" : headers["content-encoding"] || "utf-8";
  const rawBody = typeof body === "string" ? Buffer.from(body, encoding) : body;
  const rendered = await render({
    method: httpMethod,
    headers,
    path: path2,
    query,
    rawBody
  });
  if (rendered) {
    return {
      isBase64Encoded: false,
      statusCode: rendered.status,
      ...splitHeaders(rendered.headers),
      body: rendered.body
    };
  }
  return {
    statusCode: 404,
    body: "Not found"
  };
}
function splitHeaders(headers) {
  const h = {};
  const m = {};
  for (const key in headers) {
    const value = headers[key];
    const target = Array.isArray(value) ? m : h;
    target[key] = value;
  }
  return {
    headers: h,
    multiValueHeaders: m
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  handler
});
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
 * strip-bom-string <https://github.com/jonschlinkert/strip-bom-string>
 *
 * Copyright (c) 2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */
